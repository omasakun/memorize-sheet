function ge(id) {
    return document.getElementById(id);
}
function ce(tagName) {
    return document.createElement(tagName);
}
function cLI(innerText, classes, id, onClickFn) {
    const li = ce("li");
    li.innerText = innerText;
    classes.forEach(_ => addC(li, _));
    if (id)
        li.id = id;
    if (onClickFn)
        onClick(li, onClickFn);
    return li;
}
function remC(elm, cls) {
    elm.classList.remove(cls);
}
function addC(elm, cls) {
    elm.classList.add(cls);
}
function remAll(elm) {
    elm.innerHTML = "";
}
function onClick(elm, fn) {
    elm.addEventListener("click", fn);
}
function onLoad(fn) {
    window.addEventListener("load", fn);
}
class StringListStorage {
    constructor(key) {
        this.key = key;
        this._keys = [];
    }
    get keys() {
        this.update();
        return this._keys.slice();
    }
    set keys(keys) {
        this._keys = keys.slice();
        this.updateStorage();
    }
    get storageKey() {
        return this.key + "-stringListStorage";
    }
    has(key) {
        return this.keys.indexOf(key) >= 0;
    }
    add(key) {
        this._keys.push(key);
        this.updateStorage();
    }
    addIfNotExist(key) {
        this.update();
        if (this._keys.indexOf(key) < 0)
            this.add(key);
    }
    remove(key) {
        this.update();
        const i = this._keys.indexOf(key);
        if (i < 0)
            return false;
        this._keys.splice(i, 1);
        this.updateStorage();
        return true;
    }
    clear() {
        localStorage.removeItem(this.storageKey);
        this.update();
    }
    update() {
        const data = localStorage.getItem(this.storageKey);
        if (!data) {
            this._keys = [];
        }
        else {
            try {
                const list = JSON.parse(data);
                if (!Array.isArray(list) || list.some(_ => typeof _ != "string")) {
                    this._keys = [];
                }
                else {
                    this._keys = list;
                }
            }
            catch (e) {
                this._keys = [];
            }
        }
        this.updateStorage();
    }
    updateStorage() {
        const item = JSON.stringify(this._keys);
        localStorage.setItem(this.storageKey, item);
    }
}
class SelectOrInputUI {
    constructor(idPrefix, storage, onEnter = () => void 0) {
        this.root = ge(idPrefix);
        this.ul = ge(idPrefix + "_ul");
        this.input = ge(idPrefix + "_input");
        this.inputBtn = ge(idPrefix + "_enter");
        this.storage = storage;
        this.onEnter = onEnter;
        const self = this;
        onClick(this.inputBtn, () => {
            self.callOnEnter(this.input.value);
        });
    }
    show() {
        remC(this.root, "hide");
        const items = this.storage.keys;
        const ul = this.ul;
        remAll(ul);
        const self = this;
        items.forEach(text => {
            const li = cLI(text, [], undefined, () => {
                self.callOnEnter(text);
            });
            ul.appendChild(li);
        });
        this.input.value = "";
    }
    hide() {
        addC(this.root, "hide");
    }
    callOnEnter(text) {
        this.onEnter(text);
    }
}
class SigninUI {
    constructor(onClickFn = () => void 0) {
        this.root = ge("signin");
        this.btn = ge("signin_btn");
        this.onClick = onClickFn;
        const self = this;
        onClick(this.btn, () => {
            self.onClick();
        });
    }
    show() {
        remC(this.root, "hide");
    }
    hide() {
        addC(this.root, "hide");
    }
}
class QSetListUI {
    constructor() {
        this.onSelect = (item) => { };
        this.root = ge("qlist");
        this.ul = ge("qlist_ul");
    }
    show(qList) {
        remC(this.root, "hide");
        const ul = this.ul;
        remAll(ul);
        const self = this;
        qList.forEach(_ => {
            const li = cLI(_.sheetTitle, [], undefined, () => {
                self.onSelect(_);
            });
            ul.appendChild(li);
        });
    }
    hide() {
        addC(this.root, "hide");
    }
}
class QAndAUI {
    constructor() {
        this.items = [];
        this.onNext = (results) => { };
        this.root = ge("qanda");
        this.itemRoot = ge("qanda_itemroot");
        this.nextBtn = ge("quanda_next");
        this.log = ge("quanda_log");
        const self = this;
        onClick(this.nextBtn, () => self.callOnNext());
    }
    show(qAndAs, log) {
        remC(this.root, "hide");
        const itemRoot = this.itemRoot;
        remAll(itemRoot);
        this.items = [];
        const self = this;
        qAndAs.forEach(_ => {
            const div = ce("div");
            const q = ce("div");
            const a = ce("div");
            q.innerText = _.q;
            a.innerText = _.a;
            onClick(q, () => {
                remC(div, "trans-a");
                remC(div, "wrong");
                addC(div, "correct");
            });
            onClick(a, () => {
                remC(div, "trans-a");
                remC(div, "correct");
                addC(div, "wrong");
            });
            addC(div, "trans-a");
            addC(q, "qanda_item_q");
            addC(a, "qanda_item_a");
            div.appendChild(q);
            div.appendChild(a);
            addC(div, "qanda_item");
            itemRoot.appendChild(div);
            self.items.push(div);
        });
        this.showLog(log);
    }
    hide() {
        addC(this.root, "hide");
    }
    callOnNext() {
        const results = [];
        const notAnswereds = [];
        this.items.forEach((_, i) => {
            if (_.classList.contains("correct"))
                results.push(true);
            else if (_.classList.contains("wrong"))
                results.push(false);
            else
                notAnswereds.push(i + 1);
        });
        if (notAnswereds.length > 0) {
            this.showLog("You haven't answered to Q." + notAnswereds.join(", "));
            return;
        }
        this.onNext(results);
    }
    showLog(log) {
        this.log.innerText = log;
    }
}
class SheetProp {
    constructor(fileID, item) {
        this.fileID = fileID;
        this.item = item;
    }
    toQItem() {
        if (this.item.sheetType != "GRID")
            return undefined;
        return {
            fileID: this.fileID,
            sheetID: this.item.sheetId,
            sheetTitle: this.item.title
        };
    }
}
var DateUtil;
(function (DateUtil) {
    function parse(s) {
        const tmp = Date.parse(s);
        if (isNaN(tmp))
            return undefined;
        return new Date(tmp);
    }
    DateUtil.parse = parse;
    function str(d) {
        if (!d)
            return "";
        return d.toISOString();
    }
    DateUtil.str = str;
    function today() {
        return onlyDate(new Date());
    }
    DateUtil.today = today;
    function onlyDate(date) {
        return new Date(getDateNum(date));
    }
    DateUtil.onlyDate = onlyDate;
    function getDateNum(date) {
        return Math.floor(date.getTime() / 60 / 60 / 24 / 1000) * 60 * 60 * 24 * 1000;
    }
    DateUtil.getDateNum = getDateNum;
})(DateUtil || (DateUtil = {}));
function cells2QAndA(qItem, row, cells, warn) {
    let q = cells[0], a = cells[1], log = cells[2];
    let state = cells[3];
    let prevDate = DateUtil.parse(cells[4]);
    let interval = parseInt(cells[5]);
    let nextDate = DateUtil.parse(cells[6]);
    let failCount = parseInt(cells[7]);
    const initOrder = Math.random();
    if (state == "")
        state = "unseen";
    if (state != "unseen" && state != "learn" && state != "relearn") {
        warn('"State" should be set to "unseen", "learn" or "relearn"');
        state = "unseen";
    }
    if (state == "learn" || state == "relearn") {
        try {
            if (!prevDate || !nextDate || isNaN(interval) || isNaN(failCount)) {
                throw "";
            }
            const item = { q, a, log, state, prevDate, interval, nextDate, failCount, qItem, row, initOrder };
            return item;
        }
        catch (_a) {
            warn('"State" should be set to "unseen" because some data are incorrect.');
            state = "unseen";
            failCount = 0;
            prevDate = undefined;
            interval = NaN;
            nextDate = undefined;
        }
    }
    if (failCount != 0 && !isNaN(failCount))
        warn('"Fail Count" should be "" because the item is "unseen"');
    if (prevDate != undefined)
        warn('"Prev Date" should be "" because the item is "unseen"');
    if (!isNaN(interval))
        warn('"Interval" should be "" because the item is "unseen"');
    if (nextDate != undefined)
        warn('"Next Date" should be "" because the item is "unseen"');
    failCount = 0;
    prevDate = undefined;
    interval = undefined;
    nextDate = undefined;
    const item = { q, a, log, state: "unseen", prevDate, interval, nextDate, failCount, qItem, row, initOrder };
    return item;
}
function qAndA2UpdateReq(qAndA) {
    const _ = qAndA;
    const row = _.row, sheet = _.qItem.sheetTitle;
    const intervalText = _.interval ? _.interval.toString() : "0";
    const range = sheet + "!C" + row + ":H" + row;
    const values = [[_.log, _.state, DateUtil.str(_.prevDate), _.interval || 0, DateUtil.str(_.nextDate), _.failCount]];
    return { range, values };
}
var GSheet;
(function (GSheet) {
    var isLoaded = false;
    function load() {
        gapi.load('client:auth2', () => {
            isLoaded = true;
        });
    }
    GSheet.load = load;
    function init(clientID, onDone = () => { }, onErr = (e) => { }) {
        if (!isLoaded)
            return false;
        gapi.client.init({
            clientId: clientID,
            scope: 'https://www.googleapis.com/auth/spreadsheets',
            discoveryDocs: ['https://sheets.googleapis.com/$discovery/rest?version=v4']
        }).then(_ => {
            onDone();
            if (gapi.auth2.getAuthInstance().isSignedIn.get())
                GSheet.onSignIn();
            gapi.auth2.getAuthInstance().isSignedIn.listen((isSignedIn) => {
                if (isSignedIn)
                    GSheet.onSignIn();
                else
                    GSheet.onSignOut();
            });
        }).catch(e => {
            onErr(e);
        });
        return true;
    }
    GSheet.init = init;
    function promptSignIn() {
        gapi.auth2.getAuthInstance().signIn();
    }
    GSheet.promptSignIn = promptSignIn;
    GSheet.onSignIn = () => { };
    GSheet.onSignOut = () => { };
    function getQList(fileID, onSuccess = (qList) => { }, onErr = (e) => { }) {
        gapi.client.sheets.spreadsheets.get({
            spreadsheetId: fileID
        }).then(res => onSuccess(res.result.sheets.map(_ => new SheetProp(fileID, _.properties).toQItem()).filter(_ => _)), res => onErr(res.result.error));
    }
    GSheet.getQList = getQList;
    function getRange(fileID, range, onSuccess = (sheets) => { }, onErr = (e) => { }) {
        gapi.client.sheets.spreadsheets.values.get({
            spreadsheetId: fileID,
            range: range,
            valueRenderOption: "UNFORMATTED_VALUE"
        }).then(res => onSuccess(res.result.values), res => onErr(res.result.error));
    }
    function loadQAndAList(qItem, onSuccess = (qAndA) => { }, onErr = (e) => { }) {
        const fileId = qItem.fileID;
        const sheetName = "'" + qItem.sheetTitle + "'";
        const QCountRange = sheetName + "!J1";
        getRange(fileId, QCountRange, cells => {
            const QCount = parseInt(cells[0][0]);
            if (isNaN(QCount)) {
                onErr("Invalid sheet as a database. The value of J1 cell should be the number of questions.");
                return;
            }
            const QAndARange = sheetName + "!A2:H" + (QCount + 1);
            getRange(fileId, QAndARange, cells => {
                let warnMsgs = [];
                const items = cells.map((cells, i) => {
                    for (let i = cells.length; i < 8; i++)
                        cells.push("");
                    let warn = (s) => warnMsgs.push(`row ${i + 2}: ${s}`);
                    return cells2QAndA(qItem, i + 2, cells, warn);
                });
                if (warnMsgs.length > 0)
                    onErr(warnMsgs.join("\n"));
                else
                    onSuccess(items);
            }, e => onErr(e));
        }, e => onErr(e));
    }
    GSheet.loadQAndAList = loadQAndAList;
    function saveQAndAs(qAndA, onSuccess = () => { }, onErr = (e) => { }) {
        let map = new Map();
        qAndA.forEach(_ => {
            const fileId = _.qItem.fileID;
            if (map.has(fileId))
                map.get(fileId).push(_);
            else
                map.set(fileId, [_]);
        });
        map.forEach((items, fileId) => {
            saveQAndASingleFile(fileId, items, onSuccess, onErr);
        });
    }
    GSheet.saveQAndAs = saveQAndAs;
    function saveQAndASingleFile(fileId, qAndA, onSuccess = () => { }, onErr = (e) => { }) {
        if (qAndA.some(_ => _.qItem.fileID != fileId))
            throw "BUG";
        let params = { spreadsheetId: fileId };
        var body = {
            valueInputOption: "RAW",
            data: qAndA.map(_ => qAndA2UpdateReq(_))
        };
        gapi.client.sheets.spreadsheets.values.batchUpdate(params, body)
            .then(_ => onSuccess(), e => onErr(e));
    }
})(GSheet || (GSheet = {}));
const QPerScreen = 10;
class Strategy {
    constructor(qAndAs) {
        this.pvQAndAs = undefined;
        this.qAndAs = qAndAs;
        this.sort();
    }
    next(results) {
        if (results)
            this.update(results);
        if (!results)
            if (this.pvQAndAs)
                throw "BUG";
        this.sort();
        if (this.qAndAs.length == 0)
            return { qAndAs: [], message: "No item found." };
        const isOverLearning = (item) => item.state != "unseen" &&
            DateUtil.getDateNum(item.nextDate) > DateUtil.getDateNum(new Date());
        if (isOverLearning(this.qAndAs[0])) {
            const qAndAs = this.qAndAs.slice(0, QPerScreen);
            const message = "[over learning]";
            qAndAs.sort((a, b) => a.initOrder - b.initOrder);
            this.pvQAndAs = qAndAs;
            return { qAndAs, message };
        }
        else {
            const qAndAs = this.qAndAs.slice(0, QPerScreen).filter(_ => !isOverLearning(_));
            const message = "[learning]";
            qAndAs.sort((a, b) => a.initOrder - b.initOrder);
            this.pvQAndAs = qAndAs;
            return { qAndAs, message };
        }
    }
    update(results) {
        if (!this.pvQAndAs)
            throw "BUG";
        if (results.length != this.pvQAndAs.length)
            throw "BUG";
        this.pvQAndAs.forEach((qAndA, i) => {
            const result = results[i];
            const now = new Date();
            if (result) {
                qAndA.failCount = 0;
                const oneDay = 1 * 1000 * 60 * 60 * 24;
                if (qAndA.prevDate) {
                    const tmpInterval = (now.getTime() - qAndA.prevDate.getTime()) * 2.0;
                    qAndA.interval = Math.max(qAndA.interval, tmpInterval, oneDay);
                }
                else {
                    qAndA.interval = oneDay;
                }
                qAndA.state = "learn";
            }
            else {
                qAndA.failCount++;
                qAndA.interval = 0;
                qAndA.state = qAndA.state == "unseen" ? "learn" : "relearn";
            }
            qAndA.initOrder = Math.random();
            qAndA.prevDate = now;
            qAndA.nextDate = new Date(now.getTime() + qAndA.interval);
            qAndA.log += DateUtil.str(now) + (result ? "✓" : "✗") + " ";
        });
        GSheet.saveQAndAs(this.pvQAndAs, () => console.log("Save successed"), e => console.log("Save failed", e));
    }
    sort() {
        this.qAndAs.sort((a, b) => {
            const aState = a.state == "unseen" ? 0 : a.state == "relearn" ? 1 : 2;
            const bState = b.state == "unseen" ? 0 : b.state == "relearn" ? 1 : 2;
            if (aState != bState)
                return aState - bState;
            if (a.state == "unseen" || b.state == "unseen")
                return a.initOrder - b.initOrder;
            const tmp = DateUtil.getDateNum(a.nextDate) - DateUtil.getDateNum(b.nextDate);
            if (tmp != 0)
                return tmp;
            else
                return a.initOrder - b.initOrder;
        });
    }
}
onLoad(() => {
    const cli_idSt = new StringListStorage("clientid");
    const signinUI = new SigninUI();
    const fileIDSt = new StringListStorage("fileid");
    const cli_idUI = new SelectOrInputUI("clientid", cli_idSt);
    const fileIDUI = new SelectOrInputUI("fileid", fileIDSt);
    const qlist_UI = new QSetListUI();
    const qanda_UI = new QAndAUI();
    onClick(ge("clear_all"), () => {
        if (!confirm("Do you really want to clear all registered ClientIDs & FileIDs?"))
            return;
        cli_idSt.clear();
        fileIDSt.clear();
        alert("Cleared.");
        window.location.reload();
    });
    cli_idUI.onEnter = text => {
        cli_idUI.hide();
        GSheet.init(text, () => {
            cli_idSt.addIfNotExist(text);
            signinUI.show();
        }, e => {
            alert(JSON.stringify(e));
            location.reload();
        });
    };
    signinUI.onClick = () => {
        GSheet.promptSignIn();
    };
    GSheet.onSignIn = () => {
        signinUI.hide();
        fileIDUI.show();
    };
    GSheet.onSignOut = () => {
        alert("Signed out.");
    };
    let pvQList = undefined;
    fileIDUI.onEnter = text => {
        fileIDUI.hide();
        GSheet.getQList(text, qList => {
            fileIDSt.addIfNotExist(text);
            qlist_UI.show(qList);
            pvQList = qList;
        }, e => {
            alert(JSON.stringify(e));
            fileIDUI.show();
        });
    };
    let strategy = undefined;
    qlist_UI.onSelect = item => {
        qlist_UI.hide();
        GSheet.loadQAndAList(item, qAndA => {
            strategy = new Strategy(qAndA);
            const onNext = (results) => {
                if (!strategy) {
                    throw "BUG";
                }
                const { qAndAs, message } = strategy.next(results);
                qanda_UI.show(qAndAs, message);
            };
            qanda_UI.onNext = onNext;
            onNext();
        }, e => {
            if (typeof e == "string")
                alert(e);
            else
                alert(JSON.stringify(e));
            if (pvQList)
                qlist_UI.show(pvQList);
            else
                throw "BUG";
        });
    };
    cli_idUI.show();
    GSheet.load();
    window["gSheet"] = GSheet;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJkb2NzL2pzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGdlKGlkKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbn1cbmZ1bmN0aW9uIGNlKHRhZ05hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbn1cbmZ1bmN0aW9uIGNMSShpbm5lclRleHQsIGNsYXNzZXMsIGlkLCBvbkNsaWNrRm4pIHtcbiAgICBjb25zdCBsaSA9IGNlKFwibGlcIik7XG4gICAgbGkuaW5uZXJUZXh0ID0gaW5uZXJUZXh0O1xuICAgIGNsYXNzZXMuZm9yRWFjaChfID0+IGFkZEMobGksIF8pKTtcbiAgICBpZiAoaWQpXG4gICAgICAgIGxpLmlkID0gaWQ7XG4gICAgaWYgKG9uQ2xpY2tGbilcbiAgICAgICAgb25DbGljayhsaSwgb25DbGlja0ZuKTtcbiAgICByZXR1cm4gbGk7XG59XG5mdW5jdGlvbiByZW1DKGVsbSwgY2xzKSB7XG4gICAgZWxtLmNsYXNzTGlzdC5yZW1vdmUoY2xzKTtcbn1cbmZ1bmN0aW9uIGFkZEMoZWxtLCBjbHMpIHtcbiAgICBlbG0uY2xhc3NMaXN0LmFkZChjbHMpO1xufVxuZnVuY3Rpb24gcmVtQWxsKGVsbSkge1xuICAgIGVsbS5pbm5lckhUTUwgPSBcIlwiO1xufVxuZnVuY3Rpb24gb25DbGljayhlbG0sIGZuKSB7XG4gICAgZWxtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmbik7XG59XG5mdW5jdGlvbiBvbkxvYWQoZm4pIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZm4pO1xufVxuY2xhc3MgU3RyaW5nTGlzdFN0b3JhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKGtleSkge1xuICAgICAgICB0aGlzLmtleSA9IGtleTtcbiAgICAgICAgdGhpcy5fa2V5cyA9IFtdO1xuICAgIH1cbiAgICBnZXQga2V5cygpIHtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleXMuc2xpY2UoKTtcbiAgICB9XG4gICAgc2V0IGtleXMoa2V5cykge1xuICAgICAgICB0aGlzLl9rZXlzID0ga2V5cy5zbGljZSgpO1xuICAgICAgICB0aGlzLnVwZGF0ZVN0b3JhZ2UoKTtcbiAgICB9XG4gICAgZ2V0IHN0b3JhZ2VLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleSArIFwiLXN0cmluZ0xpc3RTdG9yYWdlXCI7XG4gICAgfVxuICAgIGhhcyhrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5cy5pbmRleE9mKGtleSkgPj0gMDtcbiAgICB9XG4gICAgYWRkKGtleSkge1xuICAgICAgICB0aGlzLl9rZXlzLnB1c2goa2V5KTtcbiAgICAgICAgdGhpcy51cGRhdGVTdG9yYWdlKCk7XG4gICAgfVxuICAgIGFkZElmTm90RXhpc3Qoa2V5KSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIGlmICh0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KSA8IDApXG4gICAgICAgICAgICB0aGlzLmFkZChrZXkpO1xuICAgIH1cbiAgICByZW1vdmUoa2V5KSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIGNvbnN0IGkgPSB0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KTtcbiAgICAgICAgaWYgKGkgPCAwKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB0aGlzLl9rZXlzLnNwbGljZShpLCAxKTtcbiAgICAgICAgdGhpcy51cGRhdGVTdG9yYWdlKCk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9XG4gICAgdXBkYXRlKCkge1xuICAgICAgICBjb25zdCBkYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgICB0aGlzLl9rZXlzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpc3QgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShsaXN0KSB8fCBsaXN0LnNvbWUoXyA9PiB0eXBlb2YgXyAhPSBcInN0cmluZ1wiKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9rZXlzID0gW107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9rZXlzID0gbGlzdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2tleXMgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVwZGF0ZVN0b3JhZ2UoKTtcbiAgICB9XG4gICAgdXBkYXRlU3RvcmFnZSgpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IEpTT04uc3RyaW5naWZ5KHRoaXMuX2tleXMpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIGl0ZW0pO1xuICAgIH1cbn1cbmNsYXNzIFNlbGVjdE9ySW5wdXRVSSB7XG4gICAgY29uc3RydWN0b3IoaWRQcmVmaXgsIHN0b3JhZ2UsIG9uRW50ZXIgPSAoKSA9PiB2b2lkIDApIHtcbiAgICAgICAgdGhpcy5yb290ID0gZ2UoaWRQcmVmaXgpO1xuICAgICAgICB0aGlzLnVsID0gZ2UoaWRQcmVmaXggKyBcIl91bFwiKTtcbiAgICAgICAgdGhpcy5pbnB1dCA9IGdlKGlkUHJlZml4ICsgXCJfaW5wdXRcIik7XG4gICAgICAgIHRoaXMuaW5wdXRCdG4gPSBnZShpZFByZWZpeCArIFwiX2VudGVyXCIpO1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlO1xuICAgICAgICB0aGlzLm9uRW50ZXIgPSBvbkVudGVyO1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgb25DbGljayh0aGlzLmlucHV0QnRuLCAoKSA9PiB7XG4gICAgICAgICAgICBzZWxmLmNhbGxPbkVudGVyKHRoaXMuaW5wdXQudmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2hvdygpIHtcbiAgICAgICAgcmVtQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICAgICAgY29uc3QgaXRlbXMgPSB0aGlzLnN0b3JhZ2Uua2V5cztcbiAgICAgICAgY29uc3QgdWwgPSB0aGlzLnVsO1xuICAgICAgICByZW1BbGwodWwpO1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgaXRlbXMuZm9yRWFjaCh0ZXh0ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGxpID0gY0xJKHRleHQsIFtdLCB1bmRlZmluZWQsICgpID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLmNhbGxPbkVudGVyKHRleHQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB1bC5hcHBlbmRDaGlsZChsaSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmlucHV0LnZhbHVlID0gXCJcIjtcbiAgICB9XG4gICAgaGlkZSgpIHtcbiAgICAgICAgYWRkQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG4gICAgY2FsbE9uRW50ZXIodGV4dCkge1xuICAgICAgICB0aGlzLm9uRW50ZXIodGV4dCk7XG4gICAgfVxufVxuY2xhc3MgU2lnbmluVUkge1xuICAgIGNvbnN0cnVjdG9yKG9uQ2xpY2tGbiA9ICgpID0+IHZvaWQgMCkge1xuICAgICAgICB0aGlzLnJvb3QgPSBnZShcInNpZ25pblwiKTtcbiAgICAgICAgdGhpcy5idG4gPSBnZShcInNpZ25pbl9idG5cIik7XG4gICAgICAgIHRoaXMub25DbGljayA9IG9uQ2xpY2tGbjtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIG9uQ2xpY2sodGhpcy5idG4sICgpID0+IHtcbiAgICAgICAgICAgIHNlbGYub25DbGljaygpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2hvdygpIHtcbiAgICAgICAgcmVtQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG4gICAgaGlkZSgpIHtcbiAgICAgICAgYWRkQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG59XG5jbGFzcyBRU2V0TGlzdFVJIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5vblNlbGVjdCA9IChpdGVtKSA9PiB7IH07XG4gICAgICAgIHRoaXMucm9vdCA9IGdlKFwicWxpc3RcIik7XG4gICAgICAgIHRoaXMudWwgPSBnZShcInFsaXN0X3VsXCIpO1xuICAgIH1cbiAgICBzaG93KHFMaXN0KSB7XG4gICAgICAgIHJlbUModGhpcy5yb290LCBcImhpZGVcIik7XG4gICAgICAgIGNvbnN0IHVsID0gdGhpcy51bDtcbiAgICAgICAgcmVtQWxsKHVsKTtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIHFMaXN0LmZvckVhY2goXyA9PiB7XG4gICAgICAgICAgICBjb25zdCBsaSA9IGNMSShfLnNoZWV0VGl0bGUsIFtdLCB1bmRlZmluZWQsICgpID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLm9uU2VsZWN0KF8pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB1bC5hcHBlbmRDaGlsZChsaSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBoaWRlKCkge1xuICAgICAgICBhZGRDKHRoaXMucm9vdCwgXCJoaWRlXCIpO1xuICAgIH1cbn1cbmNsYXNzIFFBbmRBVUkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLml0ZW1zID0gW107XG4gICAgICAgIHRoaXMub25OZXh0ID0gKHJlc3VsdHMpID0+IHsgfTtcbiAgICAgICAgdGhpcy5yb290ID0gZ2UoXCJxYW5kYVwiKTtcbiAgICAgICAgdGhpcy5pdGVtUm9vdCA9IGdlKFwicWFuZGFfaXRlbXJvb3RcIik7XG4gICAgICAgIHRoaXMubmV4dEJ0biA9IGdlKFwicXVhbmRhX25leHRcIik7XG4gICAgICAgIHRoaXMubG9nID0gZ2UoXCJxdWFuZGFfbG9nXCIpO1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgb25DbGljayh0aGlzLm5leHRCdG4sICgpID0+IHNlbGYuY2FsbE9uTmV4dCgpKTtcbiAgICB9XG4gICAgc2hvdyhxQW5kQXMsIGxvZykge1xuICAgICAgICByZW1DKHRoaXMucm9vdCwgXCJoaWRlXCIpO1xuICAgICAgICBjb25zdCBpdGVtUm9vdCA9IHRoaXMuaXRlbVJvb3Q7XG4gICAgICAgIHJlbUFsbChpdGVtUm9vdCk7XG4gICAgICAgIHRoaXMuaXRlbXMgPSBbXTtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIHFBbmRBcy5mb3JFYWNoKF8gPT4ge1xuICAgICAgICAgICAgY29uc3QgZGl2ID0gY2UoXCJkaXZcIik7XG4gICAgICAgICAgICBjb25zdCBxID0gY2UoXCJkaXZcIik7XG4gICAgICAgICAgICBjb25zdCBhID0gY2UoXCJkaXZcIik7XG4gICAgICAgICAgICBxLmlubmVyVGV4dCA9IF8ucTtcbiAgICAgICAgICAgIGEuaW5uZXJUZXh0ID0gXy5hO1xuICAgICAgICAgICAgb25DbGljayhxLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVtQyhkaXYsIFwidHJhbnMtYVwiKTtcbiAgICAgICAgICAgICAgICByZW1DKGRpdiwgXCJ3cm9uZ1wiKTtcbiAgICAgICAgICAgICAgICBhZGRDKGRpdiwgXCJjb3JyZWN0XCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBvbkNsaWNrKGEsICgpID0+IHtcbiAgICAgICAgICAgICAgICByZW1DKGRpdiwgXCJ0cmFucy1hXCIpO1xuICAgICAgICAgICAgICAgIHJlbUMoZGl2LCBcImNvcnJlY3RcIik7XG4gICAgICAgICAgICAgICAgYWRkQyhkaXYsIFwid3JvbmdcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGFkZEMoZGl2LCBcInRyYW5zLWFcIik7XG4gICAgICAgICAgICBhZGRDKHEsIFwicWFuZGFfaXRlbV9xXCIpO1xuICAgICAgICAgICAgYWRkQyhhLCBcInFhbmRhX2l0ZW1fYVwiKTtcbiAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChxKTtcbiAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChhKTtcbiAgICAgICAgICAgIGFkZEMoZGl2LCBcInFhbmRhX2l0ZW1cIik7XG4gICAgICAgICAgICBpdGVtUm9vdC5hcHBlbmRDaGlsZChkaXYpO1xuICAgICAgICAgICAgc2VsZi5pdGVtcy5wdXNoKGRpdik7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNob3dMb2cobG9nKTtcbiAgICB9XG4gICAgaGlkZSgpIHtcbiAgICAgICAgYWRkQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG4gICAgY2FsbE9uTmV4dCgpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgICAgICBjb25zdCBub3RBbnN3ZXJlZHMgPSBbXTtcbiAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKChfLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoXy5jbGFzc0xpc3QuY29udGFpbnMoXCJjb3JyZWN0XCIpKVxuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaCh0cnVlKTtcbiAgICAgICAgICAgIGVsc2UgaWYgKF8uY2xhc3NMaXN0LmNvbnRhaW5zKFwid3JvbmdcIikpXG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGZhbHNlKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBub3RBbnN3ZXJlZHMucHVzaChpICsgMSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAobm90QW5zd2VyZWRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd0xvZyhcIllvdSBoYXZlbid0IGFuc3dlcmVkIHRvIFEuXCIgKyBub3RBbnN3ZXJlZHMuam9pbihcIiwgXCIpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9uTmV4dChyZXN1bHRzKTtcbiAgICB9XG4gICAgc2hvd0xvZyhsb2cpIHtcbiAgICAgICAgdGhpcy5sb2cuaW5uZXJUZXh0ID0gbG9nO1xuICAgIH1cbn1cbmNsYXNzIFNoZWV0UHJvcCB7XG4gICAgY29uc3RydWN0b3IoZmlsZUlELCBpdGVtKSB7XG4gICAgICAgIHRoaXMuZmlsZUlEID0gZmlsZUlEO1xuICAgICAgICB0aGlzLml0ZW0gPSBpdGVtO1xuICAgIH1cbiAgICB0b1FJdGVtKCkge1xuICAgICAgICBpZiAodGhpcy5pdGVtLnNoZWV0VHlwZSAhPSBcIkdSSURcIilcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBmaWxlSUQ6IHRoaXMuZmlsZUlELFxuICAgICAgICAgICAgc2hlZXRJRDogdGhpcy5pdGVtLnNoZWV0SWQsXG4gICAgICAgICAgICBzaGVldFRpdGxlOiB0aGlzLml0ZW0udGl0bGVcbiAgICAgICAgfTtcbiAgICB9XG59XG52YXIgRGF0ZVV0aWw7XG4oZnVuY3Rpb24gKERhdGVVdGlsKSB7XG4gICAgZnVuY3Rpb24gcGFyc2Uocykge1xuICAgICAgICBjb25zdCB0bXAgPSBEYXRlLnBhcnNlKHMpO1xuICAgICAgICBpZiAoaXNOYU4odG1wKSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSh0bXApO1xuICAgIH1cbiAgICBEYXRlVXRpbC5wYXJzZSA9IHBhcnNlO1xuICAgIGZ1bmN0aW9uIHN0cihkKSB7XG4gICAgICAgIGlmICghZClcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICByZXR1cm4gZC50b0lTT1N0cmluZygpO1xuICAgIH1cbiAgICBEYXRlVXRpbC5zdHIgPSBzdHI7XG4gICAgZnVuY3Rpb24gdG9kYXkoKSB7XG4gICAgICAgIHJldHVybiBvbmx5RGF0ZShuZXcgRGF0ZSgpKTtcbiAgICB9XG4gICAgRGF0ZVV0aWwudG9kYXkgPSB0b2RheTtcbiAgICBmdW5jdGlvbiBvbmx5RGF0ZShkYXRlKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShnZXREYXRlTnVtKGRhdGUpKTtcbiAgICB9XG4gICAgRGF0ZVV0aWwub25seURhdGUgPSBvbmx5RGF0ZTtcbiAgICBmdW5jdGlvbiBnZXREYXRlTnVtKGRhdGUpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoZGF0ZS5nZXRUaW1lKCkgLyA2MCAvIDYwIC8gMjQgLyAxMDAwKSAqIDYwICogNjAgKiAyNCAqIDEwMDA7XG4gICAgfVxuICAgIERhdGVVdGlsLmdldERhdGVOdW0gPSBnZXREYXRlTnVtO1xufSkoRGF0ZVV0aWwgfHwgKERhdGVVdGlsID0ge30pKTtcbmZ1bmN0aW9uIGNlbGxzMlFBbmRBKHFJdGVtLCByb3csIGNlbGxzLCB3YXJuKSB7XG4gICAgbGV0IHEgPSBjZWxsc1swXSwgYSA9IGNlbGxzWzFdLCBsb2cgPSBjZWxsc1syXTtcbiAgICBsZXQgc3RhdGUgPSBjZWxsc1szXTtcbiAgICBsZXQgcHJldkRhdGUgPSBEYXRlVXRpbC5wYXJzZShjZWxsc1s0XSk7XG4gICAgbGV0IGludGVydmFsID0gcGFyc2VJbnQoY2VsbHNbNV0pO1xuICAgIGxldCBuZXh0RGF0ZSA9IERhdGVVdGlsLnBhcnNlKGNlbGxzWzZdKTtcbiAgICBsZXQgZmFpbENvdW50ID0gcGFyc2VJbnQoY2VsbHNbN10pO1xuICAgIGNvbnN0IGluaXRPcmRlciA9IE1hdGgucmFuZG9tKCk7XG4gICAgaWYgKHN0YXRlID09IFwiXCIpXG4gICAgICAgIHN0YXRlID0gXCJ1bnNlZW5cIjtcbiAgICBpZiAoc3RhdGUgIT0gXCJ1bnNlZW5cIiAmJiBzdGF0ZSAhPSBcImxlYXJuXCIgJiYgc3RhdGUgIT0gXCJyZWxlYXJuXCIpIHtcbiAgICAgICAgd2FybignXCJTdGF0ZVwiIHNob3VsZCBiZSBzZXQgdG8gXCJ1bnNlZW5cIiwgXCJsZWFyblwiIG9yIFwicmVsZWFyblwiJyk7XG4gICAgICAgIHN0YXRlID0gXCJ1bnNlZW5cIjtcbiAgICB9XG4gICAgaWYgKHN0YXRlID09IFwibGVhcm5cIiB8fCBzdGF0ZSA9PSBcInJlbGVhcm5cIikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCFwcmV2RGF0ZSB8fCAhbmV4dERhdGUgfHwgaXNOYU4oaW50ZXJ2YWwpIHx8IGlzTmFOKGZhaWxDb3VudCkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgaXRlbSA9IHsgcSwgYSwgbG9nLCBzdGF0ZSwgcHJldkRhdGUsIGludGVydmFsLCBuZXh0RGF0ZSwgZmFpbENvdW50LCBxSXRlbSwgcm93LCBpbml0T3JkZXIgfTtcbiAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgd2FybignXCJTdGF0ZVwiIHNob3VsZCBiZSBzZXQgdG8gXCJ1bnNlZW5cIiBiZWNhdXNlIHNvbWUgZGF0YSBhcmUgaW5jb3JyZWN0LicpO1xuICAgICAgICAgICAgc3RhdGUgPSBcInVuc2VlblwiO1xuICAgICAgICAgICAgZmFpbENvdW50ID0gMDtcbiAgICAgICAgICAgIHByZXZEYXRlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgaW50ZXJ2YWwgPSBOYU47XG4gICAgICAgICAgICBuZXh0RGF0ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZmFpbENvdW50ICE9IDAgJiYgIWlzTmFOKGZhaWxDb3VudCkpXG4gICAgICAgIHdhcm4oJ1wiRmFpbCBDb3VudFwiIHNob3VsZCBiZSBcIlwiIGJlY2F1c2UgdGhlIGl0ZW0gaXMgXCJ1bnNlZW5cIicpO1xuICAgIGlmIChwcmV2RGF0ZSAhPSB1bmRlZmluZWQpXG4gICAgICAgIHdhcm4oJ1wiUHJldiBEYXRlXCIgc2hvdWxkIGJlIFwiXCIgYmVjYXVzZSB0aGUgaXRlbSBpcyBcInVuc2VlblwiJyk7XG4gICAgaWYgKCFpc05hTihpbnRlcnZhbCkpXG4gICAgICAgIHdhcm4oJ1wiSW50ZXJ2YWxcIiBzaG91bGQgYmUgXCJcIiBiZWNhdXNlIHRoZSBpdGVtIGlzIFwidW5zZWVuXCInKTtcbiAgICBpZiAobmV4dERhdGUgIT0gdW5kZWZpbmVkKVxuICAgICAgICB3YXJuKCdcIk5leHQgRGF0ZVwiIHNob3VsZCBiZSBcIlwiIGJlY2F1c2UgdGhlIGl0ZW0gaXMgXCJ1bnNlZW5cIicpO1xuICAgIGZhaWxDb3VudCA9IDA7XG4gICAgcHJldkRhdGUgPSB1bmRlZmluZWQ7XG4gICAgaW50ZXJ2YWwgPSB1bmRlZmluZWQ7XG4gICAgbmV4dERhdGUgPSB1bmRlZmluZWQ7XG4gICAgY29uc3QgaXRlbSA9IHsgcSwgYSwgbG9nLCBzdGF0ZTogXCJ1bnNlZW5cIiwgcHJldkRhdGUsIGludGVydmFsLCBuZXh0RGF0ZSwgZmFpbENvdW50LCBxSXRlbSwgcm93LCBpbml0T3JkZXIgfTtcbiAgICByZXR1cm4gaXRlbTtcbn1cbmZ1bmN0aW9uIHFBbmRBMlVwZGF0ZVJlcShxQW5kQSkge1xuICAgIGNvbnN0IF8gPSBxQW5kQTtcbiAgICBjb25zdCByb3cgPSBfLnJvdywgc2hlZXQgPSBfLnFJdGVtLnNoZWV0VGl0bGU7XG4gICAgY29uc3QgaW50ZXJ2YWxUZXh0ID0gXy5pbnRlcnZhbCA/IF8uaW50ZXJ2YWwudG9TdHJpbmcoKSA6IFwiMFwiO1xuICAgIGNvbnN0IHJhbmdlID0gc2hlZXQgKyBcIiFDXCIgKyByb3cgKyBcIjpIXCIgKyByb3c7XG4gICAgY29uc3QgdmFsdWVzID0gW1tfLmxvZywgXy5zdGF0ZSwgRGF0ZVV0aWwuc3RyKF8ucHJldkRhdGUpLCBfLmludGVydmFsIHx8IDAsIERhdGVVdGlsLnN0cihfLm5leHREYXRlKSwgXy5mYWlsQ291bnRdXTtcbiAgICByZXR1cm4geyByYW5nZSwgdmFsdWVzIH07XG59XG52YXIgR1NoZWV0O1xuKGZ1bmN0aW9uIChHU2hlZXQpIHtcbiAgICB2YXIgaXNMb2FkZWQgPSBmYWxzZTtcbiAgICBmdW5jdGlvbiBsb2FkKCkge1xuICAgICAgICBnYXBpLmxvYWQoJ2NsaWVudDphdXRoMicsICgpID0+IHtcbiAgICAgICAgICAgIGlzTG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIEdTaGVldC5sb2FkID0gbG9hZDtcbiAgICBmdW5jdGlvbiBpbml0KGNsaWVudElELCBvbkRvbmUgPSAoKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBpZiAoIWlzTG9hZGVkKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBnYXBpLmNsaWVudC5pbml0KHtcbiAgICAgICAgICAgIGNsaWVudElkOiBjbGllbnRJRCxcbiAgICAgICAgICAgIHNjb3BlOiAnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9zcHJlYWRzaGVldHMnLFxuICAgICAgICAgICAgZGlzY292ZXJ5RG9jczogWydodHRwczovL3NoZWV0cy5nb29nbGVhcGlzLmNvbS8kZGlzY292ZXJ5L3Jlc3Q/dmVyc2lvbj12NCddXG4gICAgICAgIH0pLnRoZW4oXyA9PiB7XG4gICAgICAgICAgICBvbkRvbmUoKTtcbiAgICAgICAgICAgIGlmIChnYXBpLmF1dGgyLmdldEF1dGhJbnN0YW5jZSgpLmlzU2lnbmVkSW4uZ2V0KCkpXG4gICAgICAgICAgICAgICAgR1NoZWV0Lm9uU2lnbkluKCk7XG4gICAgICAgICAgICBnYXBpLmF1dGgyLmdldEF1dGhJbnN0YW5jZSgpLmlzU2lnbmVkSW4ubGlzdGVuKChpc1NpZ25lZEluKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU2lnbmVkSW4pXG4gICAgICAgICAgICAgICAgICAgIEdTaGVldC5vblNpZ25JbigpO1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgR1NoZWV0Lm9uU2lnbk91dCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgb25FcnIoZSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgR1NoZWV0LmluaXQgPSBpbml0O1xuICAgIGZ1bmN0aW9uIHByb21wdFNpZ25JbigpIHtcbiAgICAgICAgZ2FwaS5hdXRoMi5nZXRBdXRoSW5zdGFuY2UoKS5zaWduSW4oKTtcbiAgICB9XG4gICAgR1NoZWV0LnByb21wdFNpZ25JbiA9IHByb21wdFNpZ25JbjtcbiAgICBHU2hlZXQub25TaWduSW4gPSAoKSA9PiB7IH07XG4gICAgR1NoZWV0Lm9uU2lnbk91dCA9ICgpID0+IHsgfTtcbiAgICBmdW5jdGlvbiBnZXRRTGlzdChmaWxlSUQsIG9uU3VjY2VzcyA9IChxTGlzdCkgPT4geyB9LCBvbkVyciA9IChlKSA9PiB7IH0pIHtcbiAgICAgICAgZ2FwaS5jbGllbnQuc2hlZXRzLnNwcmVhZHNoZWV0cy5nZXQoe1xuICAgICAgICAgICAgc3ByZWFkc2hlZXRJZDogZmlsZUlEXG4gICAgICAgIH0pLnRoZW4ocmVzID0+IG9uU3VjY2VzcyhyZXMucmVzdWx0LnNoZWV0cy5tYXAoXyA9PiBuZXcgU2hlZXRQcm9wKGZpbGVJRCwgXy5wcm9wZXJ0aWVzKS50b1FJdGVtKCkpLmZpbHRlcihfID0+IF8pKSwgcmVzID0+IG9uRXJyKHJlcy5yZXN1bHQuZXJyb3IpKTtcbiAgICB9XG4gICAgR1NoZWV0LmdldFFMaXN0ID0gZ2V0UUxpc3Q7XG4gICAgZnVuY3Rpb24gZ2V0UmFuZ2VSYXcoZmlsZUlELCByYW5nZSwgb25TdWNjZXNzID0gKHNoZWV0cykgPT4geyB9LCBvbkVyciA9IChlKSA9PiB7IH0pIHtcbiAgICAgICAgZ2FwaS5jbGllbnQuc2hlZXRzLnNwcmVhZHNoZWV0cy52YWx1ZXMuZ2V0KHtcbiAgICAgICAgICAgIHNwcmVhZHNoZWV0SWQ6IGZpbGVJRCxcbiAgICAgICAgICAgIHJhbmdlOiByYW5nZSxcbiAgICAgICAgICAgIHZhbHVlUmVuZGVyT3B0aW9uOiBcIkZPUk1VTEFcIlxuICAgICAgICB9KS50aGVuKHJlcyA9PiBvblN1Y2Nlc3MocmVzLnJlc3VsdC52YWx1ZXMpLCByZXMgPT4gb25FcnIocmVzLnJlc3VsdC5lcnJvcikpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRSYW5nZShmaWxlSUQsIHJhbmdlLCBvblN1Y2Nlc3MgPSAoc2hlZXRzKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBnYXBpLmNsaWVudC5zaGVldHMuc3ByZWFkc2hlZXRzLnZhbHVlcy5nZXQoe1xuICAgICAgICAgICAgc3ByZWFkc2hlZXRJZDogZmlsZUlELFxuICAgICAgICAgICAgcmFuZ2U6IHJhbmdlLFxuICAgICAgICAgICAgdmFsdWVSZW5kZXJPcHRpb246IFwiVU5GT1JNQVRURURfVkFMVUVcIlxuICAgICAgICB9KS50aGVuKHJlcyA9PiBvblN1Y2Nlc3MocmVzLnJlc3VsdC52YWx1ZXMpLCByZXMgPT4gb25FcnIocmVzLnJlc3VsdC5lcnJvcikpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBsb2FkUUFuZEFMaXN0KHFJdGVtLCBvblN1Y2Nlc3MgPSAocUFuZEEpID0+IHsgfSwgb25FcnIgPSAoZSkgPT4geyB9KSB7XG4gICAgICAgIGNvbnN0IGZpbGVJZCA9IHFJdGVtLmZpbGVJRDtcbiAgICAgICAgY29uc3Qgc2hlZXROYW1lID0gXCInXCIgKyBxSXRlbS5zaGVldFRpdGxlICsgXCInXCI7XG4gICAgICAgIGNvbnN0IFFDb3VudFJhbmdlID0gc2hlZXROYW1lICsgXCIhSjFcIjtcbiAgICAgICAgZ2V0UmFuZ2UoZmlsZUlkLCBRQ291bnRSYW5nZSwgY2VsbHMgPT4ge1xuICAgICAgICAgICAgY29uc3QgUUNvdW50ID0gcGFyc2VJbnQoY2VsbHNbMF1bMF0pO1xuICAgICAgICAgICAgaWYgKGlzTmFOKFFDb3VudCkpIHtcbiAgICAgICAgICAgICAgICBvbkVycihcIkludmFsaWQgc2hlZXQgYXMgYSBkYXRhYmFzZS4gVGhlIHZhbHVlIG9mIEoxIGNlbGwgc2hvdWxkIGJlIHRoZSBudW1iZXIgb2YgcXVlc3Rpb25zLlwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBRQW5kQVJhbmdlID0gc2hlZXROYW1lICsgXCIhQTI6SFwiICsgKFFDb3VudCArIDEpO1xuICAgICAgICAgICAgZ2V0UmFuZ2UoZmlsZUlkLCBRQW5kQVJhbmdlLCBjZWxscyA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHdhcm5Nc2dzID0gW107XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBjZWxscy5tYXAoKGNlbGxzLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSBjZWxscy5sZW5ndGg7IGkgPCA4OyBpKyspXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxscy5wdXNoKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgd2FybiA9IChzKSA9PiB3YXJuTXNncy5wdXNoKGByb3cgJHtpICsgMn06ICR7c31gKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNlbGxzMlFBbmRBKHFJdGVtLCBpICsgMiwgY2VsbHMsIHdhcm4pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmICh3YXJuTXNncy5sZW5ndGggPiAwKVxuICAgICAgICAgICAgICAgICAgICBvbkVycih3YXJuTXNncy5qb2luKFwiXFxuXCIpKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIG9uU3VjY2VzcyhpdGVtcyk7XG4gICAgICAgICAgICB9LCBlID0+IG9uRXJyKGUpKTtcbiAgICAgICAgfSwgZSA9PiBvbkVycihlKSk7XG4gICAgfVxuICAgIEdTaGVldC5sb2FkUUFuZEFMaXN0ID0gbG9hZFFBbmRBTGlzdDtcbiAgICBmdW5jdGlvbiBzYXZlUUFuZEFzKHFBbmRBLCBvblN1Y2Nlc3MgPSAoKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBsZXQgbWFwID0gbmV3IE1hcCgpO1xuICAgICAgICBxQW5kQS5mb3JFYWNoKF8gPT4ge1xuICAgICAgICAgICAgY29uc3QgZmlsZUlkID0gXy5xSXRlbS5maWxlSUQ7XG4gICAgICAgICAgICBpZiAobWFwLmhhcyhmaWxlSWQpKVxuICAgICAgICAgICAgICAgIG1hcC5nZXQoZmlsZUlkKS5wdXNoKF8pO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIG1hcC5zZXQoZmlsZUlkLCBbX10pO1xuICAgICAgICB9KTtcbiAgICAgICAgbWFwLmZvckVhY2goKGl0ZW1zLCBmaWxlSWQpID0+IHtcbiAgICAgICAgICAgIHNhdmVRQW5kQVNpbmdsZUZpbGUoZmlsZUlkLCBpdGVtcywgb25TdWNjZXNzLCBvbkVycik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBHU2hlZXQuc2F2ZVFBbmRBcyA9IHNhdmVRQW5kQXM7XG4gICAgZnVuY3Rpb24gc2F2ZVFBbmRBU2luZ2xlRmlsZShmaWxlSWQsIHFBbmRBLCBvblN1Y2Nlc3MgPSAoKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBpZiAocUFuZEEuc29tZShfID0+IF8ucUl0ZW0uZmlsZUlEICE9IGZpbGVJZCkpXG4gICAgICAgICAgICB0aHJvdyBcIkJVR1wiO1xuICAgICAgICBsZXQgcGFyYW1zID0geyBzcHJlYWRzaGVldElkOiBmaWxlSWQgfTtcbiAgICAgICAgdmFyIGJvZHkgPSB7XG4gICAgICAgICAgICB2YWx1ZUlucHV0T3B0aW9uOiBcIlJBV1wiLFxuICAgICAgICAgICAgZGF0YTogcUFuZEEubWFwKF8gPT4gcUFuZEEyVXBkYXRlUmVxKF8pKVxuICAgICAgICB9O1xuICAgICAgICBnYXBpLmNsaWVudC5zaGVldHMuc3ByZWFkc2hlZXRzLnZhbHVlcy5iYXRjaFVwZGF0ZShwYXJhbXMsIGJvZHkpXG4gICAgICAgICAgICAudGhlbihfID0+IG9uU3VjY2VzcygpLCBlID0+IG9uRXJyKGUpKTtcbiAgICB9XG59KShHU2hlZXQgfHwgKEdTaGVldCA9IHt9KSk7XG5jb25zdCBRUGVyU2NyZWVuID0gMTA7XG5jbGFzcyBTdHJhdGVneSB7XG4gICAgY29uc3RydWN0b3IocUFuZEFzKSB7XG4gICAgICAgIHRoaXMucHZRQW5kQXMgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucUFuZEFzID0gcUFuZEFzO1xuICAgICAgICB0aGlzLnNvcnQoKTtcbiAgICB9XG4gICAgbmV4dChyZXN1bHRzKSB7XG4gICAgICAgIGlmIChyZXN1bHRzKVxuICAgICAgICAgICAgdGhpcy51cGRhdGUocmVzdWx0cyk7XG4gICAgICAgIGlmICghcmVzdWx0cylcbiAgICAgICAgICAgIGlmICh0aGlzLnB2UUFuZEFzKVxuICAgICAgICAgICAgICAgIHRocm93IFwiQlVHXCI7XG4gICAgICAgIHRoaXMuc29ydCgpO1xuICAgICAgICBpZiAodGhpcy5xQW5kQXMubGVuZ3RoID09IDApXG4gICAgICAgICAgICByZXR1cm4geyBxQW5kQXM6IFtdLCBtZXNzYWdlOiBcIk5vIGl0ZW0gZm91bmQuXCIgfTtcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSBcIlwiO1xuICAgICAgICBjb25zdCBpc092ZXJMZWFybmluZyA9IChpdGVtKSA9PiBpdGVtLnN0YXRlICE9IFwidW5zZWVuXCIgJiZcbiAgICAgICAgICAgIERhdGVVdGlsLmdldERhdGVOdW0oaXRlbS5uZXh0RGF0ZSkgPiBEYXRlVXRpbC5nZXREYXRlTnVtKG5ldyBEYXRlKCkpO1xuICAgICAgICBpZiAoaXNPdmVyTGVhcm5pbmcodGhpcy5xQW5kQXNbMF0pKSB7XG4gICAgICAgICAgICBjb25zdCBxQW5kQXMgPSB0aGlzLnFBbmRBcy5zbGljZSgwLCBRUGVyU2NyZWVuKTtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBcIltvdmVyIGxlYXJuaW5nXVwiO1xuICAgICAgICAgICAgcUFuZEFzLnNvcnQoKGEsIGIpID0+IGEuaW5pdE9yZGVyIC0gYi5pbml0T3JkZXIpO1xuICAgICAgICAgICAgdGhpcy5wdlFBbmRBcyA9IHFBbmRBcztcbiAgICAgICAgICAgIHJldHVybiB7IHFBbmRBcywgbWVzc2FnZSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcUFuZEFzID0gdGhpcy5xQW5kQXMuc2xpY2UoMCwgUVBlclNjcmVlbikuZmlsdGVyKF8gPT4gIWlzT3ZlckxlYXJuaW5nKF8pKTtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBcIltsZWFybmluZ11cIjtcbiAgICAgICAgICAgIHFBbmRBcy5zb3J0KChhLCBiKSA9PiBhLmluaXRPcmRlciAtIGIuaW5pdE9yZGVyKTtcbiAgICAgICAgICAgIHRoaXMucHZRQW5kQXMgPSBxQW5kQXM7XG4gICAgICAgICAgICByZXR1cm4geyBxQW5kQXMsIG1lc3NhZ2UgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUocmVzdWx0cykge1xuICAgICAgICBpZiAoIXRoaXMucHZRQW5kQXMpXG4gICAgICAgICAgICB0aHJvdyBcIkJVR1wiO1xuICAgICAgICBpZiAocmVzdWx0cy5sZW5ndGggIT0gdGhpcy5wdlFBbmRBcy5sZW5ndGgpXG4gICAgICAgICAgICB0aHJvdyBcIkJVR1wiO1xuICAgICAgICB0aGlzLnB2UUFuZEFzLmZvckVhY2goKHFBbmRBLCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSByZXN1bHRzW2ldO1xuICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBxQW5kQS5mYWlsQ291bnQgPSAwO1xuICAgICAgICAgICAgICAgIGNvbnN0IG9uZURheSA9IDEgKiAxMDAwICogNjAgKiA2MCAqIDI0O1xuICAgICAgICAgICAgICAgIGlmIChxQW5kQS5wcmV2RGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0bXBJbnRlcnZhbCA9IChub3cuZ2V0VGltZSgpIC0gcUFuZEEucHJldkRhdGUuZ2V0VGltZSgpKSAqIDIuMDtcbiAgICAgICAgICAgICAgICAgICAgcUFuZEEuaW50ZXJ2YWwgPSBNYXRoLm1heChxQW5kQS5pbnRlcnZhbCwgdG1wSW50ZXJ2YWwsIG9uZURheSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBxQW5kQS5pbnRlcnZhbCA9IG9uZURheTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcUFuZEEuc3RhdGUgPSBcImxlYXJuXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBxQW5kQS5mYWlsQ291bnQrKztcbiAgICAgICAgICAgICAgICBxQW5kQS5pbnRlcnZhbCA9IDA7XG4gICAgICAgICAgICAgICAgcUFuZEEuc3RhdGUgPSBxQW5kQS5zdGF0ZSA9PSBcInVuc2VlblwiID8gXCJsZWFyblwiIDogXCJyZWxlYXJuXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxQW5kQS5pbml0T3JkZXIgPSBNYXRoLnJhbmRvbSgpO1xuICAgICAgICAgICAgcUFuZEEucHJldkRhdGUgPSBub3c7XG4gICAgICAgICAgICBxQW5kQS5uZXh0RGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyBxQW5kQS5pbnRlcnZhbCk7XG4gICAgICAgICAgICBxQW5kQS5sb2cgKz0gRGF0ZVV0aWwuc3RyKG5vdykgKyAocmVzdWx0ID8gXCLinJNcIiA6IFwi4pyXXCIpICsgXCIgXCI7XG4gICAgICAgIH0pO1xuICAgICAgICBHU2hlZXQuc2F2ZVFBbmRBcyh0aGlzLnB2UUFuZEFzLCAoKSA9PiBjb25zb2xlLmxvZyhcIlNhdmUgc3VjY2Vzc2VkXCIpLCBlID0+IGNvbnNvbGUubG9nKFwiU2F2ZSBmYWlsZWRcIiwgZSkpO1xuICAgIH1cbiAgICBzb3J0KCkge1xuICAgICAgICB0aGlzLnFBbmRBcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBhU3RhdGUgPSBhLnN0YXRlID09IFwidW5zZWVuXCIgPyAwIDogYS5zdGF0ZSA9PSBcInJlbGVhcm5cIiA/IDEgOiAyO1xuICAgICAgICAgICAgY29uc3QgYlN0YXRlID0gYi5zdGF0ZSA9PSBcInVuc2VlblwiID8gMCA6IGIuc3RhdGUgPT0gXCJyZWxlYXJuXCIgPyAxIDogMjtcbiAgICAgICAgICAgIGlmIChhU3RhdGUgIT0gYlN0YXRlKVxuICAgICAgICAgICAgICAgIHJldHVybiBhU3RhdGUgLSBiU3RhdGU7XG4gICAgICAgICAgICBpZiAoYS5zdGF0ZSA9PSBcInVuc2VlblwiIHx8IGIuc3RhdGUgPT0gXCJ1bnNlZW5cIilcbiAgICAgICAgICAgICAgICByZXR1cm4gYS5pbml0T3JkZXIgLSBiLmluaXRPcmRlcjtcbiAgICAgICAgICAgIGNvbnN0IHRtcCA9IERhdGVVdGlsLmdldERhdGVOdW0oYS5uZXh0RGF0ZSkgLSBEYXRlVXRpbC5nZXREYXRlTnVtKGIubmV4dERhdGUpO1xuICAgICAgICAgICAgaWYgKHRtcCAhPSAwKVxuICAgICAgICAgICAgICAgIHJldHVybiB0bXA7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcmV0dXJuIGEuaW5pdE9yZGVyIC0gYi5pbml0T3JkZXI7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbm9uTG9hZCgoKSA9PiB7XG4gICAgY29uc3QgY2xpX2lkU3QgPSBuZXcgU3RyaW5nTGlzdFN0b3JhZ2UoXCJjbGllbnRpZFwiKTtcbiAgICBjb25zdCBzaWduaW5VSSA9IG5ldyBTaWduaW5VSSgpO1xuICAgIGNvbnN0IGZpbGVJRFN0ID0gbmV3IFN0cmluZ0xpc3RTdG9yYWdlKFwiZmlsZWlkXCIpO1xuICAgIGNvbnN0IGNsaV9pZFVJID0gbmV3IFNlbGVjdE9ySW5wdXRVSShcImNsaWVudGlkXCIsIGNsaV9pZFN0KTtcbiAgICBjb25zdCBmaWxlSURVSSA9IG5ldyBTZWxlY3RPcklucHV0VUkoXCJmaWxlaWRcIiwgZmlsZUlEU3QpO1xuICAgIGNvbnN0IHFsaXN0X1VJID0gbmV3IFFTZXRMaXN0VUkoKTtcbiAgICBjb25zdCBxYW5kYV9VSSA9IG5ldyBRQW5kQVVJKCk7XG4gICAgb25DbGljayhnZShcImNsZWFyX2FsbFwiKSwgKCkgPT4ge1xuICAgICAgICBpZiAoIWNvbmZpcm0oXCJEbyB5b3UgcmVhbGx5IHdhbnQgdG8gY2xlYXIgYWxsIHJlZ2lzdGVyZWQgQ2xpZW50SURzICYgRmlsZUlEcz9cIikpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNsaV9pZFN0LmNsZWFyKCk7XG4gICAgICAgIGZpbGVJRFN0LmNsZWFyKCk7XG4gICAgICAgIGFsZXJ0KFwiQ2xlYXJlZC5cIik7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9KTtcbiAgICBjbGlfaWRVSS5vbkVudGVyID0gdGV4dCA9PiB7XG4gICAgICAgIGNsaV9pZFVJLmhpZGUoKTtcbiAgICAgICAgR1NoZWV0LmluaXQodGV4dCwgKCkgPT4ge1xuICAgICAgICAgICAgY2xpX2lkU3QuYWRkSWZOb3RFeGlzdCh0ZXh0KTtcbiAgICAgICAgICAgIHNpZ25pblVJLnNob3coKTtcbiAgICAgICAgfSwgZSA9PiB7XG4gICAgICAgICAgICBhbGVydChKU09OLnN0cmluZ2lmeShlKSk7XG4gICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBzaWduaW5VSS5vbkNsaWNrID0gKCkgPT4ge1xuICAgICAgICBHU2hlZXQucHJvbXB0U2lnbkluKCk7XG4gICAgfTtcbiAgICBHU2hlZXQub25TaWduSW4gPSAoKSA9PiB7XG4gICAgICAgIHNpZ25pblVJLmhpZGUoKTtcbiAgICAgICAgZmlsZUlEVUkuc2hvdygpO1xuICAgIH07XG4gICAgR1NoZWV0Lm9uU2lnbk91dCA9ICgpID0+IHtcbiAgICAgICAgYWxlcnQoXCJTaWduZWQgb3V0LlwiKTtcbiAgICB9O1xuICAgIGxldCBwdlFMaXN0ID0gdW5kZWZpbmVkO1xuICAgIGZpbGVJRFVJLm9uRW50ZXIgPSB0ZXh0ID0+IHtcbiAgICAgICAgZmlsZUlEVUkuaGlkZSgpO1xuICAgICAgICBHU2hlZXQuZ2V0UUxpc3QodGV4dCwgcUxpc3QgPT4ge1xuICAgICAgICAgICAgZmlsZUlEU3QuYWRkSWZOb3RFeGlzdCh0ZXh0KTtcbiAgICAgICAgICAgIHFsaXN0X1VJLnNob3cocUxpc3QpO1xuICAgICAgICAgICAgcHZRTGlzdCA9IHFMaXN0O1xuICAgICAgICB9LCBlID0+IHtcbiAgICAgICAgICAgIGFsZXJ0KEpTT04uc3RyaW5naWZ5KGUpKTtcbiAgICAgICAgICAgIGZpbGVJRFVJLnNob3coKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBsZXQgc3RyYXRlZ3kgPSB1bmRlZmluZWQ7XG4gICAgcWxpc3RfVUkub25TZWxlY3QgPSBpdGVtID0+IHtcbiAgICAgICAgcWxpc3RfVUkuaGlkZSgpO1xuICAgICAgICBHU2hlZXQubG9hZFFBbmRBTGlzdChpdGVtLCBxQW5kQSA9PiB7XG4gICAgICAgICAgICBzdHJhdGVneSA9IG5ldyBTdHJhdGVneShxQW5kQSk7XG4gICAgICAgICAgICBjb25zdCBvbk5leHQgPSAocmVzdWx0cykgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghc3RyYXRlZ3kpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgXCJCVUdcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgeyBxQW5kQXMsIG1lc3NhZ2UgfSA9IHN0cmF0ZWd5Lm5leHQocmVzdWx0cyk7XG4gICAgICAgICAgICAgICAgcWFuZGFfVUkuc2hvdyhxQW5kQXMsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHFhbmRhX1VJLm9uTmV4dCA9IG9uTmV4dDtcbiAgICAgICAgICAgIG9uTmV4dCgpO1xuICAgICAgICB9LCBlID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZSA9PSBcInN0cmluZ1wiKVxuICAgICAgICAgICAgICAgIGFsZXJ0KGUpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIGFsZXJ0KEpTT04uc3RyaW5naWZ5KGUpKTtcbiAgICAgICAgICAgIGlmIChwdlFMaXN0KVxuICAgICAgICAgICAgICAgIHFsaXN0X1VJLnNob3cocHZRTGlzdCk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgdGhyb3cgXCJCVUdcIjtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBjbGlfaWRVSS5zaG93KCk7XG4gICAgR1NoZWV0LmxvYWQoKTtcbiAgICB3aW5kb3dbXCJnU2hlZXRcIl0gPSBHU2hlZXQ7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZkSE12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUTBFc1UwRkJVeXhGUVVGRkxFTkJRVU1zUlVGQlZUdEpRVU55UWl4UFFVRlBMRkZCUVZFc1EwRkJReXhqUVVGakxFTkJRVU1zUlVGQlJTeERRVUZGTEVOQlFVTTdRVUZEY2tNc1EwRkJRenRCUVVORUxGTkJRVk1zUlVGQlJTeERRVUYzUXl4UFFVRlZPMGxCUXpWRUxFOUJRVThzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRCUVVONFF5eERRVUZETzBGQlEwUXNVMEZCVXl4SFFVRkhMRU5CUVVNc1UwRkJhVUlzUlVGQlJTeFBRVUZwUWl4RlFVRkZMRVZCUVZjc1JVRkJSU3hUUVVGeFFqdEpRVU53Uml4TlFVRk5MRVZCUVVVc1IwRkJSeXhGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEY0VJc1JVRkJSU3hEUVVGRExGTkJRVk1zUjBGQlJ5eFRRVUZUTEVOQlFVTTdTVUZEZWtJc1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTnNReXhKUVVGSkxFVkJRVVU3VVVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkhMRVZCUVVVc1EwRkJRenRKUVVOdVFpeEpRVUZKTEZOQlFWTTdVVUZCUlN4UFFVRlBMRU5CUVVNc1JVRkJSU3hGUVVGRkxGTkJRVk1zUTBGQlF5eERRVUZETzBsQlEzUkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8wRkJRMWdzUTBGQlF6dEJRVU5FTEZOQlFWTXNTVUZCU1N4RFFVRkRMRWRCUVdkQ0xFVkJRVVVzUjBGQlZ6dEpRVU14UXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0QlFVTXpRaXhEUVVGRE8wRkJRMFFzVTBGQlV5eEpRVUZKTEVOQlFVTXNSMEZCWjBJc1JVRkJSU3hIUVVGWE8wbEJRekZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzBGQlEzaENMRU5CUVVNN1FVRkRSQ3hUUVVGVExFMUJRVTBzUTBGQlF5eEhRVUZuUWp0SlFVTXZRaXhIUVVGSExFTkJRVU1zVTBGQlV5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTndRaXhEUVVGRE8wRkJRMFFzVTBGQlV5eFBRVUZQTEVOQlFVTXNSMEZCWjBJc1JVRkJSU3hGUVVGaE8wbEJReTlETEVkQlFVY3NRMEZCUXl4blFrRkJaMElzUTBGQlF5eFBRVUZQTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRia01zUTBGQlF6dEJRVU5FTEZOQlFWTXNUVUZCVFN4RFFVRkRMRVZCUVdFN1NVRkROVUlzVFVGQlRTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFMUJRVTBzUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXp0QlFVTnlReXhEUVVGRE8wRkJSVVFzVFVGQlRTeHBRa0ZCYVVJN1NVRkZkRUlzV1VGQmNVSXNSMEZCVnp0UlFVRllMRkZCUVVjc1IwRkJTQ3hIUVVGSExFTkJRVkU3VVVGREwwSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhGUVVGRkxFTkJRVU03U1VGRGFrSXNRMEZCUXp0SlFVTkVMRWxCUVVrc1NVRkJTVHRSUVVOUUxFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0UlFVTmtMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXp0SlFVTXpRaXhEUVVGRE8wbEJRMFFzU1VGQlNTeEpRVUZKTEVOQlFVTXNTVUZCWXp0UlFVTjBRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJRenRSUVVNeFFpeEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNN1NVRkRkRUlzUTBGQlF6dEpRVU5FTEVsQlFWa3NWVUZCVlR0UlFVTnlRaXhQUVVGUExFbEJRVWtzUTBGQlF5eEhRVUZITEVkQlFVY3NiMEpCUVc5Q0xFTkJRVU03U1VGRGVFTXNRMEZCUXp0SlFVTkVMRWRCUVVjc1EwRkJReXhIUVVGWE8xRkJRMlFzVDBGQlR5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEY0VNc1EwRkJRenRKUVVORUxFZEJRVWNzUTBGQlF5eEhRVUZYTzFGQlEyUXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdVVUZEY2tJc1NVRkJTU3hEUVVGRExHRkJRV0VzUlVGQlJTeERRVUZETzBsQlEzUkNMRU5CUVVNN1NVRkRSQ3hoUVVGaExFTkJRVU1zUjBGQlZ6dFJRVU40UWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU03VVVGRFpDeEpRVUZKTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTTdXVUZET1VJc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0SlFVTm9RaXhEUVVGRE8wbEJSVVFzVFVGQlRTeERRVUZETEVkQlFWYzdVVUZEYWtJc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzFGQlEyUXNUVUZCVFN4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1VVRkRiRU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXp0WlFVRkZMRTlCUVU4c1MwRkJTeXhEUVVGRE8xRkJRM2hDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTjRRaXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVOQlFVTTdVVUZEY2tJc1QwRkJUeXhKUVVGSkxFTkJRVU03U1VGRFlpeERRVUZETzBsQlEwUXNTMEZCU3p0UlFVTktMRmxCUVZrc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMUZCUTNwRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0SlFVTm1MRU5CUVVNN1NVRkRUeXhOUVVGTk8xRkJRMklzVFVGQlRTeEpRVUZKTEVkQlFVY3NXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTTdVVUZEYmtRc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJUdFpRVU5XTEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSU3hEUVVGRE8xTkJRMmhDTzJGQlFVMDdXVUZEVGl4SlFVRkpPMmRDUVVOSUxFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlF6bENMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hSUVVGUkxFTkJRVU1zUlVGQlJUdHZRa0ZEYWtVc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdhVUpCUTJoQ08zRkNRVUZOTzI5Q1FVTk9MRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETzJsQ1FVTnNRanRoUVVORU8xbEJRVU1zVDBGQlR5eERRVUZETEVWQlFVVTdaMEpCUTFnc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdZVUZEYUVJN1UwRkRSRHRSUVVORUxFbEJRVWtzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXp0SlFVTjBRaXhEUVVGRE8wbEJRMDhzWVVGQllUdFJRVU53UWl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRSUVVONFF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGVkxFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdTVUZETjBNc1EwRkJRenREUVVORU8wRkJRMFFzVFVGQlRTeGxRVUZsTzBsQlQzQkNMRmxCUVZrc1VVRkJaMElzUlVGQlJTeFBRVUV3UWl4RlFVRkZMRlZCUVd0RExFZEJRVWNzUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXp0UlFVTjJSeXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UlFVRlJMRU5CUVcxQ0xFTkJRVU03VVVGRE0wTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1IwRkJSeXhGUVVGRkxFTkJRVU1zVVVGQlVTeEhRVUZITEV0QlFVc3NRMEZCY1VJc1EwRkJRenRSUVVOdVJDeEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRVZCUVVVc1EwRkJReXhSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZ4UWl4RFFVRkRPMUZCUTNwRUxFbEJRVWtzUTBGQlF5eFJRVUZSTEVkQlFVY3NSVUZCUlN4RFFVRkRMRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRWE5DTEVOQlFVTTdVVUZETjBRc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTTdVVUZEZGtJc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTTdVVUZEZGtJc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETzFGQlEyeENMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTEVkQlFVY3NSVUZCUlR0WlFVTXpRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03VVVGRGNFTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRTaXhEUVVGRE8wbEJRMFFzU1VGQlNUdFJRVU5JTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFMUJRVTBzUTBGQlF5eERRVUZETzFGQlEzaENMRTFCUVUwc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRPMUZCUTJoRExFMUJRVTBzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNN1VVRkRia0lzVFVGQlRTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRPMUZCUTFnc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETzFGQlEyeENMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVTdXVUZEY0VJc1RVRkJUU3hGUVVGRkxFZEJRVWNzUjBGQlJ5eERRVUZETEVsQlFVa3NSVUZCUlN4RlFVRkZMRVZCUVVVc1UwRkJVeXhGUVVGRkxFZEJRVWNzUlVGQlJUdG5Ra0ZEZUVNc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVTjRRaXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5JTEVWQlFVVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03VVVGRGNFSXNRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRTQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZMRU5CUVVNN1NVRkRka0lzUTBGQlF6dEpRVU5FTEVsQlFVazdVVUZEU0N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0SlFVTjZRaXhEUVVGRE8wbEJRMDhzVjBGQlZ5eERRVUZETEVsQlFWazdVVUZETDBJc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVTndRaXhEUVVGRE8wTkJRMFE3UVVGRFJDeE5RVUZOTEZGQlFWRTdTVUZKWWl4WlFVRlpMRmxCUVhkQ0xFZEJRVWNzUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXp0UlFVTXZReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UlFVRlJMRU5CUVcxQ0xFTkJRVU03VVVGRE0wTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1IwRkJSeXhGUVVGRkxFTkJRVU1zV1VGQldTeERRVUZ6UWl4RFFVRkRPMUZCUTJwRUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NVMEZCVXl4RFFVRkJPMUZCUTNoQ0xFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXp0UlFVTnNRaXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVN1dVRkRkRUlzU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMUZCUTJoQ0xFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEwb3NRMEZCUXp0SlFVTkVMRWxCUVVrN1VVRkRTQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenRKUVVONlFpeERRVUZETzBsQlEwUXNTVUZCU1R0UlFVTklMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRPMGxCUTNwQ0xFTkJRVU03UTBGRFJEdEJRVTFFTEUxQlFVMHNWVUZCVlR0SlFVbG1PMUZCUkVFc1lVRkJVU3hIUVVGSExFTkJRVU1zU1VGQlZ5eEZRVUZGTEVWQlFVVXNSMEZCUnl4RFFVRkRMRU5CUVVFN1VVRkZPVUlzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4RlFVRkZMRU5CUVVNc1QwRkJUeXhEUVVGdFFpeERRVUZETzFGQlF6RkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCY1VJc1EwRkJRenRKUVVNNVF5eERRVUZETzBsQlEwUXNTVUZCU1N4RFFVRkRMRXRCUVdNN1VVRkRiRUlzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1RVRkJUU3hEUVVGRExFTkJRVU03VVVGRGVFSXNUVUZCVFN4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF6dFJRVU51UWl4TlFVRk5MRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03VVVGRFdDeE5RVUZOTEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVFN1VVRkRha0lzUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHRaUVVOcVFpeE5RVUZOTEVWQlFVVXNSMEZCUnl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExGVkJRVlVzUlVGQlJTeEZRVUZGTEVWQlFVVXNVMEZCVXl4RlFVRkZMRWRCUVVjc1JVRkJSVHRuUWtGRGFFUXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5zUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVOSUxFVkJRVVVzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1VVRkRjRUlzUTBGQlF5eERRVUZETEVOQlFVRTdTVUZEU0N4RFFVRkRPMGxCUTBRc1NVRkJTVHRSUVVOSUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRE8wbEJRM3BDTEVOQlFVTTdRMEZEUkR0QlFYZENSQ3hOUVVGTkxFOUJRVTg3U1VGUFdqdFJRVVpSTEZWQlFVc3NSMEZCY1VJc1JVRkJSU3hEUVVGQk8xRkJRM0JETEZkQlFVMHNSMEZCUnl4RFFVRkRMRTlCUVd0Q0xFVkJRVVVzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUVR0UlFVVnVReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVcxQ0xFTkJRVU03VVVGRE1VTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhGUVVGRkxFTkJRVU1zWjBKQlFXZENMRU5CUVcxQ0xFTkJRVU03VVVGRGRrUXNTVUZCU1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhGUVVGRkxFTkJRVU1zWVVGQllTeERRVUZ6UWl4RFFVRkRPMUZCUTNSRUxFbEJRVWtzUTBGQlF5eEhRVUZITEVkQlFVY3NSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJiMElzUTBGQlF6dFJRVU12UXl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRGJFSXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVOQlFVTXNTVUZCU1N4RFFVRkRMRlZCUVZVc1JVRkJSU3hEUVVGRExFTkJRVU03U1VGRGFFUXNRMEZCUXp0SlFVTkVMRWxCUVVrc1EwRkJReXhOUVVGbExFVkJRVVVzUjBGQlZ6dFJRVU5vUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0UlFVTjRRaXhOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRPMUZCUXk5Q0xFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0UlFVTnFRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTm9RaXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdVVUZEYkVJc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTnNRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1dVRkRkRUlzVFVGQlRTeERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xbEJRM0JDTEUxQlFVMHNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dFpRVU53UWl4RFFVRkRMRU5CUVVNc1UwRkJVeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEYkVJc1EwRkJReXhEUVVGRExGTkJRVk1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTJ4Q0xFOUJRVThzUTBGQlF5eERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZPMmRDUVVObUxFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNN1owSkJRM0pDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03WjBKQlEyNUNMRWxCUVVrc1EwRkJReXhIUVVGSExFVkJRVVVzVTBGQlV5eERRVUZETEVOQlFVTTdXVUZEZEVJc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRFNDeFBRVUZQTEVOQlFVTXNRMEZCUXl4RlFVRkZMRWRCUVVjc1JVRkJSVHRuUWtGRFppeEpRVUZKTEVOQlFVTXNSMEZCUnl4RlFVRkZMRk5CUVZNc1EwRkJReXhEUVVGRE8yZENRVU55UWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhGUVVGRkxGTkJRVk1zUTBGQlF5eERRVUZETzJkQ1FVTnlRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMWxCUTNCQ0xFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEwZ3NTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF6dFpRVU55UWl4SlFVRkpMRU5CUVVNc1EwRkJReXhGUVVGRkxHTkJRV01zUTBGQlF5eERRVUZETzFsQlEzaENMRWxCUVVrc1EwRkJReXhEUVVGRExFVkJRVVVzWTBGQll5eERRVUZETEVOQlFVTTdXVUZEZUVJc1IwRkJSeXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnVRaXhIUVVGSExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTI1Q0xFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNXVUZCV1N4RFFVRkRMRU5CUVVNN1dVRkRlRUlzVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVNeFFpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF6dFJRVU4wUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVOSUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1NVRkRia0lzUTBGQlF6dEpRVU5FTEVsQlFVazdVVUZEU0N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0SlFVTjZRaXhEUVVGRE8wbEJRMDhzVlVGQlZUdFJRVU5xUWl4TlFVRk5MRTlCUVU4c1IwRkJZeXhGUVVGRkxFTkJRVU03VVVGRE9VSXNUVUZCVFN4WlFVRlpMRWRCUVdFc1JVRkJSU3hEUVVGRE8xRkJRMnhETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMWxCUXpOQ0xFbEJRVWtzUTBGQlF5eERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRE8yZENRVUZGTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03YVVKQlEyNUVMRWxCUVVrc1EwRkJReXhEUVVGRExGTkJRVk1zUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RFFVRkRPMmRDUVVGRkxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN08yZENRVU4yUkN4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXZRaXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU5JTEVsQlFVa3NXVUZCV1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFVkJRVVU3V1VGRE5VSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXcwUWtGQk5FSXNSMEZCUnl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEY2tVc1QwRkJUenRUUVVOUU8xRkJRMFFzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRKUVVOMFFpeERRVUZETzBsQlEwOHNUMEZCVHl4RFFVRkRMRWRCUVZjN1VVRkRNVUlzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRWRCUVVjc1IwRkJSeXhEUVVGRE8wbEJRekZDTEVOQlFVTTdRMEZEUkR0QlFWRkVMRTFCUVUwc1UwRkJVenRKUVVOa0xGbEJRWEZDTEUxQlFXTXNSVUZCVnl4SlFVRm5RanRSUVVGNlF5eFhRVUZOTEVkQlFVNHNUVUZCVFN4RFFVRlJPMUZCUVZjc1UwRkJTU3hIUVVGS0xFbEJRVWtzUTBGQldUdEpRVVU1UkN4RFFVRkRPMGxCUTBRc1QwRkJUenRSUVVOT0xFbEJRVWtzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc1RVRkJUVHRaUVVGRkxFOUJRVThzVTBGQlV5eERRVUZETzFGQlEzQkVMRTlCUVU4N1dVRkRUaXhOUVVGTkxFVkJRVVVzU1VGQlNTeERRVUZETEUxQlFVMDdXVUZEYmtJc1QwRkJUeXhGUVVGRkxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHp0WlFVTXhRaXhWUVVGVkxFVkJRVVVzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxPMU5CUXpOQ0xFTkJRVUU3U1VGRFJpeERRVUZETzBOQlEwUTdRVUZEUkN4SlFVRlZMRkZCUVZFc1EwRnRRbXBDTzBGQmJrSkVMRmRCUVZVc1VVRkJVVHRKUVVOcVFpeFRRVUZuUWl4TFFVRkxMRU5CUVVNc1EwRkJVenRSUVVNNVFpeE5RVUZOTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFGQlF6RkNMRWxCUVVrc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF6dFpRVUZGTEU5QlFVOHNVMEZCVXl4RFFVRkRPMUZCUTJwRExFOUJRVThzU1VGQlNTeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1NVRkRkRUlzUTBGQlF6dEpRVXBsTEdOQlFVc3NVVUZKY0VJc1EwRkJRVHRKUVVORUxGTkJRV2RDTEVkQlFVY3NRMEZCUXl4RFFVRnRRanRSUVVOMFF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVRkZMRTlCUVU4c1JVRkJSU3hEUVVGRE8xRkJRMnhDTEU5QlFVOHNRMEZCUXl4RFFVRkRMRmRCUVZjc1JVRkJSU3hEUVVGRE8wbEJRM2hDTEVOQlFVTTdTVUZJWlN4WlFVRkhMRTFCUjJ4Q0xFTkJRVUU3U1VGRFJDeFRRVUZuUWl4TFFVRkxPMUZCUTNCQ0xFOUJRVThzVVVGQlVTeERRVUZETEVsQlFVa3NTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJRenRKUVVNM1FpeERRVUZETzBsQlJtVXNZMEZCU3l4UlFVVndRaXhEUVVGQk8wbEJRMFFzVTBGQlowSXNVVUZCVVN4RFFVRkRMRWxCUVZVN1VVRkRiRU1zVDBGQlR5eEpRVUZKTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU51UXl4RFFVRkRPMGxCUm1Vc2FVSkJRVkVzVjBGRmRrSXNRMEZCUVR0SlFVTkVMRk5CUVdkQ0xGVkJRVlVzUTBGQlF5eEpRVUZWTzFGQlEzQkRMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRWRCUVVjc1JVRkJSU3hIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRPMGxCUXk5RkxFTkJRVU03U1VGR1pTeHRRa0ZCVlN4aFFVVjZRaXhEUVVGQk8wRkJRMFlzUTBGQlF5eEZRVzVDVXl4UlFVRlJMRXRCUVZJc1VVRkJVU3hSUVcxQ2FrSTdRVUZGUkN4VFFVRlRMRmRCUVZjc1EwRkJReXhMUVVGWkxFVkJRVVVzUjBGQlZ5eEZRVUZGTEV0QlFXVXNSVUZCUlN4SlFVRjVRanRKUVVONlJpeEpRVUZKTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hIUVVGSExFZEJRVWNzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUXk5RExFbEJRVWtzUzBGQlN5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOeVFpeEpRVUZKTEZGQlFWRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTNoRExFbEJRVWtzVVVGQlVTeEhRVUYxUWl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdTVUZEZEVRc1NVRkJTU3hSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU40UXl4SlFVRkpMRk5CUVZNc1IwRkJSeXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRia01zVFVGQlRTeFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8wbEJRMmhETEVsQlFVa3NTMEZCU3l4SlFVRkpMRVZCUVVVN1VVRkJSU3hMUVVGTExFZEJRVWNzVVVGQlVTeERRVUZETzBsQlEyeERMRWxCUVVrc1MwRkJTeXhKUVVGSkxGRkJRVkVzU1VGQlNTeExRVUZMTEVsQlFVa3NUMEZCVHl4SlFVRkpMRXRCUVVzc1NVRkJTU3hUUVVGVExFVkJRVVU3VVVGRGFFVXNTVUZCU1N4RFFVRkRMSGxFUVVGNVJDeERRVUZETEVOQlFVTTdVVUZEYUVVc1MwRkJTeXhIUVVGSExGRkJRVkVzUTBGQlF6dExRVU5xUWp0SlFVTkVMRWxCUVVrc1MwRkJTeXhKUVVGSkxFOUJRVThzU1VGQlNTeExRVUZMTEVsQlFVa3NVMEZCVXl4RlFVRkZPMUZCUXpORExFbEJRVWs3V1VGRFNDeEpRVUZKTEVOQlFVTXNVVUZCVVN4SlFVRkpMRU5CUVVNc1VVRkJVU3hKUVVGSkxFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4TFFVRkxMRU5CUVVNc1UwRkJVeXhEUVVGRExFVkJRVVU3WjBKQlEyeEZMRTFCUVUwc1JVRkJSU3hEUVVGRE8yRkJRMVE3V1VGRFJDeE5RVUZOTEVsQlFVa3NSMEZCVlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlJ5eEZRVUZGTEV0QlFVc3NSVUZCUlN4UlFVRlJMRVZCUVVVc1VVRkJVU3hGUVVGRkxGRkJRVkVzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRWRCUVVjc1JVRkJSU3hUUVVGVExFVkJRVVVzUTBGQlF6dFpRVU42Unl4UFFVRlBMRWxCUVVrc1EwRkJRenRUUVVOYU8xRkJRVU1zVjBGQlN6dFpRVU5PTEVsQlFVa3NRMEZCUXl4dlJVRkJiMFVzUTBGQlF5eERRVUZETzFsQlF6TkZMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU03V1VGRGFrSXNVMEZCVXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVOa0xGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTTdXVUZEY2tJc1VVRkJVU3hIUVVGSExFZEJRVWNzUTBGQlF6dFpRVU5tTEZGQlFWRXNSMEZCUnl4VFFVRlRMRU5CUVVNN1UwRkRja0k3UzBGRFJEdEpRVU5FTEVsQlFVa3NVMEZCVXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVOQlFVTTdVVUZEZEVNc1NVRkJTU3hEUVVGRExIZEVRVUYzUkN4RFFVRkRMRU5CUVVNN1NVRkRhRVVzU1VGQlNTeFJRVUZSTEVsQlFVa3NVMEZCVXp0UlFVTjRRaXhKUVVGSkxFTkJRVU1zZFVSQlFYVkVMRU5CUVVNc1EwRkJRenRKUVVNdlJDeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenRSUVVOdVFpeEpRVUZKTEVOQlFVTXNjMFJCUVhORUxFTkJRVU1zUTBGQlF6dEpRVU01UkN4SlFVRkpMRkZCUVZFc1NVRkJTU3hUUVVGVE8xRkJRM2hDTEVsQlFVa3NRMEZCUXl4MVJFRkJkVVFzUTBGQlF5eERRVUZETzBsQlF5OUVMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVU03U1VGRFpDeFJRVUZSTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUTNKQ0xGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTTdTVUZEY2tJc1VVRkJVU3hIUVVGSExGTkJRVk1zUTBGQlF6dEpRVU55UWl4TlFVRk5MRWxCUVVrc1IwRkJWU3hGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRXRCUVVzc1JVRkJSU3hSUVVGUkxFVkJRVVVzVVVGQlVTeEZRVUZGTEZGQlFWRXNSVUZCUlN4UlFVRlJMRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeEhRVUZITEVWQlFVVXNVMEZCVXl4RlFVRkZMRU5CUVVNN1NVRkRia2dzVDBGQlR5eEpRVUZKTEVOQlFVTTdRVUZEWWl4RFFVRkRPMEZCUTBRc1UwRkJVeXhsUVVGbExFTkJRVU1zUzBGQldUdEpRVU53UXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03U1VGRGFFSXNUVUZCVFN4SFFVRkhMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhWUVVGVkxFTkJRVU03U1VGRE9VTXNUVUZCVFN4WlFVRlpMRWRCUVVjc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRPMGxCUnpsRUxFMUJRVTBzUzBGQlN5eEhRVUZITEV0QlFVc3NSMEZCUnl4SlFVRkpMRWRCUVVjc1IwRkJSeXhIUVVGSExFbEJRVWtzUjBGQlJ5eEhRVUZITEVOQlFVTTdTVUZET1VNc1RVRkJUU3hOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVGRExFdEJRVXNzUlVGQlJTeFJRVUZSTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNVVUZCVVN4SlFVRkpMRU5CUVVNc1JVRkJSU3hSUVVGUkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVVndTQ3hQUVVGUExFVkJRVVVzUzBGQlN5eEZRVUZGTEUxQlFVMHNSVUZCUlN4RFFVRkRPMEZCUXpGQ0xFTkJRVU03UVVGRFJDeEpRVUZWTEUxQlFVMHNRMEYzUjJZN1FVRjRSMFFzVjBGQlZTeE5RVUZOTzBsQlEyWXNTVUZCU1N4UlFVRlJMRWRCUVVjc1MwRkJTeXhEUVVGQk8wbEJRM0JDTEZOQlFXZENMRWxCUVVrN1VVRkRia0lzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4alFVRmpMRVZCUVVVc1IwRkJSeXhGUVVGRk8xbEJRemxDTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNN1VVRkRha0lzUTBGQlF5eERRVUZETEVOQlFVTTdTVUZEU2l4RFFVRkRPMGxCU21Vc1YwRkJTU3hQUVVsdVFpeERRVUZCTzBsQlEwUXNVMEZCWjBJc1NVRkJTU3hEUVVGRExGRkJRV2RDTEVWQlFVVXNUVUZCVFN4SFFVRkhMRWRCUVVjc1JVRkJSU3hIUVVGSExFTkJRVU1zUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRk5MRVZCUVVVc1JVRkJSU3hIUVVGSExFTkJRVU03VVVGRGFrWXNTVUZCU1N4RFFVRkRMRkZCUVZFN1dVRkJSU3hQUVVGUExFdEJRVXNzUTBGQlF6dFJRVU0xUWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF6dFpRVU5vUWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRaUVVOc1FpeExRVUZMTEVWQlFVVXNPRU5CUVRoRE8xbEJRM0pFTEdGQlFXRXNSVUZCUlN4RFFVRkRMREJFUVVFd1JDeERRVUZETzFOQlF6TkZMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVTdXVUZEV0N4TlFVRk5MRVZCUVVVc1EwRkJRenRaUVVOVUxFbEJRVWtzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4bFFVRmxMRVZCUVVVc1EwRkJReXhWUVVGVkxFTkJRVU1zUjBGQlJ5eEZRVUZGTzJkQ1FVTm9SQ3hQUVVGQkxGRkJRVkVzUlVGQlJTeERRVUZETzFsQlExb3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhsUVVGbExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1ZVRkJWU3hGUVVGRkxFVkJRVVU3WjBKQlF6ZEVMRWxCUVVrc1ZVRkJWVHR2UWtGQlJTeFBRVUZCTEZGQlFWRXNSVUZCUlN4RFFVRkRPenR2UWtGRGRFSXNUMEZCUVN4VFFVRlRMRVZCUVVVc1EwRkJRenRaUVVOc1FpeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTktMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTmFMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU5XTEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUTBnc1QwRkJUeXhKUVVGSkxFTkJRVU03U1VGRFlpeERRVUZETzBsQmJFSmxMRmRCUVVrc1QwRnJRbTVDTEVOQlFVRTdTVUZEUkN4VFFVRm5RaXhaUVVGWk8xRkJRek5DTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaU3hGUVVGRkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdTVUZEZGtNc1EwRkJRenRKUVVabExHMUNRVUZaTEdWQlJUTkNMRU5CUVVFN1NVRkRWU3hsUVVGUkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkJPMGxCUTNCQ0xHZENRVUZUTEVkQlFVY3NSMEZCUnl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGQk8wbEJRMmhETEZOQlFXZENMRkZCUVZFc1EwRkJReXhOUVVGakxFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNTMEZCWXl4RlFVRkZMRVZCUVVVc1IwRkJSeXhEUVVGRExFVkJRVVVzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCVFN4RlFVRkZMRVZCUVVVc1IwRkJSeXhEUVVGRE8xRkJRM0JITEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExGbEJRVmtzUTBGQlF5eEhRVUZITEVOQlFVTTdXVUZEYmtNc1lVRkJZU3hGUVVGRkxFMUJRVTA3VTBGRGNrSXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkRUaXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlEzSkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zU1VGQlNTeFRRVUZUTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZEYkVRc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVOcVFpeEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRiRU1zUTBGQlF6dEpRVkpsTEdWQlFWRXNWMEZSZGtJc1EwRkJRVHRKUVVORUxGTkJRVk1zVjBGQlZ5eERRVUZETEUxQlFXTXNSVUZCUlN4TFFVRmhMRVZCUVVVc1UwRkJVeXhIUVVGSExFTkJRVU1zVFVGQmEwSXNSVUZCUlN4RlFVRkZMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVMHNSVUZCUlN4RlFVRkZMRWRCUVVjc1EwRkJRenRSUVVOdVNDeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhaUVVGWkxFTkJRVU1zVFVGQlRTeERRVUZETEVkQlFVY3NRMEZCUXp0WlFVTXhReXhoUVVGaExFVkJRVVVzVFVGQlRUdFpRVU55UWl4TFFVRkxMRVZCUVVVc1MwRkJTenRaUVVOYUxHbENRVUZwUWl4RlFVRkZMRk5CUVZNN1UwRkROVUlzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZEVGl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExGTkJRVk1zUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVOdVF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRiRU1zUTBGQlF6dEpRVU5FTEZOQlFWTXNVVUZCVVN4RFFVRkRMRTFCUVdNc1JVRkJSU3hMUVVGaExFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNUVUZCYTBJc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF5eEZRVUZGTEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVUwc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF6dFJRVU5vU0N4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFpRVUZaTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJRenRaUVVNeFF5eGhRVUZoTEVWQlFVVXNUVUZCVFR0WlFVTnlRaXhMUVVGTExFVkJRVVVzUzBGQlN6dFpRVU5hTEdsQ1FVRnBRaXhGUVVGRkxHMUNRVUZ0UWp0VFFVTjBReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVU5PTEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1UwRkJVeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUTI1RExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTnNReXhEUVVGRE8wbEJRMFFzVTBGQlowSXNZVUZCWVN4RFFVRkRMRXRCUVZrc1JVRkJSU3hUUVVGVExFZEJRVWNzUTBGQlF5eExRVUZqTEVWQlFVVXNSVUZCUlN4SFFVRkhMRU5CUVVNc1JVRkJSU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZOTEVWQlFVVXNSVUZCUlN4SFFVRkhMRU5CUVVNN1VVRkRka2NzVFVGQlRTeE5RVUZOTEVkQlFVY3NTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJRenRSUVVNMVFpeE5RVUZOTEZOQlFWTXNSMEZCUnl4SFFVRkhMRWRCUVVjc1MwRkJTeXhEUVVGRExGVkJRVlVzUjBGQlJ5eEhRVUZITEVOQlFVTTdVVUZETDBNc1RVRkJUU3hYUVVGWExFZEJRVWNzVTBGQlV5eEhRVUZITEV0QlFVc3NRMEZCUXp0UlFVTjBReXhSUVVGUkxFTkJRVU1zVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TFFVRkxMRU5CUVVNc1JVRkJSVHRaUVVOeVF5eE5RVUZOTEUxQlFVMHNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRja01zU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVN1owSkJRMnhDTEV0QlFVc3NRMEZCUXl4elJrRkJjMFlzUTBGQlF5eERRVUZETzJkQ1FVTTVSaXhQUVVGUE8yRkJRMUE3V1VGRFJDeE5RVUZOTEZWQlFWVXNSMEZCUnl4VFFVRlRMRWRCUVVjc1QwRkJUeXhIUVVGSExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNSRUxGRkJRVkVzUTBGQlF5eE5RVUZOTEVWQlFVVXNWVUZCVlN4RlFVRkZMRXRCUVVzc1EwRkJReXhGUVVGRk8yZENRVU53UXl4SlFVRkpMRkZCUVZFc1IwRkJZU3hGUVVGRkxFTkJRVU03WjBKQlF6VkNMRTFCUVUwc1MwRkJTeXhIUVVGWkxFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVU3YjBKQlF6ZERMRXRCUVVzc1NVRkJTU3hEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJUdDNRa0ZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzI5Q1FVTnlSQ3hKUVVGSkxFbEJRVWtzUjBGQlJ5eERRVUZETEVOQlFWTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dHZRa0ZET1VRc1QwRkJUeXhYUVVGWExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTXZReXhEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEU0N4SlFVRkpMRkZCUVZFc1EwRkJReXhOUVVGTkxFZEJRVWNzUTBGQlF6dHZRa0ZCUlN4TFFVRkxMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPenR2UWtGREwwTXNVMEZCVXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xbEJRM1pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUTI1Q0xFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEyNUNMRU5CUVVNN1NVRjBRbVVzYjBKQlFXRXNaMEpCYzBJMVFpeERRVUZCTzBsQlEwUXNVMEZCWjBJc1ZVRkJWU3hEUVVGRExFdEJRV01zUlVGQlJTeFRRVUZUTEVkQlFVY3NSMEZCUnl4RlFVRkZMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVMHNSVUZCUlN4RlFVRkZMRWRCUVVjc1EwRkJRenRSUVVONFJpeEpRVUZKTEVkQlFVY3NSMEZCUnl4SlFVRkpMRWRCUVVjc1JVRkJiVUlzUTBGQlF6dFJRVU55UXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTzFsQlEycENMRTFCUVUwc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRPMWxCUXpsQ0xFbEJRVWtzUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4TlFVRk5MRU5CUVVNN1owSkJRVVVzUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4TlFVRk5MRU5CUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdPMmRDUVVONlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVVUZETTBJc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRFNDeEhRVUZITEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFMUJRVTBzUlVGQlJTeEZRVUZGTzFsQlF6ZENMRzFDUVVGdFFpeERRVUZETEUxQlFVMHNSVUZCUlN4TFFVRkxMRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUTBGQlF5eERRVUZETzFGQlEzUkVMRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRMG9zUTBGQlF6dEpRVlpsTEdsQ1FVRlZMR0ZCVlhwQ0xFTkJRVUU3U1VGRFJDeFRRVUZUTEcxQ1FVRnRRaXhEUVVGRExFMUJRV01zUlVGQlJTeExRVUZqTEVWQlFVVXNVMEZCVXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hIUVVGSExFTkJRVU1zUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRk5MRVZCUVVVc1JVRkJSU3hIUVVGSExFTkJRVU03VVVGRE1VY3NTVUZCU1N4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFbEJRVWtzVFVGQlRTeERRVUZETzFsQlFVVXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRNMFFzU1VGQlNTeE5RVUZOTEVkQlFVY3NSVUZCUlN4aFFVRmhMRVZCUVVVc1RVRkJUU3hGUVVGRkxFTkJRVU03VVVGRGRrTXNTVUZCU1N4SlFVRkpMRWRCUVVjN1dVRkRWaXhuUWtGQlowSXNSVUZCUlN4TFFVRkxPMWxCUTNaQ0xFbEJRVWtzUlVGQlJTeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zWlVGQlpTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTNoRExFTkJRVU03VVVGRFJpeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhaUVVGWkxFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4TlFVRk5MRVZCUVVVc1NVRkJTU3hEUVVGRE8yRkJRemxFTEVsQlFVa3NRMEZEU2l4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExGTkJRVk1zUlVGQlJTeEZRVU5vUWl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTJ4Q0xFTkJRVU03UVVGRFJpeERRVUZETEVWQmVFZFRMRTFCUVUwc1MwRkJUaXhOUVVGTkxGRkJkMGRtTzBGQlEwUXNUVUZCVFN4VlFVRlZMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJRM1JDTEUxQlFVMHNVVUZCVVR0SlFVZGlMRmxCUVZrc1RVRkJaVHRSUVVSdVFpeGhRVUZSTEVkQlFYZENMRk5CUVZNc1EwRkJRenRSUVVWcVJDeEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRTFCUVUwc1EwRkJRenRSUVVOeVFpeEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1NVRkRZaXhEUVVGRE8wbEJRMFFzU1VGQlNTeERRVUZETEU5QlFXMUNPMUZCUTNaQ0xFbEJRVWtzVDBGQlR6dFpRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03VVVGRGJFTXNTVUZCU1N4RFFVRkRMRTlCUVU4N1dVRkJSU3hKUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTzJkQ1FVRkZMRTFCUVUwc1MwRkJTeXhEUVVGRE8xRkJRemRETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRSUVVOYUxFbEJRVWtzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRWxCUVVrc1EwRkJRenRaUVVGRkxFOUJRVThzUlVGQlJTeE5RVUZOTEVWQlFVVXNSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3huUWtGQlowSXNSVUZCUlN4RFFVRkRPMUZCUlRsRkxFbEJRVWtzVDBGQlR5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTnFRaXhOUVVGTkxHTkJRV01zUjBGQlJ5eERRVUZETEVsQlFWY3NSVUZCUlN4RlFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzU1VGQlNTeFJRVUZSTzFsQlF6ZEVMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4SFFVRkhMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeEpRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRPMUZCUTNSRkxFbEJRVWtzWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdFpRVU51UXl4TlFVRk5MRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRVZCUVVVc1ZVRkJWU3hEUVVGRExFTkJRVU03V1VGRGFFUXNUVUZCVFN4UFFVRlBMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdXVUZEYkVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRE8xbEJRMnBFTEVsQlFVa3NRMEZCUXl4UlFVRlJMRWRCUVVjc1RVRkJUU3hEUVVGRE8xbEJRM1pDTEU5QlFVOHNSVUZCUlN4TlFVRk5MRVZCUVVVc1QwRkJUeXhGUVVGRkxFTkJRVU03VTBGRE0wSTdZVUZCVFR0WlFVTk9MRTFCUVUwc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1JVRkJSU3hWUVVGVkxFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExHTkJRV01zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTJoR0xFMUJRVTBzVDBGQlR5eEhRVUZITEZsQlFWa3NRMEZCUXp0WlFVTTNRaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEZOQlFWTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU03V1VGRGFrUXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhOUVVGTkxFTkJRVU03V1VGRGRrSXNUMEZCVHl4RlFVRkZMRTFCUVUwc1JVRkJSU3hQUVVGUExFVkJRVVVzUTBGQlF6dFRRVU16UWp0SlFVTkdMRU5CUVVNN1NVRkRUeXhOUVVGTkxFTkJRVU1zVDBGQmEwSTdVVUZEYUVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTzFsQlFVVXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRhRU1zU1VGQlNTeFBRVUZQTEVOQlFVTXNUVUZCVFN4SlFVRkpMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVFVGQlRUdFpRVUZGTEUxQlFVMHNTMEZCU3l4RFFVRkRPMUZCUTNoRUxFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZGTzFsQlEyeERMRTFCUVUwc1RVRkJUU3hIUVVGSExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTXhRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVsQlFVa3NSVUZCUlN4RFFVRkRPMWxCUTNaQ0xFbEJRVWtzVFVGQlRTeEZRVUZGTzJkQ1FVTllMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETzJkQ1FVTndRaXhOUVVGTkxFMUJRVTBzUjBGQlJ5eERRVUZETEVkQlFVY3NTVUZCU1N4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETzJkQ1FVTjJReXhKUVVGSkxFdEJRVXNzUTBGQlF5eFJRVUZSTEVWQlFVVTdiMEpCUTI1Q0xFMUJRVTBzVjBGQlZ5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRTlCUVU4c1JVRkJSU3hIUVVGSExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RlFVRkZMRU5CUVVNc1IwRkJSeXhIUVVGSExFTkJRVU03YjBKQlEzSkZMRXRCUVVzc1EwRkJReXhSUVVGUkxFZEJRVWNzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVU3hGUVVGRkxGZEJRVmNzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0cFFrRkRMMFE3Y1VKQlFVMDdiMEpCUlU0c1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ5eE5RVUZOTEVOQlFVTTdhVUpCUTNoQ08yZENRVU5FTEV0QlFVc3NRMEZCUXl4TFFVRkxMRWRCUVVjc1QwRkJUeXhEUVVGRE8yRkJRM1JDTzJsQ1FVRk5PMmRDUVVOT0xFdEJRVXNzUTBGQlF5eFRRVUZUTEVWQlFVVXNRMEZCUXp0blFrRkRiRUlzUzBGQlN5eERRVUZETEZGQlFWRXNSMEZCUnl4RFFVRkRMRU5CUVVNN1owSkJRMjVDTEV0QlFVc3NRMEZCUXl4TFFVRkxMRWRCUVVjc1MwRkJTeXhEUVVGRExFdEJRVXNzU1VGQlNTeFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zVTBGQlV5eERRVUZETzJGQlF6VkVPMWxCUTBRc1MwRkJTeXhEUVVGRExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1dVRkRhRU1zUzBGQlN5eERRVUZETEZGQlFWRXNSMEZCUnl4SFFVRkhMRU5CUVVNN1dVRkRja0lzUzBGQlN5eERRVUZETEZGQlFWRXNSMEZCUnl4SlFVRkpMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zVDBGQlR5eEZRVUZGTEVkQlFVY3NTMEZCU3l4RFFVRkRMRkZCUVZNc1EwRkJReXhEUVVGRE8xbEJRek5FTEV0QlFVc3NRMEZCUXl4SFFVRkhMRWxCUVVrc1VVRkJVU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhIUVVGSExFTkJRVU03VVVGRE4wUXNRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRTQ3hOUVVGTkxFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUXpsQ0xFZEJRVWNzUlVGQlJTeERRVUZETEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNSVUZEYmtNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMR0ZCUVdFc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGRGJFTXNRMEZCUXp0SlFVTklMRU5CUVVNN1NVRkRUeXhKUVVGSk8xRkJRMWdzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVWQlFVVTdXVUZEZWtJc1RVRkJUU3hOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NTVUZCU1N4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1NVRkJTU3hUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM1JGTEUxQlFVMHNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFbEJRVWtzVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eExRVUZMTEVsQlFVa3NVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTjBSU3hKUVVGSkxFMUJRVTBzU1VGQlNTeE5RVUZOTzJkQ1FVRkZMRTlCUVU4c1RVRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF6dFpRVU0zUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhMUVVGTExFbEJRVWtzVVVGQlVTeEpRVUZKTEVOQlFVTXNRMEZCUXl4TFFVRkxMRWxCUVVrc1VVRkJVVHRuUWtGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXl4VFFVRlRMRWRCUVVjc1EwRkJReXhEUVVGRExGTkJRVk1zUTBGQlF6dFpRVU5xUml4TlFVRk5MRWRCUVVjc1IwRkJSeXhSUVVGUkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1IwRkJSeXhSUVVGUkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRaUVVNNVJTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRPMmRDUVVGRkxFOUJRVThzUjBGQlJ5eERRVUZET3p0blFrRkRjRUlzVDBGQlR5eERRVUZETEVOQlFVTXNVMEZCVXl4SFFVRkhMRU5CUVVNc1EwRkJReXhUUVVGVExFTkJRVU03VVVGRGRrTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRTaXhEUVVGRE8wTkJRMFE3UVVGRFJDeE5RVUZOTEVOQlFVTXNSMEZCUnl4RlFVRkZPMGxCUTFnc1RVRkJUU3hSUVVGUkxFZEJRVWNzU1VGQlNTeHBRa0ZCYVVJc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF6dEpRVU51UkN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUlVGQlJTeERRVUZETzBsQlEyaERMRTFCUVUwc1VVRkJVU3hIUVVGSExFbEJRVWtzYVVKQlFXbENMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03U1VGRGFrUXNUVUZCVFN4UlFVRlJMRWRCUVVjc1NVRkJTU3hsUVVGbExFTkJRVU1zVlVGQlZTeEZRVUZGTEZGQlFWRXNRMEZCUXl4RFFVRkRPMGxCUXpORUxFMUJRVTBzVVVGQlVTeEhRVUZITEVsQlFVa3NaVUZCWlN4RFFVRkRMRkZCUVZFc1JVRkJSU3hSUVVGUkxFTkJRVU1zUTBGQlF6dEpRVU42UkN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGVkJRVlVzUlVGQlJTeERRVUZETzBsQlEyeERMRTFCUVUwc1VVRkJVU3hIUVVGSExFbEJRVWtzVDBGQlR5eEZRVUZGTEVOQlFVTTdTVUZETDBJc1QwRkJUeXhEUVVGRExFVkJRVVVzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZCUlN4SFFVRkhMRVZCUVVVN1VVRkROMElzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4cFJVRkJhVVVzUTBGQlF6dFpRVUZGTEU5QlFVODdVVUZEZUVZc1VVRkJVU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzFGQlEycENMRkZCUVZFc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dFJRVU5xUWl4TFFVRkxMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU03VVVGRGJFSXNUVUZCVFN4RFFVRkRMRkZCUVZFc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF6dEpRVU14UWl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOSUxGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRVZCUVVVN1VVRkRla0lzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTJoQ0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRWRCUVVjc1JVRkJSVHRaUVVOMFFpeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8xbEJRemRDTEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRSUVVOcVFpeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRVZCUVVVN1dVRkRUaXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM3BDTEZGQlFWRXNRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJRenRSUVVOdVFpeERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTktMRU5CUVVNc1EwRkJRenRKUVVOR0xGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NSMEZCUnl4RlFVRkZPMUZCUTNaQ0xFMUJRVTBzUTBGQlF5eFpRVUZaTEVWQlFVVXNRMEZCUXp0SlFVTjJRaXhEUVVGRExFTkJRVUU3U1VGRFJDeE5RVUZOTEVOQlFVTXNVVUZCVVN4SFFVRkhMRWRCUVVjc1JVRkJSVHRSUVVOMFFpeFJRVUZSTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1VVRkRhRUlzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMGxCUTJwQ0xFTkJRVU1zUTBGQlFUdEpRVU5FTEUxQlFVMHNRMEZCUXl4VFFVRlRMRWRCUVVjc1IwRkJSeXhGUVVGRk8xRkJRM1pDTEV0QlFVc3NRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRKUVVOMFFpeERRVUZETEVOQlFVRTdTVUZEUkN4SlFVRkpMRTlCUVU4c1IwRkJkMElzVTBGQlV5eERRVUZETzBsQlF6ZERMRkZCUVZFc1EwRkJReXhQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVTdVVUZEZWtJc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFGQlEyaENMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVc3NRMEZCUXl4RlFVRkZPMWxCUXpkQ0xGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1dVRkROMElzVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVOeVFpeFBRVUZQTEVkQlFVY3NTMEZCU3l4RFFVRkRPMUZCUTJwQ0xFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTk9MRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRla0lzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTJwQ0xFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEwb3NRMEZCUXl4RFFVRkRPMGxCUTBZc1NVRkJTU3hSUVVGUkxFZEJRWGxDTEZOQlFWTXNRMEZCUXp0SlFVTXZReXhSUVVGUkxFTkJRVU1zVVVGQlVTeEhRVUZITEVsQlFVa3NRMEZCUXl4RlFVRkZPMUZCUXpGQ0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTm9RaXhOUVVGTkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1JVRkJSVHRaUVVOc1F5eFJRVUZSTEVkQlFVY3NTVUZCU1N4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03V1VGREwwSXNUVUZCVFN4TlFVRk5MRWRCUVVjc1EwRkJReXhQUVVGdFFpeEZRVUZGTEVWQlFVVTdaMEpCUTNSRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVTdiMEpCUTJRc1RVRkJUU3hMUVVGTExFTkJRVU03YVVKQlExbzdaMEpCUTBRc1RVRkJUU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFBRVUZQTEVWQlFVVXNSMEZCUnl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETzJkQ1FVTnVSQ3hSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRaUVVOb1F5eERRVUZETEVOQlFVRTdXVUZEUkN4UlFVRlJMRU5CUVVNc1RVRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF6dFpRVU42UWl4TlFVRk5MRVZCUVVVc1EwRkJRenRSUVVOV0xFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTk9MRWxCUVVrc1QwRkJUeXhEUVVGRExFbEJRVWtzVVVGQlVUdG5Ra0ZEZGtJc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZET3p0blFrRkZWQ3hMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRekZDTEVsQlFVa3NUMEZCVHp0blFrRkRWaXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPenRuUWtGRmRrSXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRaQ3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5LTEVOQlFVTXNRMEZCUVR0SlFVVkVMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dEpRVVZvUWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03U1VGRFpDeE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWRCUVVjc1RVRkJUU3hEUVVGRE8wRkJRek5DTEVOQlFVTXNRMEZCUXl4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USxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hCLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUssSUFBSTtZQUNoQyxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDL0IsTUFBTSxNQUFNLEdBQUcsQ0FBQyxPQUFPLEtBQUs7Z0JBQ3hCLElBQUksQ0FBQyxRQUFRLEVBQUU7b0JBQ1gsTUFBTSxLQUFLLENBQUM7aUJBQ2Y7Z0JBQ0QsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNuRCxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQzthQUNsQyxDQUFDO1lBQ0YsUUFBUSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7WUFDekIsTUFBTSxFQUFFLENBQUM7U0FDWixFQUFFLENBQUMsSUFBSTtZQUNKLElBQUksT0FBTyxDQUFDLElBQUksUUFBUTtnQkFDcEIsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDOztnQkFFVCxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksT0FBTztnQkFDUCxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDOztnQkFFdkIsTUFBTSxLQUFLLENBQUM7U0FDbkIsQ0FBQyxDQUFDO0tBQ04sQ0FBQztJQUNGLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDZCxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsTUFBTSxDQUFDO0NBQzdCLENBQUMsQ0FBQyIsInByZUV4aXN0aW5nQ29tbWVudCI6Ii8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJanB1ZFd4c0xDSnpiM1Z5WTJWeklqcGJJaTlvYjIxbEwyMXplUzlFWlhOcmRHOXdMMWRsWWtGd2NDOXRaVzF2Y21sNlpTMXphR1ZsZEM5a2IyTnpMMnB6TDJsdVpHVjRMbXB6SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltWjFibU4wYVc5dUlHZGxLR2xrS1NCN1hHNGdJQ0FnY21WMGRYSnVJR1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJDZVVsa0tHbGtLVHRjYm4xY2JtWjFibU4wYVc5dUlHTmxLSFJoWjA1aGJXVXBJSHRjYmlBZ0lDQnlaWFIxY200Z1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2gwWVdkT1lXMWxLVHRjYm4xY2JtWjFibU4wYVc5dUlHTk1TU2hwYm01bGNsUmxlSFFzSUdOc1lYTnpaWE1zSUdsa0xDQnZia05zYVdOclJtNHBJSHRjYmlBZ0lDQmpiMjV6ZENCc2FTQTlJR05sS0Z3aWJHbGNJaWs3WEc0Z0lDQWdiR2t1YVc1dVpYSlVaWGgwSUQwZ2FXNXVaWEpVWlhoME8xeHVJQ0FnSUdOc1lYTnpaWE11Wm05eVJXRmphQ2hmSUQwK0lHRmtaRU1vYkdrc0lGOHBLVHRjYmlBZ0lDQnBaaUFvYVdRcFhHNGdJQ0FnSUNBZ0lHeHBMbWxrSUQwZ2FXUTdYRzRnSUNBZ2FXWWdLRzl1UTJ4cFkydEdiaWxjYmlBZ0lDQWdJQ0FnYjI1RGJHbGpheWhzYVN3Z2IyNURiR2xqYTBadUtUdGNiaUFnSUNCeVpYUjFjbTRnYkdrN1hHNTlYRzVtZFc1amRHbHZiaUJ5WlcxREtHVnNiU3dnWTJ4ektTQjdYRzRnSUNBZ1pXeHRMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9ZMnh6S1R0Y2JuMWNibVoxYm1OMGFXOXVJR0ZrWkVNb1pXeHRMQ0JqYkhNcElIdGNiaUFnSUNCbGJHMHVZMnhoYzNOTWFYTjBMbUZrWkNoamJITXBPMXh1ZlZ4dVpuVnVZM1JwYjI0Z2NtVnRRV3hzS0dWc2JTa2dlMXh1SUNBZ0lHVnNiUzVwYm01bGNraFVUVXdnUFNCY0lsd2lPMXh1ZlZ4dVpuVnVZM1JwYjI0Z2IyNURiR2xqYXlobGJHMHNJR1p1S1NCN1hHNGdJQ0FnWld4dExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb1hDSmpiR2xqYTF3aUxDQm1iaWs3WEc1OVhHNW1kVzVqZEdsdmJpQnZia3h2WVdRb1ptNHBJSHRjYmlBZ0lDQjNhVzVrYjNjdVlXUmtSWFpsYm5STWFYTjBaVzVsY2loY0lteHZZV1JjSWl3Z1ptNHBPMXh1ZlZ4dVkyeGhjM01nVTNSeWFXNW5UR2x6ZEZOMGIzSmhaMlVnZTF4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0d0bGVTa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtdGxlU0E5SUd0bGVUdGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmEyVjVjeUE5SUZ0ZE8xeHVJQ0FnSUgxY2JpQWdJQ0JuWlhRZ2EyVjVjeWdwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVW9LVHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgydGxlWE11YzJ4cFkyVW9LVHRjYmlBZ0lDQjlYRzRnSUNBZ2MyVjBJR3RsZVhNb2EyVjVjeWtnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDlyWlhseklEMGdhMlY1Y3k1emJHbGpaU2dwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMblZ3WkdGMFpWTjBiM0poWjJVb0tUdGNiaUFnSUNCOVhHNGdJQ0FnWjJWMElITjBiM0poWjJWTFpYa29LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtdGxlU0FySUZ3aUxYTjBjbWx1WjB4cGMzUlRkRzl5WVdkbFhDSTdYRzRnSUNBZ2ZWeHVJQ0FnSUdoaGN5aHJaWGtwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhMlY1Y3k1cGJtUmxlRTltS0d0bGVTa2dQajBnTUR0Y2JpQWdJQ0I5WEc0Z0lDQWdZV1JrS0d0bGVTa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXJaWGx6TG5CMWMyZ29hMlY1S1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVlRkRzl5WVdkbEtDazdYRzRnSUNBZ2ZWeHVJQ0FnSUdGa1pFbG1UbTkwUlhocGMzUW9hMlY1S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11ZFhCa1lYUmxLQ2s3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5clpYbHpMbWx1WkdWNFQyWW9hMlY1S1NBOElEQXBYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbUZrWkNoclpYa3BPMXh1SUNBZ0lIMWNiaUFnSUNCeVpXMXZkbVVvYTJWNUtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsS0NrN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdrZ1BTQjBhR2x6TGw5clpYbHpMbWx1WkdWNFQyWW9hMlY1S1R0Y2JpQWdJQ0FnSUNBZ2FXWWdLR2tnUENBd0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5clpYbHpMbk53YkdsalpTaHBMQ0F4S1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVlRkRzl5WVdkbEtDazdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjblZsTzF4dUlDQWdJSDFjYmlBZ0lDQmpiR1ZoY2lncElIdGNiaUFnSUNBZ0lDQWdiRzlqWVd4VGRHOXlZV2RsTG5KbGJXOTJaVWwwWlcwb2RHaHBjeTV6ZEc5eVlXZGxTMlY1S1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVW9LVHRjYmlBZ0lDQjlYRzRnSUNBZ2RYQmtZWFJsS0NrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCa1lYUmhJRDBnYkc5allXeFRkRzl5WVdkbExtZGxkRWwwWlcwb2RHaHBjeTV6ZEc5eVlXZGxTMlY1S1R0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZrWVhSaEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlyWlhseklEMGdXMTA3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR3hwYzNRZ1BTQktVMDlPTG5CaGNuTmxLR1JoZEdFcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doUVhKeVlYa3VhWE5CY25KaGVTaHNhWE4wS1NCOGZDQnNhWE4wTG5OdmJXVW9YeUE5UGlCMGVYQmxiMllnWHlBaFBTQmNJbk4wY21sdVoxd2lLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5clpYbHpJRDBnVzEwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5clpYbHpJRDBnYkdsemREdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqWVhSamFDQW9aU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMnRsZVhNZ1BTQmJYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0IwYUdsekxuVndaR0YwWlZOMGIzSmhaMlVvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdkWEJrWVhSbFUzUnZjbUZuWlNncElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2FYUmxiU0E5SUVwVFQwNHVjM1J5YVc1bmFXWjVLSFJvYVhNdVgydGxlWE1wTzF4dUlDQWdJQ0FnSUNCc2IyTmhiRk4wYjNKaFoyVXVjMlYwU1hSbGJTaDBhR2x6TG5OMGIzSmhaMlZMWlhrc0lHbDBaVzBwTzF4dUlDQWdJSDFjYm4xY2JtTnNZWE56SUZObGJHVmpkRTl5U1c1d2RYUlZTU0I3WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvYVdSUWNtVm1hWGdzSUhOMGIzSmhaMlVzSUc5dVJXNTBaWElnUFNBb0tTQTlQaUIyYjJsa0lEQXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXliMjkwSUQwZ1oyVW9hV1JRY21WbWFYZ3BPMXh1SUNBZ0lDQWdJQ0IwYUdsekxuVnNJRDBnWjJVb2FXUlFjbVZtYVhnZ0t5QmNJbDkxYkZ3aUtUdGNiaUFnSUNBZ0lDQWdkR2hwY3k1cGJuQjFkQ0E5SUdkbEtHbGtVSEpsWm1sNElDc2dYQ0pmYVc1d2RYUmNJaWs3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVhVzV3ZFhSQ2RHNGdQU0JuWlNocFpGQnlaV1pwZUNBcklGd2lYMlZ1ZEdWeVhDSXBPMXh1SUNBZ0lDQWdJQ0IwYUdsekxuTjBiM0poWjJVZ1BTQnpkRzl5WVdkbE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG05dVJXNTBaWElnUFNCdmJrVnVkR1Z5TzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6Wld4bUlEMGdkR2hwY3p0Y2JpQWdJQ0FnSUNBZ2IyNURiR2xqYXloMGFHbHpMbWx1Y0hWMFFuUnVMQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbU5oYkd4UGJrVnVkR1Z5S0hSb2FYTXVhVzV3ZFhRdWRtRnNkV1VwTzF4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNGdJQ0FnYzJodmR5Z3BJSHRjYmlBZ0lDQWdJQ0FnY21WdFF5aDBhR2x6TG5KdmIzUXNJRndpYUdsa1pWd2lLVHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhWFJsYlhNZ1BTQjBhR2x6TG5OMGIzSmhaMlV1YTJWNWN6dGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2RXd2dQU0IwYUdsekxuVnNPMXh1SUNBZ0lDQWdJQ0J5WlcxQmJHd29kV3dwTzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6Wld4bUlEMGdkR2hwY3p0Y2JpQWdJQ0FnSUNBZ2FYUmxiWE11Wm05eVJXRmphQ2gwWlhoMElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUd4cElEMGdZMHhKS0hSbGVIUXNJRnRkTENCMWJtUmxabWx1WldRc0lDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbU5oYkd4UGJrVnVkR1Z5S0hSbGVIUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCMWJDNWhjSEJsYm1SRGFHbHNaQ2hzYVNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtbHVjSFYwTG5aaGJIVmxJRDBnWENKY0lqdGNiaUFnSUNCOVhHNGdJQ0FnYUdsa1pTZ3BJSHRjYmlBZ0lDQWdJQ0FnWVdSa1F5aDBhR2x6TG5KdmIzUXNJRndpYUdsa1pWd2lLVHRjYmlBZ0lDQjlYRzRnSUNBZ1kyRnNiRTl1Ulc1MFpYSW9kR1Y0ZENrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG05dVJXNTBaWElvZEdWNGRDazdYRzRnSUNBZ2ZWeHVmVnh1WTJ4aGMzTWdVMmxuYm1sdVZVa2dlMXh1SUNBZ0lHTnZibk4wY25WamRHOXlLRzl1UTJ4cFkydEdiaUE5SUNncElEMCtJSFp2YVdRZ01Da2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxuSnZiM1FnUFNCblpTaGNJbk5wWjI1cGJsd2lLVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWlkRzRnUFNCblpTaGNJbk5wWjI1cGJsOWlkRzVjSWlrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YjI1RGJHbGpheUE5SUc5dVEyeHBZMnRHYmp0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWc1ppQTlJSFJvYVhNN1hHNGdJQ0FnSUNBZ0lHOXVRMnhwWTJzb2RHaHBjeTVpZEc0c0lDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE5sYkdZdWIyNURiR2xqYXlncE8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzRnSUNBZ2MyaHZkeWdwSUh0Y2JpQWdJQ0FnSUNBZ2NtVnRReWgwYUdsekxuSnZiM1FzSUZ3aWFHbGtaVndpS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdhR2xrWlNncElIdGNiaUFnSUNBZ0lDQWdZV1JrUXloMGFHbHpMbkp2YjNRc0lGd2lhR2xrWlZ3aUtUdGNiaUFnSUNCOVhHNTlYRzVqYkdGemN5QlJVMlYwVEdsemRGVkpJSHRjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV2YmxObGJHVmpkQ0E5SUNocGRHVnRLU0E5UGlCN0lIMDdYRzRnSUNBZ0lDQWdJSFJvYVhNdWNtOXZkQ0E5SUdkbEtGd2ljV3hwYzNSY0lpazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWRXd2dQU0JuWlNoY0luRnNhWE4wWDNWc1hDSXBPMXh1SUNBZ0lIMWNiaUFnSUNCemFHOTNLSEZNYVhOMEtTQjdYRzRnSUNBZ0lDQWdJSEpsYlVNb2RHaHBjeTV5YjI5MExDQmNJbWhwWkdWY0lpazdYRzRnSUNBZ0lDQWdJR052Ym5OMElIVnNJRDBnZEdocGN5NTFiRHRjYmlBZ0lDQWdJQ0FnY21WdFFXeHNLSFZzS1R0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWc1ppQTlJSFJvYVhNN1hHNGdJQ0FnSUNBZ0lIRk1hWE4wTG1admNrVmhZMmdvWHlBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JzYVNBOUlHTk1TU2hmTG5Ob1pXVjBWR2wwYkdVc0lGdGRMQ0IxYm1SbFptbHVaV1FzSUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bUxtOXVVMlZzWldOMEtGOHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCMWJDNWhjSEJsYm1SRGFHbHNaQ2hzYVNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lIMWNiaUFnSUNCb2FXUmxLQ2tnZTF4dUlDQWdJQ0FnSUNCaFpHUkRLSFJvYVhNdWNtOXZkQ3dnWENKb2FXUmxYQ0lwTzF4dUlDQWdJSDFjYm4xY2JtTnNZWE56SUZGQmJtUkJWVWtnZTF4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1sMFpXMXpJRDBnVzEwN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YjI1T1pYaDBJRDBnS0hKbGMzVnNkSE1wSUQwK0lIc2dmVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXliMjkwSUQwZ1oyVW9YQ0p4WVc1a1lWd2lLVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXBkR1Z0VW05dmRDQTlJR2RsS0Z3aWNXRnVaR0ZmYVhSbGJYSnZiM1JjSWlrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11Ym1WNGRFSjBiaUE5SUdkbEtGd2ljWFZoYm1SaFgyNWxlSFJjSWlrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11Ykc5bklEMGdaMlVvWENKeGRXRnVaR0ZmYkc5blhDSXBPMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnpaV3htSUQwZ2RHaHBjenRjYmlBZ0lDQWdJQ0FnYjI1RGJHbGpheWgwYUdsekxtNWxlSFJDZEc0c0lDZ3BJRDArSUhObGJHWXVZMkZzYkU5dVRtVjRkQ2dwS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjMmh2ZHloeFFXNWtRWE1zSUd4dlp5a2dlMXh1SUNBZ0lDQWdJQ0J5WlcxREtIUm9hWE11Y205dmRDd2dYQ0pvYVdSbFhDSXBPMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBkR1Z0VW05dmRDQTlJSFJvYVhNdWFYUmxiVkp2YjNRN1hHNGdJQ0FnSUNBZ0lISmxiVUZzYkNocGRHVnRVbTl2ZENrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YVhSbGJYTWdQU0JiWFR0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWc1ppQTlJSFJvYVhNN1hHNGdJQ0FnSUNBZ0lIRkJibVJCY3k1bWIzSkZZV05vS0Y4Z1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWkdsMklEMGdZMlVvWENKa2FYWmNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCeElEMGdZMlVvWENKa2FYWmNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCaElEMGdZMlVvWENKa2FYWmNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnhMbWx1Ym1WeVZHVjRkQ0E5SUY4dWNUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdFdWFXNXVaWEpVWlhoMElEMGdYeTVoTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiMjVEYkdsamF5aHhMQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZ0UXloa2FYWXNJRndpZEhKaGJuTXRZVndpS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpXMURLR1JwZGl3Z1hDSjNjbTl1WjF3aUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhaR1JES0dScGRpd2dYQ0pqYjNKeVpXTjBYQ0lwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZia05zYVdOcktHRXNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaVzFES0dScGRpd2dYQ0owY21GdWN5MWhYQ0lwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGJVTW9aR2wyTENCY0ltTnZjbkpsWTNSY0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV1JrUXloa2FYWXNJRndpZDNKdmJtZGNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRmtaRU1vWkdsMkxDQmNJblJ5WVc1ekxXRmNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhaR1JES0hFc0lGd2ljV0Z1WkdGZmFYUmxiVjl4WENJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWVdSa1F5aGhMQ0JjSW5GaGJtUmhYMmwwWlcxZllWd2lLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBkaTVoY0hCbGJtUkRhR2xzWkNoeEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGRpNWhjSEJsYm1SRGFHbHNaQ2hoS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0ZrWkVNb1pHbDJMQ0JjSW5GaGJtUmhYMmwwWlcxY0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNCcGRHVnRVbTl2ZEM1aGNIQmxibVJEYUdsc1pDaGthWFlwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjMlZzWmk1cGRHVnRjeTV3ZFhOb0tHUnBkaWs3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG5Ob2IzZE1iMmNvYkc5bktUdGNiaUFnSUNCOVhHNGdJQ0FnYUdsa1pTZ3BJSHRjYmlBZ0lDQWdJQ0FnWVdSa1F5aDBhR2x6TG5KdmIzUXNJRndpYUdsa1pWd2lLVHRjYmlBZ0lDQjlYRzRnSUNBZ1kyRnNiRTl1VG1WNGRDZ3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjbVZ6ZFd4MGN5QTlJRnRkTzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J1YjNSQmJuTjNaWEpsWkhNZ1BTQmJYVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXBkR1Z0Y3k1bWIzSkZZV05vS0NoZkxDQnBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1h5NWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9YQ0pqYjNKeVpXTjBYQ0lwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGMzVnNkSE11Y0hWemFDaDBjblZsS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLRjh1WTJ4aGMzTk1hWE4wTG1OdmJuUmhhVzV6S0Z3aWQzSnZibWRjSWlrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwY3k1d2RYTm9LR1poYkhObEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnViM1JCYm5OM1pYSmxaSE11Y0hWemFDaHBJQ3NnTVNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0JwWmlBb2JtOTBRVzV6ZDJWeVpXUnpMbXhsYm1kMGFDQStJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMyaHZkMHh2WnloY0lsbHZkU0JvWVhabGJpZDBJR0Z1YzNkbGNtVmtJSFJ2SUZFdVhDSWdLeUJ1YjNSQmJuTjNaWEpsWkhNdWFtOXBiaWhjSWl3Z1hDSXBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjBhR2x6TG05dVRtVjRkQ2h5WlhOMWJIUnpLVHRjYmlBZ0lDQjlYRzRnSUNBZ2MyaHZkMHh2Wnloc2IyY3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXNiMmN1YVc1dVpYSlVaWGgwSUQwZ2JHOW5PMXh1SUNBZ0lIMWNibjFjYm1Oc1lYTnpJRk5vWldWMFVISnZjQ0I3WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvWm1sc1pVbEVMQ0JwZEdWdEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVptbHNaVWxFSUQwZ1ptbHNaVWxFTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbWwwWlcwZ1BTQnBkR1Z0TzF4dUlDQWdJSDFjYmlBZ0lDQjBiMUZKZEdWdEtDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVwZEdWdExuTm9aV1YwVkhsd1pTQWhQU0JjSWtkU1NVUmNJaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMWJtUmxabWx1WldRN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYVd4bFNVUTZJSFJvYVhNdVptbHNaVWxFTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjMmhsWlhSSlJEb2dkR2hwY3k1cGRHVnRMbk5vWldWMFNXUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCemFHVmxkRlJwZEd4bE9pQjBhR2x6TG1sMFpXMHVkR2wwYkdWY2JpQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNCOVhHNTlYRzUyWVhJZ1JHRjBaVlYwYVd3N1hHNG9ablZ1WTNScGIyNGdLRVJoZEdWVmRHbHNLU0I3WEc0Z0lDQWdablZ1WTNScGIyNGdjR0Z5YzJVb2N5a2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjBiWEFnUFNCRVlYUmxMbkJoY25ObEtITXBPMXh1SUNBZ0lDQWdJQ0JwWmlBb2FYTk9ZVTRvZEcxd0tTbGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIxYm1SbFptbHVaV1E3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1JHRjBaU2gwYlhBcE8xeHVJQ0FnSUgxY2JpQWdJQ0JFWVhSbFZYUnBiQzV3WVhKelpTQTlJSEJoY25ObE8xeHVJQ0FnSUdaMWJtTjBhVzl1SUhOMGNpaGtLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDZ2haQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCY0lsd2lPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdaQzUwYjBsVFQxTjBjbWx1WnlncE8xeHVJQ0FnSUgxY2JpQWdJQ0JFWVhSbFZYUnBiQzV6ZEhJZ1BTQnpkSEk3WEc0Z0lDQWdablZ1WTNScGIyNGdkRzlrWVhrb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnZibXg1UkdGMFpTaHVaWGNnUkdGMFpTZ3BLVHRjYmlBZ0lDQjlYRzRnSUNBZ1JHRjBaVlYwYVd3dWRHOWtZWGtnUFNCMGIyUmhlVHRjYmlBZ0lDQm1kVzVqZEdsdmJpQnZibXg1UkdGMFpTaGtZWFJsS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dSR0YwWlNoblpYUkVZWFJsVG5WdEtHUmhkR1VwS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdSR0YwWlZWMGFXd3ViMjVzZVVSaGRHVWdQU0J2Ym14NVJHRjBaVHRjYmlBZ0lDQm1kVzVqZEdsdmJpQm5aWFJFWVhSbFRuVnRLR1JoZEdVcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1Wm14dmIzSW9aR0YwWlM1blpYUlVhVzFsS0NrZ0x5QTJNQ0F2SURZd0lDOGdNalFnTHlBeE1EQXdLU0FxSURZd0lDb2dOakFnS2lBeU5DQXFJREV3TURBN1hHNGdJQ0FnZlZ4dUlDQWdJRVJoZEdWVmRHbHNMbWRsZEVSaGRHVk9kVzBnUFNCblpYUkVZWFJsVG5WdE8xeHVmU2tvUkdGMFpWVjBhV3dnZkh3Z0tFUmhkR1ZWZEdsc0lEMGdlMzBwS1R0Y2JtWjFibU4wYVc5dUlHTmxiR3h6TWxGQmJtUkJLSEZKZEdWdExDQnliM2NzSUdObGJHeHpMQ0IzWVhKdUtTQjdYRzRnSUNBZ2JHVjBJSEVnUFNCalpXeHNjMXN3WFN3Z1lTQTlJR05sYkd4eld6RmRMQ0JzYjJjZ1BTQmpaV3hzYzFzeVhUdGNiaUFnSUNCc1pYUWdjM1JoZEdVZ1BTQmpaV3hzYzFzelhUdGNiaUFnSUNCc1pYUWdjSEpsZGtSaGRHVWdQU0JFWVhSbFZYUnBiQzV3WVhKelpTaGpaV3hzYzFzMFhTazdYRzRnSUNBZ2JHVjBJR2x1ZEdWeWRtRnNJRDBnY0dGeWMyVkpiblFvWTJWc2JITmJOVjBwTzF4dUlDQWdJR3hsZENCdVpYaDBSR0YwWlNBOUlFUmhkR1ZWZEdsc0xuQmhjbk5sS0dObGJHeHpXelpkS1R0Y2JpQWdJQ0JzWlhRZ1ptRnBiRU52ZFc1MElEMGdjR0Z5YzJWSmJuUW9ZMlZzYkhOYk4xMHBPMXh1SUNBZ0lHTnZibk4wSUdsdWFYUlBjbVJsY2lBOUlFMWhkR2d1Y21GdVpHOXRLQ2s3WEc0Z0lDQWdhV1lnS0hOMFlYUmxJRDA5SUZ3aVhDSXBYRzRnSUNBZ0lDQWdJSE4wWVhSbElEMGdYQ0oxYm5ObFpXNWNJanRjYmlBZ0lDQnBaaUFvYzNSaGRHVWdJVDBnWENKMWJuTmxaVzVjSWlBbUppQnpkR0YwWlNBaFBTQmNJbXhsWVhKdVhDSWdKaVlnYzNSaGRHVWdJVDBnWENKeVpXeGxZWEp1WENJcElIdGNiaUFnSUNBZ0lDQWdkMkZ5YmlnblhDSlRkR0YwWlZ3aUlITm9iM1ZzWkNCaVpTQnpaWFFnZEc4Z1hDSjFibk5sWlc1Y0lpd2dYQ0pzWldGeWJsd2lJRzl5SUZ3aWNtVnNaV0Z5Ymx3aUp5azdYRzRnSUNBZ0lDQWdJSE4wWVhSbElEMGdYQ0oxYm5ObFpXNWNJanRjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLSE4wWVhSbElEMDlJRndpYkdWaGNtNWNJaUI4ZkNCemRHRjBaU0E5UFNCY0luSmxiR1ZoY201Y0lpa2dlMXh1SUNBZ0lDQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRndjbVYyUkdGMFpTQjhmQ0FoYm1WNGRFUmhkR1VnZkh3Z2FYTk9ZVTRvYVc1MFpYSjJZV3dwSUh4OElHbHpUbUZPS0daaGFXeERiM1Z1ZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCY0lsd2lPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdhWFJsYlNBOUlIc2djU3dnWVN3Z2JHOW5MQ0J6ZEdGMFpTd2djSEpsZGtSaGRHVXNJR2x1ZEdWeWRtRnNMQ0J1WlhoMFJHRjBaU3dnWm1GcGJFTnZkVzUwTENCeFNYUmxiU3dnY205M0xDQnBibWwwVDNKa1pYSWdmVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGRHVnRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUdOaGRHTm9JQ2hmWVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZDJGeWJpZ25YQ0pUZEdGMFpWd2lJSE5vYjNWc1pDQmlaU0J6WlhRZ2RHOGdYQ0oxYm5ObFpXNWNJaUJpWldOaGRYTmxJSE52YldVZ1pHRjBZU0JoY21VZ2FXNWpiM0p5WldOMExpY3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzUmhkR1VnUFNCY0luVnVjMlZsYmx3aU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWm1GcGJFTnZkVzUwSUQwZ01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCeVpYWkVZWFJsSUQwZ2RXNWtaV1pwYm1Wa08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVc1MFpYSjJZV3dnUFNCT1lVNDdYRzRnSUNBZ0lDQWdJQ0FnSUNCdVpYaDBSR0YwWlNBOUlIVnVaR1ZtYVc1bFpEdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNCcFppQW9abUZwYkVOdmRXNTBJQ0U5SURBZ0ppWWdJV2x6VG1GT0tHWmhhV3hEYjNWdWRDa3BYRzRnSUNBZ0lDQWdJSGRoY200b0oxd2lSbUZwYkNCRGIzVnVkRndpSUhOb2IzVnNaQ0JpWlNCY0lsd2lJR0psWTJGMWMyVWdkR2hsSUdsMFpXMGdhWE1nWENKMWJuTmxaVzVjSWljcE8xeHVJQ0FnSUdsbUlDaHdjbVYyUkdGMFpTQWhQU0IxYm1SbFptbHVaV1FwWEc0Z0lDQWdJQ0FnSUhkaGNtNG9KMXdpVUhKbGRpQkVZWFJsWENJZ2MyaHZkV3hrSUdKbElGd2lYQ0lnWW1WallYVnpaU0IwYUdVZ2FYUmxiU0JwY3lCY0luVnVjMlZsYmx3aUp5azdYRzRnSUNBZ2FXWWdLQ0ZwYzA1aFRpaHBiblJsY25aaGJDa3BYRzRnSUNBZ0lDQWdJSGRoY200b0oxd2lTVzUwWlhKMllXeGNJaUJ6YUc5MWJHUWdZbVVnWENKY0lpQmlaV05oZFhObElIUm9aU0JwZEdWdElHbHpJRndpZFc1elpXVnVYQ0luS1R0Y2JpQWdJQ0JwWmlBb2JtVjRkRVJoZEdVZ0lUMGdkVzVrWldacGJtVmtLVnh1SUNBZ0lDQWdJQ0IzWVhKdUtDZGNJazVsZUhRZ1JHRjBaVndpSUhOb2IzVnNaQ0JpWlNCY0lsd2lJR0psWTJGMWMyVWdkR2hsSUdsMFpXMGdhWE1nWENKMWJuTmxaVzVjSWljcE8xeHVJQ0FnSUdaaGFXeERiM1Z1ZENBOUlEQTdYRzRnSUNBZ2NISmxka1JoZEdVZ1BTQjFibVJsWm1sdVpXUTdYRzRnSUNBZ2FXNTBaWEoyWVd3Z1BTQjFibVJsWm1sdVpXUTdYRzRnSUNBZ2JtVjRkRVJoZEdVZ1BTQjFibVJsWm1sdVpXUTdYRzRnSUNBZ1kyOXVjM1FnYVhSbGJTQTlJSHNnY1N3Z1lTd2diRzluTENCemRHRjBaVG9nWENKMWJuTmxaVzVjSWl3Z2NISmxka1JoZEdVc0lHbHVkR1Z5ZG1Gc0xDQnVaWGgwUkdGMFpTd2dabUZwYkVOdmRXNTBMQ0J4U1hSbGJTd2djbTkzTENCcGJtbDBUM0prWlhJZ2ZUdGNiaUFnSUNCeVpYUjFjbTRnYVhSbGJUdGNibjFjYm1aMWJtTjBhVzl1SUhGQmJtUkJNbFZ3WkdGMFpWSmxjU2h4UVc1a1FTa2dlMXh1SUNBZ0lHTnZibk4wSUY4Z1BTQnhRVzVrUVR0Y2JpQWdJQ0JqYjI1emRDQnliM2NnUFNCZkxuSnZkeXdnYzJobFpYUWdQU0JmTG5GSmRHVnRMbk5vWldWMFZHbDBiR1U3WEc0Z0lDQWdZMjl1YzNRZ2FXNTBaWEoyWVd4VVpYaDBJRDBnWHk1cGJuUmxjblpoYkNBL0lGOHVhVzUwWlhKMllXd3VkRzlUZEhKcGJtY29LU0E2SUZ3aU1Gd2lPMXh1SUNBZ0lHTnZibk4wSUhKaGJtZGxJRDBnYzJobFpYUWdLeUJjSWlGRFhDSWdLeUJ5YjNjZ0t5QmNJanBJWENJZ0t5QnliM2M3WEc0Z0lDQWdZMjl1YzNRZ2RtRnNkV1Z6SUQwZ1cxdGZMbXh2Wnl3Z1h5NXpkR0YwWlN3Z1JHRjBaVlYwYVd3dWMzUnlLRjh1Y0hKbGRrUmhkR1VwTENCZkxtbHVkR1Z5ZG1Gc0lIeDhJREFzSUVSaGRHVlZkR2xzTG5OMGNpaGZMbTVsZUhSRVlYUmxLU3dnWHk1bVlXbHNRMjkxYm5SZFhUdGNiaUFnSUNCeVpYUjFjbTRnZXlCeVlXNW5aU3dnZG1Gc2RXVnpJSDA3WEc1OVhHNTJZWElnUjFOb1pXVjBPMXh1S0daMWJtTjBhVzl1SUNoSFUyaGxaWFFwSUh0Y2JpQWdJQ0IyWVhJZ2FYTk1iMkZrWldRZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0JtZFc1amRHbHZiaUJzYjJGa0tDa2dlMXh1SUNBZ0lDQWdJQ0JuWVhCcExteHZZV1FvSjJOc2FXVnVkRHBoZFhSb01pY3NJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdselRHOWhaR1ZrSUQwZ2RISjFaVHRjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnZlZ4dUlDQWdJRWRUYUdWbGRDNXNiMkZrSUQwZ2JHOWhaRHRjYmlBZ0lDQm1kVzVqZEdsdmJpQnBibWwwS0dOc2FXVnVkRWxFTENCdmJrUnZibVVnUFNBb0tTQTlQaUI3SUgwc0lHOXVSWEp5SUQwZ0tHVXBJRDArSUhzZ2ZTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb0lXbHpURzloWkdWa0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQm5ZWEJwTG1Oc2FXVnVkQzVwYm1sMEtIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOc2FXVnVkRWxrT2lCamJHbGxiblJKUkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSE5qYjNCbE9pQW5hSFIwY0hNNkx5OTNkM2N1WjI5dloyeGxZWEJwY3k1amIyMHZZWFYwYUM5emNISmxZV1J6YUdWbGRITW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpZMjkyWlhKNVJHOWpjem9nV3lkb2RIUndjem92TDNOb1pXVjBjeTVuYjI5bmJHVmhjR2x6TG1OdmJTOGtaR2x6WTI5MlpYSjVMM0psYzNRL2RtVnljMmx2YmoxMk5DZGRYRzRnSUNBZ0lDQWdJSDBwTG5Sb1pXNG9YeUE5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2YmtSdmJtVW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2huWVhCcExtRjFkR2d5TG1kbGRFRjFkR2hKYm5OMFlXNWpaU2dwTG1selUybG5ibVZrU1c0dVoyVjBLQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUjFOb1pXVjBMbTl1VTJsbmJrbHVLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm5ZWEJwTG1GMWRHZ3lMbWRsZEVGMWRHaEpibk4wWVc1alpTZ3BMbWx6VTJsbmJtVmtTVzR1YkdsemRHVnVLQ2hwYzFOcFoyNWxaRWx1S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dselUybG5ibVZrU1c0cFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRWRUYUdWbGRDNXZibE5wWjI1SmJpZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJWY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSMU5vWldWMExtOXVVMmxuYms5MWRDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDBwTG1OaGRHTm9LR1VnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjI1RmNuSW9aU2s3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ0lDQjlYRzRnSUNBZ1IxTm9aV1YwTG1sdWFYUWdQU0JwYm1sME8xeHVJQ0FnSUdaMWJtTjBhVzl1SUhCeWIyMXdkRk5wWjI1SmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnWjJGd2FTNWhkWFJvTWk1blpYUkJkWFJvU1c1emRHRnVZMlVvS1M1emFXZHVTVzRvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdSMU5vWldWMExuQnliMjF3ZEZOcFoyNUpiaUE5SUhCeWIyMXdkRk5wWjI1SmJqdGNiaUFnSUNCSFUyaGxaWFF1YjI1VGFXZHVTVzRnUFNBb0tTQTlQaUI3SUgwN1hHNGdJQ0FnUjFOb1pXVjBMbTl1VTJsbmJrOTFkQ0E5SUNncElEMCtJSHNnZlR0Y2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhSUlRHbHpkQ2htYVd4bFNVUXNJRzl1VTNWalkyVnpjeUE5SUNoeFRHbHpkQ2tnUFQ0Z2V5QjlMQ0J2YmtWeWNpQTlJQ2hsS1NBOVBpQjdJSDBwSUh0Y2JpQWdJQ0FnSUNBZ1oyRndhUzVqYkdsbGJuUXVjMmhsWlhSekxuTndjbVZoWkhOb1pXVjBjeTVuWlhRb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNCeVpXRmtjMmhsWlhSSlpEb2dabWxzWlVsRVhHNGdJQ0FnSUNBZ0lIMHBMblJvWlc0b2NtVnpJRDArSUc5dVUzVmpZMlZ6Y3loeVpYTXVjbVZ6ZFd4MExuTm9aV1YwY3k1dFlYQW9YeUE5UGlCdVpYY2dVMmhsWlhSUWNtOXdLR1pwYkdWSlJDd2dYeTV3Y205d1pYSjBhV1Z6S1M1MGIxRkpkR1Z0S0NrcExtWnBiSFJsY2loZklEMCtJRjhwS1N3Z2NtVnpJRDArSUc5dVJYSnlLSEpsY3k1eVpYTjFiSFF1WlhKeWIzSXBLVHRjYmlBZ0lDQjlYRzRnSUNBZ1IxTm9aV1YwTG1kbGRGRk1hWE4wSUQwZ1oyVjBVVXhwYzNRN1hHNGdJQ0FnWm5WdVkzUnBiMjRnWjJWMFVtRnVaMlZTWVhjb1ptbHNaVWxFTENCeVlXNW5aU3dnYjI1VGRXTmpaWE56SUQwZ0tITm9aV1YwY3lrZ1BUNGdleUI5TENCdmJrVnljaUE5SUNobEtTQTlQaUI3SUgwcElIdGNiaUFnSUNBZ0lDQWdaMkZ3YVM1amJHbGxiblF1YzJobFpYUnpMbk53Y21WaFpITm9aV1YwY3k1MllXeDFaWE11WjJWMEtIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOd2NtVmhaSE5vWldWMFNXUTZJR1pwYkdWSlJDeGNiaUFnSUNBZ0lDQWdJQ0FnSUhKaGJtZGxPaUJ5WVc1blpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxVbVZ1WkdWeVQzQjBhVzl1T2lCY0lrWlBVazFWVEVGY0lseHVJQ0FnSUNBZ0lDQjlLUzUwYUdWdUtISmxjeUE5UGlCdmJsTjFZMk5sYzNNb2NtVnpMbkpsYzNWc2RDNTJZV3gxWlhNcExDQnlaWE1nUFQ0Z2IyNUZjbklvY21WekxuSmxjM1ZzZEM1bGNuSnZjaWtwTzF4dUlDQWdJSDFjYmlBZ0lDQm1kVzVqZEdsdmJpQm5aWFJTWVc1blpTaG1hV3hsU1VRc0lISmhibWRsTENCdmJsTjFZMk5sYzNNZ1BTQW9jMmhsWlhSektTQTlQaUI3SUgwc0lHOXVSWEp5SUQwZ0tHVXBJRDArSUhzZ2ZTa2dlMXh1SUNBZ0lDQWdJQ0JuWVhCcExtTnNhV1Z1ZEM1emFHVmxkSE11YzNCeVpXRmtjMmhsWlhSekxuWmhiSFZsY3k1blpYUW9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzQnlaV0ZrYzJobFpYUkpaRG9nWm1sc1pVbEVMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtRnVaMlU2SUhKaGJtZGxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1ZTWlc1a1pYSlBjSFJwYjI0NklGd2lWVTVHVDFKTlFWUlVSVVJmVmtGTVZVVmNJbHh1SUNBZ0lDQWdJQ0I5S1M1MGFHVnVLSEpsY3lBOVBpQnZibE4xWTJObGMzTW9jbVZ6TG5KbGMzVnNkQzUyWVd4MVpYTXBMQ0J5WlhNZ1BUNGdiMjVGY25Jb2NtVnpMbkpsYzNWc2RDNWxjbkp2Y2lrcE8xeHVJQ0FnSUgxY2JpQWdJQ0JtZFc1amRHbHZiaUJzYjJGa1VVRnVaRUZNYVhOMEtIRkpkR1Z0TENCdmJsTjFZMk5sYzNNZ1BTQW9jVUZ1WkVFcElEMCtJSHNnZlN3Z2IyNUZjbklnUFNBb1pTa2dQVDRnZXlCOUtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHWnBiR1ZKWkNBOUlIRkpkR1Z0TG1acGJHVkpSRHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjMmhsWlhST1lXMWxJRDBnWENJblhDSWdLeUJ4U1hSbGJTNXphR1ZsZEZScGRHeGxJQ3NnWENJblhDSTdYRzRnSUNBZ0lDQWdJR052Ym5OMElGRkRiM1Z1ZEZKaGJtZGxJRDBnYzJobFpYUk9ZVzFsSUNzZ1hDSWhTakZjSWp0Y2JpQWdJQ0FnSUNBZ1oyVjBVbUZ1WjJVb1ptbHNaVWxrTENCUlEyOTFiblJTWVc1blpTd2dZMlZzYkhNZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnVVVOdmRXNTBJRDBnY0dGeWMyVkpiblFvWTJWc2JITmJNRjFiTUYwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbHpUbUZPS0ZGRGIzVnVkQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmJrVnljaWhjSWtsdWRtRnNhV1FnYzJobFpYUWdZWE1nWVNCa1lYUmhZbUZ6WlM0Z1ZHaGxJSFpoYkhWbElHOW1JRW94SUdObGJHd2djMmh2ZFd4a0lHSmxJSFJvWlNCdWRXMWlaWElnYjJZZ2NYVmxjM1JwYjI1ekxsd2lLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQlJRVzVrUVZKaGJtZGxJRDBnYzJobFpYUk9ZVzFsSUNzZ1hDSWhRVEk2U0Z3aUlDc2dLRkZEYjNWdWRDQXJJREVwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaMlYwVW1GdVoyVW9abWxzWlVsa0xDQlJRVzVrUVZKaGJtZGxMQ0JqWld4c2N5QTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZGhjbTVOYzJkeklEMGdXMTA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdhWFJsYlhNZ1BTQmpaV3hzY3k1dFlYQW9LR05sYkd4ekxDQnBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lBb2JHVjBJR2tnUFNCalpXeHNjeTVzWlc1bmRHZzdJR2tnUENBNE95QnBLeXNwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWld4c2N5NXdkWE5vS0Z3aVhDSXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkMkZ5YmlBOUlDaHpLU0E5UGlCM1lYSnVUWE5uY3k1d2RYTm9LR0J5YjNjZ0pIdHBJQ3NnTW4wNklDUjdjMzFnS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTmxiR3h6TWxGQmJtUkJLSEZKZEdWdExDQnBJQ3NnTWl3Z1kyVnNiSE1zSUhkaGNtNHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDNZWEp1VFhObmN5NXNaVzVuZEdnZ1BpQXdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmJrVnljaWgzWVhKdVRYTm5jeTVxYjJsdUtGd2lYRnh1WENJcEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXVVM1ZqWTJWemN5aHBkR1Z0Y3lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5TENCbElEMCtJRzl1UlhKeUtHVXBLVHRjYmlBZ0lDQWdJQ0FnZlN3Z1pTQTlQaUJ2YmtWeWNpaGxLU2s3WEc0Z0lDQWdmVnh1SUNBZ0lFZFRhR1ZsZEM1c2IyRmtVVUZ1WkVGTWFYTjBJRDBnYkc5aFpGRkJibVJCVEdsemREdGNiaUFnSUNCbWRXNWpkR2x2YmlCellYWmxVVUZ1WkVGektIRkJibVJCTENCdmJsTjFZMk5sYzNNZ1BTQW9LU0E5UGlCN0lIMHNJRzl1UlhKeUlEMGdLR1VwSUQwK0lIc2dmU2tnZTF4dUlDQWdJQ0FnSUNCc1pYUWdiV0Z3SUQwZ2JtVjNJRTFoY0NncE8xeHVJQ0FnSUNBZ0lDQnhRVzVrUVM1bWIzSkZZV05vS0Y4Z1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWm1sc1pVbGtJRDBnWHk1eFNYUmxiUzVtYVd4bFNVUTdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iV0Z3TG1oaGN5aG1hV3hsU1dRcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjQzVuWlhRb1ptbHNaVWxrS1M1d2RYTm9LRjhwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaV3h6WlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNDNXpaWFFvWm1sc1pVbGtMQ0JiWDEwcE8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnYldGd0xtWnZja1ZoWTJnb0tHbDBaVzF6TENCbWFXeGxTV1FwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOaGRtVlJRVzVrUVZOcGJtZHNaVVpwYkdVb1ptbHNaVWxrTENCcGRHVnRjeXdnYjI1VGRXTmpaWE56TENCdmJrVnljaWs3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUgxY2JpQWdJQ0JIVTJobFpYUXVjMkYyWlZGQmJtUkJjeUE5SUhOaGRtVlJRVzVrUVhNN1hHNGdJQ0FnWm5WdVkzUnBiMjRnYzJGMlpWRkJibVJCVTJsdVoyeGxSbWxzWlNobWFXeGxTV1FzSUhGQmJtUkJMQ0J2YmxOMVkyTmxjM01nUFNBb0tTQTlQaUI3SUgwc0lHOXVSWEp5SUQwZ0tHVXBJRDArSUhzZ2ZTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2NVRnVaRUV1YzI5dFpTaGZJRDArSUY4dWNVbDBaVzB1Wm1sc1pVbEVJQ0U5SUdacGJHVkpaQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCY0lrSlZSMXdpTzF4dUlDQWdJQ0FnSUNCc1pYUWdjR0Z5WVcxeklEMGdleUJ6Y0hKbFlXUnphR1ZsZEVsa09pQm1hV3hsU1dRZ2ZUdGNiaUFnSUNBZ0lDQWdkbUZ5SUdKdlpIa2dQU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlVsdWNIVjBUM0IwYVc5dU9pQmNJbEpCVjF3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2djVUZ1WkVFdWJXRndLRjhnUFQ0Z2NVRnVaRUV5VlhCa1lYUmxVbVZ4S0Y4cEtWeHVJQ0FnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdJQ0JuWVhCcExtTnNhV1Z1ZEM1emFHVmxkSE11YzNCeVpXRmtjMmhsWlhSekxuWmhiSFZsY3k1aVlYUmphRlZ3WkdGMFpTaHdZWEpoYlhNc0lHSnZaSGtwWEc0Z0lDQWdJQ0FnSUNBZ0lDQXVkR2hsYmloZklEMCtJRzl1VTNWalkyVnpjeWdwTENCbElEMCtJRzl1UlhKeUtHVXBLVHRjYmlBZ0lDQjlYRzU5S1NoSFUyaGxaWFFnZkh3Z0tFZFRhR1ZsZENBOUlIdDlLU2s3WEc1amIyNXpkQ0JSVUdWeVUyTnlaV1Z1SUQwZ01UQTdYRzVqYkdGemN5QlRkSEpoZEdWbmVTQjdYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9jVUZ1WkVGektTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIWlJRVzVrUVhNZ1BTQjFibVJsWm1sdVpXUTdYRzRnSUNBZ0lDQWdJSFJvYVhNdWNVRnVaRUZ6SUQwZ2NVRnVaRUZ6TzF4dUlDQWdJQ0FnSUNCMGFHbHpMbk52Y25Rb0tUdGNiaUFnSUNCOVhHNGdJQ0FnYm1WNGRDaHlaWE4xYkhSektTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoeVpYTjFiSFJ6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1VvY21WemRXeDBjeWs3WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hjbVZ6ZFd4MGN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5CMlVVRnVaRUZ6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRndpUWxWSFhDSTdYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyOXlkQ2dwTzF4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1eFFXNWtRWE11YkdWdVozUm9JRDA5SURBcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdleUJ4UVc1a1FYTTZJRnRkTENCdFpYTnpZV2RsT2lCY0lrNXZJR2wwWlcwZ1ptOTFibVF1WENJZ2ZUdGNiaUFnSUNBZ0lDQWdiR1YwSUcxbGMzTmhaMlVnUFNCY0lsd2lPMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBjMDkyWlhKTVpXRnlibWx1WnlBOUlDaHBkR1Z0S1NBOVBpQnBkR1Z0TG5OMFlYUmxJQ0U5SUZ3aWRXNXpaV1Z1WENJZ0ppWmNiaUFnSUNBZ0lDQWdJQ0FnSUVSaGRHVlZkR2xzTG1kbGRFUmhkR1ZPZFcwb2FYUmxiUzV1WlhoMFJHRjBaU2tnUGlCRVlYUmxWWFJwYkM1blpYUkVZWFJsVG5WdEtHNWxkeUJFWVhSbEtDa3BPMXh1SUNBZ0lDQWdJQ0JwWmlBb2FYTlBkbVZ5VEdWaGNtNXBibWNvZEdocGN5NXhRVzVrUVhOYk1GMHBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCeFFXNWtRWE1nUFNCMGFHbHpMbkZCYm1SQmN5NXpiR2xqWlNnd0xDQlJVR1Z5VTJOeVpXVnVLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUcxbGMzTmhaMlVnUFNCY0lsdHZkbVZ5SUd4bFlYSnVhVzVuWFZ3aU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY1VGdVpFRnpMbk52Y25Rb0tHRXNJR0lwSUQwK0lHRXVhVzVwZEU5eVpHVnlJQzBnWWk1cGJtbDBUM0prWlhJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXdkbEZCYm1SQmN5QTlJSEZCYm1SQmN6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUI3SUhGQmJtUkJjeXdnYldWemMyRm5aU0I5TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2NVRnVaRUZ6SUQwZ2RHaHBjeTV4UVc1a1FYTXVjMnhwWTJVb01Dd2dVVkJsY2xOamNtVmxiaWt1Wm1sc2RHVnlLRjhnUFQ0Z0lXbHpUM1psY2t4bFlYSnVhVzVuS0Y4cEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRzFsYzNOaFoyVWdQU0JjSWx0c1pXRnlibWx1WjExY0lqdGNiaUFnSUNBZ0lDQWdJQ0FnSUhGQmJtUkJjeTV6YjNKMEtDaGhMQ0JpS1NBOVBpQmhMbWx1YVhSUGNtUmxjaUF0SUdJdWFXNXBkRTl5WkdWeUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjSFpSUVc1a1FYTWdQU0J4UVc1a1FYTTdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXlCeFFXNWtRWE1zSUcxbGMzTmhaMlVnZlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0IxY0dSaGRHVW9jbVZ6ZFd4MGN5a2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11Y0haUlFXNWtRWE1wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCY0lrSlZSMXdpTzF4dUlDQWdJQ0FnSUNCcFppQW9jbVZ6ZFd4MGN5NXNaVzVuZEdnZ0lUMGdkR2hwY3k1d2RsRkJibVJCY3k1c1pXNW5kR2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCY0lrSlZSMXdpTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbkIyVVVGdVpFRnpMbVp2Y2tWaFkyZ29LSEZCYm1SQkxDQnBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnlaWE4xYkhRZ1BTQnlaWE4xYkhSelcybGRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYm05M0lEMGdibVYzSUVSaGRHVW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5WlhOMWJIUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J4UVc1a1FTNW1ZV2xzUTI5MWJuUWdQU0F3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRzl1WlVSaGVTQTlJREVnS2lBeE1EQXdJQ29nTmpBZ0tpQTJNQ0FxSURJME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h4UVc1a1FTNXdjbVYyUkdGMFpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0IwYlhCSmJuUmxjblpoYkNBOUlDaHViM2N1WjJWMFZHbHRaU2dwSUMwZ2NVRnVaRUV1Y0hKbGRrUmhkR1V1WjJWMFZHbHRaU2dwS1NBcUlESXVNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NVRnVaRUV1YVc1MFpYSjJZV3dnUFNCTllYUm9MbTFoZUNoeFFXNWtRUzVwYm5SbGNuWmhiQ3dnZEcxd1NXNTBaWEoyWVd3c0lHOXVaVVJoZVNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnhRVzVrUVM1cGJuUmxjblpoYkNBOUlHOXVaVVJoZVR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NVRnVaRUV1YzNSaGRHVWdQU0JjSW14bFlYSnVYQ0k3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J4UVc1a1FTNW1ZV2xzUTI5MWJuUXJLenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J4UVc1a1FTNXBiblJsY25aaGJDQTlJREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY1VGdVpFRXVjM1JoZEdVZ1BTQnhRVzVrUVM1emRHRjBaU0E5UFNCY0luVnVjMlZsYmx3aUlEOGdYQ0pzWldGeWJsd2lJRG9nWENKeVpXeGxZWEp1WENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnhRVzVrUVM1cGJtbDBUM0prWlhJZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjVUZ1WkVFdWNISmxka1JoZEdVZ1BTQnViM2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnhRVzVrUVM1dVpYaDBSR0YwWlNBOUlHNWxkeUJFWVhSbEtHNXZkeTVuWlhSVWFXMWxLQ2tnS3lCeFFXNWtRUzVwYm5SbGNuWmhiQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnhRVzVrUVM1c2IyY2dLejBnUkdGMFpWVjBhV3d1YzNSeUtHNXZkeWtnS3lBb2NtVnpkV3gwSUQ4Z1hDTGluSk5jSWlBNklGd2k0cHlYWENJcElDc2dYQ0lnWENJN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0JIVTJobFpYUXVjMkYyWlZGQmJtUkJjeWgwYUdsekxuQjJVVUZ1WkVGekxDQW9LU0E5UGlCamIyNXpiMnhsTG14dlp5aGNJbE5oZG1VZ2MzVmpZMlZ6YzJWa1hDSXBMQ0JsSUQwK0lHTnZibk52YkdVdWJHOW5LRndpVTJGMlpTQm1ZV2xzWldSY0lpd2daU2twTzF4dUlDQWdJSDFjYmlBZ0lDQnpiM0owS0NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG5GQmJtUkJjeTV6YjNKMEtDaGhMQ0JpS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JoVTNSaGRHVWdQU0JoTG5OMFlYUmxJRDA5SUZ3aWRXNXpaV1Z1WENJZ1B5QXdJRG9nWVM1emRHRjBaU0E5UFNCY0luSmxiR1ZoY201Y0lpQS9JREVnT2lBeU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdZbE4wWVhSbElEMGdZaTV6ZEdGMFpTQTlQU0JjSW5WdWMyVmxibHdpSUQ4Z01DQTZJR0l1YzNSaGRHVWdQVDBnWENKeVpXeGxZWEp1WENJZ1B5QXhJRG9nTWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaFUzUmhkR1VnSVQwZ1lsTjBZWFJsS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoVTNSaGRHVWdMU0JpVTNSaGRHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZUzV6ZEdGMFpTQTlQU0JjSW5WdWMyVmxibHdpSUh4OElHSXVjM1JoZEdVZ1BUMGdYQ0oxYm5ObFpXNWNJaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZUzVwYm1sMFQzSmtaWElnTFNCaUxtbHVhWFJQY21SbGNqdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFJ0Y0NBOUlFUmhkR1ZWZEdsc0xtZGxkRVJoZEdWT2RXMG9ZUzV1WlhoMFJHRjBaU2tnTFNCRVlYUmxWWFJwYkM1blpYUkVZWFJsVG5WdEtHSXVibVY0ZEVSaGRHVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJ0Y0NBaFBTQXdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBiWEE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiSE5sWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1YVc1cGRFOXlaR1Z5SUMwZ1lpNXBibWwwVDNKa1pYSTdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYm4xY2JtOXVURzloWkNnb0tTQTlQaUI3WEc0Z0lDQWdZMjl1YzNRZ1kyeHBYMmxrVTNRZ1BTQnVaWGNnVTNSeWFXNW5UR2x6ZEZOMGIzSmhaMlVvWENKamJHbGxiblJwWkZ3aUtUdGNiaUFnSUNCamIyNXpkQ0J6YVdkdWFXNVZTU0E5SUc1bGR5QlRhV2R1YVc1VlNTZ3BPMXh1SUNBZ0lHTnZibk4wSUdacGJHVkpSRk4wSUQwZ2JtVjNJRk4wY21sdVoweHBjM1JUZEc5eVlXZGxLRndpWm1sc1pXbGtYQ0lwTzF4dUlDQWdJR052Ym5OMElHTnNhVjlwWkZWSklEMGdibVYzSUZObGJHVmpkRTl5U1c1d2RYUlZTU2hjSW1Oc2FXVnVkR2xrWENJc0lHTnNhVjlwWkZOMEtUdGNiaUFnSUNCamIyNXpkQ0JtYVd4bFNVUlZTU0E5SUc1bGR5QlRaV3hsWTNSUGNrbHVjSFYwVlVrb1hDSm1hV3hsYVdSY0lpd2dabWxzWlVsRVUzUXBPMXh1SUNBZ0lHTnZibk4wSUhGc2FYTjBYMVZKSUQwZ2JtVjNJRkZUWlhSTWFYTjBWVWtvS1R0Y2JpQWdJQ0JqYjI1emRDQnhZVzVrWVY5VlNTQTlJRzVsZHlCUlFXNWtRVlZKS0NrN1hHNGdJQ0FnYjI1RGJHbGpheWhuWlNoY0ltTnNaV0Z5WDJGc2JGd2lLU3dnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb0lXTnZibVpwY20wb1hDSkVieUI1YjNVZ2NtVmhiR3g1SUhkaGJuUWdkRzhnWTJ4bFlYSWdZV3hzSUhKbFoybHpkR1Z5WldRZ1EyeHBaVzUwU1VSeklDWWdSbWxzWlVsRWN6OWNJaWtwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lHTnNhVjlwWkZOMExtTnNaV0Z5S0NrN1hHNGdJQ0FnSUNBZ0lHWnBiR1ZKUkZOMExtTnNaV0Z5S0NrN1hHNGdJQ0FnSUNBZ0lHRnNaWEowS0Z3aVEyeGxZWEpsWkM1Y0lpazdYRzRnSUNBZ0lDQWdJSGRwYm1SdmR5NXNiMk5oZEdsdmJpNXlaV3h2WVdRb0tUdGNiaUFnSUNCOUtUdGNiaUFnSUNCamJHbGZhV1JWU1M1dmJrVnVkR1Z5SUQwZ2RHVjRkQ0E5UGlCN1hHNGdJQ0FnSUNBZ0lHTnNhVjlwWkZWSkxtaHBaR1VvS1R0Y2JpQWdJQ0FnSUNBZ1IxTm9aV1YwTG1sdWFYUW9kR1Y0ZEN3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMnhwWDJsa1UzUXVZV1JrU1daT2IzUkZlR2x6ZENoMFpYaDBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITnBaMjVwYmxWSkxuTm9iM2NvS1R0Y2JpQWdJQ0FnSUNBZ2ZTd2daU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoYkdWeWRDaEtVMDlPTG5OMGNtbHVaMmxtZVNobEtTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCc2IyTmhkR2x2Ymk1eVpXeHZZV1FvS1R0Y2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZUdGNiaUFnSUNCemFXZHVhVzVWU1M1dmJrTnNhV05ySUQwZ0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNCSFUyaGxaWFF1Y0hKdmJYQjBVMmxuYmtsdUtDazdYRzRnSUNBZ2ZUdGNiaUFnSUNCSFUyaGxaWFF1YjI1VGFXZHVTVzRnUFNBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUhOcFoyNXBibFZKTG1ocFpHVW9LVHRjYmlBZ0lDQWdJQ0FnWm1sc1pVbEVWVWt1YzJodmR5Z3BPMXh1SUNBZ0lIMDdYRzRnSUNBZ1IxTm9aV1YwTG05dVUybG5iazkxZENBOUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ1lXeGxjblFvWENKVGFXZHVaV1FnYjNWMExsd2lLVHRjYmlBZ0lDQjlPMXh1SUNBZ0lHeGxkQ0J3ZGxGTWFYTjBJRDBnZFc1a1pXWnBibVZrTzF4dUlDQWdJR1pwYkdWSlJGVkpMbTl1Ulc1MFpYSWdQU0IwWlhoMElEMCtJSHRjYmlBZ0lDQWdJQ0FnWm1sc1pVbEVWVWt1YUdsa1pTZ3BPMXh1SUNBZ0lDQWdJQ0JIVTJobFpYUXVaMlYwVVV4cGMzUW9kR1Y0ZEN3Z2NVeHBjM1FnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm1sc1pVbEVVM1F1WVdSa1NXWk9iM1JGZUdsemRDaDBaWGgwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEZzYVhOMFgxVkpMbk5vYjNjb2NVeHBjM1FwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjSFpSVEdsemRDQTlJSEZNYVhOME8xeHVJQ0FnSUNBZ0lDQjlMQ0JsSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdGc1pYSjBLRXBUVDA0dWMzUnlhVzVuYVdaNUtHVXBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnBiR1ZKUkZWSkxuTm9iM2NvS1R0Y2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZUdGNiaUFnSUNCc1pYUWdjM1J5WVhSbFoza2dQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdjV3hwYzNSZlZVa3ViMjVUWld4bFkzUWdQU0JwZEdWdElEMCtJSHRjYmlBZ0lDQWdJQ0FnY1d4cGMzUmZWVWt1YUdsa1pTZ3BPMXh1SUNBZ0lDQWdJQ0JIVTJobFpYUXViRzloWkZGQmJtUkJUR2x6ZENocGRHVnRMQ0J4UVc1a1FTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkSEpoZEdWbmVTQTlJRzVsZHlCVGRISmhkR1ZuZVNoeFFXNWtRU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdmJrNWxlSFFnUFNBb2NtVnpkV3gwY3lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaGMzUnlZWFJsWjNrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdoeWIzY2dYQ0pDVlVkY0lqdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2V5QnhRVzVrUVhNc0lHMWxjM05oWjJVZ2ZTQTlJSE4wY21GMFpXZDVMbTVsZUhRb2NtVnpkV3gwY3lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NXRnVaR0ZmVlVrdWMyaHZkeWh4UVc1a1FYTXNJRzFsYzNOaFoyVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhGaGJtUmhYMVZKTG05dVRtVjRkQ0E5SUc5dVRtVjRkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOXVUbVY0ZENncE8xeHVJQ0FnSUNBZ0lDQjlMQ0JsSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ1pTQTlQU0JjSW5OMGNtbHVaMXdpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGc1pYSjBLR1VwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaV3h6WlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGc1pYSjBLRXBUVDA0dWMzUnlhVzVuYVdaNUtHVXBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3ZGxGTWFYTjBLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEZzYVhOMFgxVkpMbk5vYjNjb2NIWlJUR2x6ZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkhObFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnWENKQ1ZVZGNJanRjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnZlR0Y2JpQWdJQ0JqYkdsZmFXUlZTUzV6YUc5M0tDazdYRzRnSUNBZ1IxTm9aV1YwTG14dllXUW9LVHRjYmlBZ0lDQjNhVzVrYjNkYlhDSm5VMmhsWlhSY0lsMGdQU0JIVTJobFpYUTdYRzU5S1R0Y2JpOHZJeUJ6YjNWeVkyVk5ZWEJ3YVc1blZWSk1QV1JoZEdFNllYQndiR2xqWVhScGIyNHZhbk52Ymp0aVlYTmxOalFzWlhsS01scFlTbnBoVnpsMVNXcHZla3hEU20xaFYzaHNTV3B2YVdGWE5XdGFXR2QxWVc1TmFVeERTbnBpTTFaNVdUSldVMkl5T1RCSmFtOXBTV2wzYVdNeU9URmpiVTVzWTNsSk5sZDVTWFZNYVRoMVRHazVlbU50VFhaa1NFMTJZVmMxYTFwWVozVmtTRTFwV0ZOM2FXSnRSblJhV0UxcFQyeDBaRXhEU25SWldFSjNZVmMxYm1ONVNUWkphMFpDVVRCRmMxVXdSa0pWZVhoR1VWVkdSa3hGVGtKUlZVMXpVbFZHUWxaVWRFcFJWVTU1VVdsNFVGRlZSbEJNUmtaQ1VWWkZjMUV3UmtKUmVYaHFVVlZHYWt4RlRrSlJWVTF6VWxWR1FsSlRlRVJSVlVaR1RFVk9RbEZWVFRkUlZVWkVZMnROYzFFd1JrSlJlblJDVVZWT1JVeEdUa0pSVmsxelVsVkdRbEpUZUVSUlZVWXpVWGw0VUZGVlJsWlBNR3hDVVhwV1JVeEZPVUpSVlRoelZWVkdRbFZUZUVSUlZVWkVURWRHUWxGWFJYTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVuUkNVVlZPTkZGNWVFUlJWVVpFVHpCR1FsRXdVWE5WTUVaQ1ZYbDRTRkZWUmtoTVJVNUNVVlZOYzFVd1JrSmhWVWx6VWxWR1FsSlRlRkJSVlVad1VXbDRSbEZWUmtaTVJWWkNVVlpqYzFKVlJrSlNVM2hVVVZWR2VGRnFkRXBSVlU1M1VtbDRUbEZWUms1TVJWWkNVVlZWYzFJd1JrSlNlWGhHVVZWR1JreEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRUZFRWVVpFWTBWSmMxSlZSa0pTVTNoRVVWVkdSRXhHVGtKUlZrMXpVakJHUWxKNWVGUlJWVVpVVEVWT1FsRlZUVGRUVlVaRVpXdEpjMVF3UmtKVWVYaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoR1VWVkdSa3hGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBTbEZWVG5OUmVYaEtVVlZHU2t4RlZrSlJWVlUzVlZWR1FsSlRlRVpSVlVaR1RFVk9RbEZWVFhOU1ZVWkNVbE40U0ZGVlJraE1SVlpDVVZWVmMxRXdSa0pSZW5SS1VWVk9kVkZwZUVwUlZVWktURVpPUWxGV1RUZFZWVVpDVWxONFVGRlZSbEJNUlU1Q1VWVk5jMUpWUmtKU1UzaEdVVlZHUmt4R1RrSlJWazF6VVRCR1FsRjVlRVJSVlVaRVR6QnNRbEV6VWtSTVJUbENVVlU0YzFKVlJrSlNVM2hFVVZWR1JFOHdSa0pSTVdkelVUQkdRbEY2ZEVKUlZVNUZURVpPUWxGV1RYTlRWVVpDVTFONFJGRlZSa1JNUldSQ1VWZGtRMHhGVmtKUlZWVnpVakJHUWxaNmRFcFJWVTE0VVhsNFNGRlZSa2hNUlU1Q1VWVk5jMVV3UmtKVmVYaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFhOUk1FWkNVWHAwUWxGVlRYcFJhWGhFVVZWR1JFOHdSa0pSTUZGelZUQkdRbFY1ZUVwUlZVWktURVZPUWxGVlRYTlNNRVpDV2pCSmMxSlZSa0pTVTNoSVVWVkdXRTh3YkVKUmVrWkVURVZrUWxGVlkzTlJNRVpDVVhsNFZGRlZSbFJNUlU1Q1VWVk5jMUl3UmtKU2VYaEVVVlZHUkV4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVR6QkdRbEV6YUVOTVJVNUNVVlZOTjFGVlJrUlNRM2hVVVZWR1ZFeEZNVUpSVlRCelVUQkdRbEY1ZUVoUlZVWnVVV3AwU2xGVlRYWlJhWGhJVVZWR1NFeEZUa0pSVlUxelZUQkdRbFY1ZUVoUlZVWklURVZXUWxGVlZYTlJNRVpDVVhwMFFsRlZUbmRSYVhoRVVWVkdSRTh3UmtKUk1GRnpWVEJHUWxWNWVGQlJWVVpRVEVWT1FsRlZUWE5TTUVaQ1dqQkpjMUpWUmtKU1UzaEdVVlZHYUU4d2JFSlJlVGxFVEVWa1FsRlZZM05STUVaQ1VYbDRibEZyUmtKYU1FbHpVVEJHUWxGNWVGQlJWVVpRVEVWV1FsRlZWWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOTjFGVlJrUmlhMDF6VVRCR1FsRjZkRUpSVlU1RlRFWk9RbEZXVFhOVVZVWkNWRk40UkZGVlJrUk1SVlpDVVZkRk4xTlZSa1JPVlVselZGVkdRbFJUZUVSUlZVWkVURWRrUTFGVlJtNVJhWGhFVVZWR1JFeEZNVUpSVlRCelVsVkdRbEpUZUVaUlZVWkdURVZPUWxGVlRYTlJNRVpDVVhwMFFsRlZUbmxSZVhoRVVWVkdSRTh3UmtKU1ZWRnpWRlZHUWxSVGVIQlJhMFpDWVZWSk4xTlZSa1prUlVselYxVkdRbU5WU1hOU01FWkNWbnAwVWxGVlJsbE1Sa1pDVVZWamMxSXdSa0pUUTNoSVVWVkdTRXhGVGtKUlZrVTNWVlZHUkV3d1NYTlRWVVpDVTFONFJGRlZSa1JNUlhSQ1VWVnpjMUl3UmtKU2VYaEdVVlZHUmt4RlRrSlJWVTAzVTFWR1JHRnJTWE5STUVaQ1VYcDBTbEZWVGtWTVJXeENVVlZyYzFOVlJrSlRWSFJTVVZWT1VVeEZiRUpSVld0elVUQkdRbEY1ZUU1UlZVWk9URVZXUWxGVlZYTlJNRVpDVVhwMFVsRlZUbXRNUlRsQ1VWVTRjMU5WUmtKVFUzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRXhSVlVaTVRFVldRbEZWVlhOUk1FWkNVWHAwU2xGVlRYcFJhWGhFVVZWR1JFOHdiRUpSTUZGelUxVkdRbE5UZUVwUlZVWktURVZPUWxGVlRYTlRWVVpDV1hwMFVsRlZUakJSYVhoS1VWVkdTa3hGVGtKUlZVMXpVekJHUWxONWVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJWWkNVVlZWYzFFd1JrSlJlblJTVVZWTmVGRnBlRXBSVlVaS1RFVk9RbEZWVFhOWlZVWkNXVk40UmxGVlJrWk1SVTVDVVZWTk4xTlZSa1JrUlVselVUQkdRbEY2ZEVwUlZVNUZURVZzUWxGV2EzTldWVVpDVmxSMFVsRlZUbmxSYVhoUVVWVkdVRXhGYkVKUlZXdHpVVEJHUWxGNWVFaFJWVVpJVEVWa1FsRlZZM05pTUVwQ1VWYzVRMHhGVGtKUlZVMDNVMVZHUkdWRlRYTlJNRVpDVVhwMFNsRlZUa1ZNUldSQ1VWVmpjMUV3UmtKUmVYaElVVlZHV0U4eFJrSlJNbEZ6VkRCR1FsUjVlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVGxDVVZVNGMxRXdSa0pSZVhoSVVWVkdTRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWT1FsRlZUVGRUVlVaRVkwVk5jMUV3UmtKUmVuUktVVlZPUlV4RlpFSlJWV056VVRCR1FsRjVlRWhSVlVaWVR6RkdRbEV5VVhOVFZVWkNVMU40UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVEVWT1FsRlZUVGRWVlVaRVkydEpjMU5WUmtKVFUzaEVVVlZHUkV4SFJrSlJWMFZ6VWxWR1FsSlRlRVJSVlVaRVR6QnNRbEV6VWtOTVJVNUNVVlZOTjFOVlJrUlNRM2hvVVZWR2FFeEZUa0pSVlUxelVqQkdRbFo2ZEZKUlZVNDBVV2w0U2xGVlJrcE1SVTVDVVZWTmMxUlZSa0pVVTNoR1VWVkdSa3hGVGtKUlZVMDNWVlZHUkZwRGVFcFJWVVpLVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEZaRUpSVldOelVUQkdRbEY1ZUVoUlZVWklURVZPUWxGVlRUZFhWVVpFVDFWSmMxTlZSa0pUVTNoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VYcDBTbEZWVG05UmFYaEVVVlZHUkU4d2JFSlNWVkZ6VkZWR1FsUlRlRVJSVlVaRVRFVmtRbEZXWXpkVlZVWkVZV3RKYzFOVlJrSlRVM2hFVVZWR1JFeEZNVUpSVlRCelVsVkdRbEpUZUVSUlZVWkVUekZHUWxFeVVYTlVWVVpDVkZONFJGRlZSa1JNUldSQ1VWVmpjMU5WUmtKVFUzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRkJSVlVaUVRFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SVTVDVVZWTk4xVlZSa1JpUlUxelUxVkdRbE5UZUVSUlZVWkVURVZrUWxGVlkzTlJNRVpDVVhwMFdsRlZSa1pNUlRsQ1VWVTRjMU13UmtKVGVYaEVVVlZHUkU4eFJrSlJNMmhEVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFVsRlZUalJSYVhoS1VWVkdTa3hGVGtKUlZVMXpXVlZHUWxsVGVFWlJWVVpHVEVWT1FsRlZUVGRWVlVaRVkydEpjMVF3UmtKVWVYaEtVVlZHU2t4RlRrSlJWVTAzVTFWR1JGbHBlRVJSVlVaRVR6QnNRbEV3VVhOVE1FWkNVM3AwVWxGVlRrdE1SbXhDVVZacmMxRXdSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVaV1FsRldWWE5STUVaQ1VYbDRSRkZWUmtSUE1VWkNVVE53UkV4RmJFSlJWV3R6VVRCR1FsRjVlRTVSVlVaT1RFVldRbEZWVlhOUk1FWkNVWHAwU2xGVlRtMU1SVTVDVVZWTk4xTlZSa1JVZVhoT1VWVkdUazh4UmtKUk1rbHpWRlZHUWxSVGVFcFJWVVpLVEVWa1FsRlZZM05YVlVaQ1YxTjRSRkZWUmtSTVJUbENVVlU0YzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelZsVkdRbFpUZUVSUlZVWkVURVZPUWxGVlRUZFZWVVpFWW10UmMxTlZSa0pUVTNoRVVWVkdSRXhGYkVKUlZXdHpVbFZHUWxKVWRGcFJWVTVYVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJXUkNVVlZqYzFKVlJrSlNVM2hFVVZWR1JFOHhUa0pSTW1oRFR6SkdRbEZWTURkWFZVWkVWR2w0U2xGVlJrcFBNbVJEVVZWT1NVeEZNVUpSVlRCelUxVkdRbE5UZUVoUlZVWklURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RlRrSlJWVTAzV2pCS1FsRjZiRU5NUld4Q1VWVnJjMUV3UmtKUmVYaE1VVlZHVEV4RlRrSlJWVTF6VkRCR1FsUjVlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0U2xGVlJrcE1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWV1FsRlZWWE5STUVaQ1VYbDRVRkZWUmxCTVJVNUNVVlZOYzFOVlJrSlRVM2hTVVZWR1VreEZUa0pSVlUxelVsVkdRbEpVZEhaUmEwWkVZV3RWYzFOVlJrSlRVM2hFVVZWR1JFeEZkRUpSVlhOelVqQkdRbEo1ZUVaUlZVWkdURVZPUWxGVlRUZGhWVXBDVVRKb1EwOHpSa05SVlVaT1R6STVRMUZWVGs5TVJXeENVVlZyYzFFd1JrSlJlWGhNVVZWR1RFeEZaRUpSVldOelUxVkdRbE5UZUVSUlZVWkVUekpzUTFGVlRuTlJhblJvVVZWT1JVOHhiRUpSVlUxelZEQkdRbFI1ZUVSUlZVWkVURVZXUWxGVlZUZGFNRXBDVVRGbmMxTlZSa0pUVTNoRVVWVkdSRXhGZEVKUlZYTnpVakJHUWxKNWVFWlJWVVpHVEVWT1FsRlZUVGRaVlVaRVlVVkpOMVV3UmtSU1JIUlNVVlZPUlV4RmJFSlJWV3R6VVRCR1FsRjVlR2hSVlVab1RFVldRbEZWVlhOUk1FWkNVWHAwU2xGVlRqQlJhWGhFVVZWR1JFOHdiRUpSTURoeldWVkdRbGxVZEZKUlZVNTNVV2w0VGxGVlJrNU1SV3hDVVZWcmMxSXdSa0pTZVhoS1VWVkdTa3hGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlblJTVVZWT05GRjVlRnBSVlVaYVRFVk9RbEZWVFhOVU1FWkNWSGw0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoV1VWVkdWa3hGVmtKUlZWVnpVMVZHUWxOVGVFUlJWVVpFVEVWT1FsRlZUVGRUVlVaRVRqQk5jMUV3UmtKUmVuUkVVVlZPUlU4d1JrSlJNRkZ6VkZWR1FsUlRlR3hSVlVac1R6QnNRbFF6UWtOTVJteENVVlpyYzFWVlJrSmFNRWx6VWxWR1FsSlRlRkJSVlVWM1VXbDRSbEZWUmtaTVJsWkNVVmQwUkV4RlpFSlJWV056VWxWR1FsSlRlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWHAwVWxGVlRqSlNlWGhLVVZWR1NreEZUa0pSVlUxelUxVkdRbE5UZUVoUlZVWklURVZXUWxGVlZYTlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWY3hRMHhGVGtKUlZVMDNWVlZHUkUwd1RYTlRWVVpDVTFONFJGRlZSa1JNUlZaQ1VWVlZjMUl3UmtKU2VYaEdVVlZHUmt4RlRrSlJWVTF6VlZWR1FsVlRlRWhSVlVaSVRFVjBRbEZWYzNOUk1FWkNZMVZKYzFFd1JrSlJlblJTVVZWT2RWSkRlRXBSVlVaS1RFVk9RbEZWVFhOVE1FWkNVM2w0U0ZGVlJraE1SVlpDVVZWVmMxRXdSa0pSZVhoU1VWVkdVa3hGWkVKUlZXTnpWVlZHUWxWVGVFUlJWVVo0VVdsNFJGRlZSa1JQTVVaQ1VUTndSVXhGYkVKUlZXdHpVVEJHUWxGNWVGSlJWVVpTVEVWa1FsRlZZM05TVlVaQ1VsTjRSRkZWUmtSTVJrWkNVVlpGYzFJd1JrSlNlWGhTVVZWR1VreEZUa0pSV0U1RFRFVk9RbEZWVFRkVlZVWkVUakJSYzFOVlJrSlRVM2hFVVZWR1JFeEZPVUpSVlRoelVqQkdRbEo1ZUZCUlZVWlFURVZPUWxGVlRUZFZWVVpFWkd0SmMxTlZSa0pUVTNoRVVWVkdSRXhGT1VKUlZUaHpVakJHUWxKNWVGQlJWVVpRVEVWT1FsRlZUVGRWVlVaRVpHdEpjMVJWUmtKVVUzaEtVVlZHU2t4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVR6RkdRbEV5ZUVOTVJUbENVVlU0YzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelZWVkdRbFZUZUVaUlZVWkdURVZrUWxGVlkzTlNWVVpDVWxSMFdsRlZUWHBSYVhoS1VWVkdTa3hGVGtKUlZVMXpWakJHUWxaNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZUa0pSVlUwM1ZWVkdSR05GVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xTlZSa1JUYVhoRVVWVkdSRTh3YkVKUk1GRnpVMVZHUWxOVWRGSlJWVTVKVEVWc1FsRlZhM05STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFOVlJrSlRVM2hHVVZWR1JreEZNVUpSVlRCelVUQkdRbEY1ZUVSUlZVWkVUekZHUWxFemFFTk1SVEZDVVZVd2MxTXdSa0pUZVhoSVVWVkdTRXhGYkVKUlZXdHpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSUE1VWkNVVEpvUkV4Rk1VSlJWVEJ6VWxWR1FsSlRlRWhSVlVaSVRFVnNRbEZWYTNOUk1FWkNVWGw0UmxGVlJrWk1SVTVDVVZWTk4xVlZSa1JpYTBselZGVkdRbFJUZUVSUlZVWkVURVZXUWxGVlZYTlJNRVpDVVhsNFJGRlZSa1JQTVVaQ1VURm5jMVJWUmtKVVUzaEtVVlZHU2t4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVR6RkdRbEV5ZUVOTVJYUkNVVlZ6YzFFd1JrSlJlWGhRVVZWR1VFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZXUWxGVlZUZFhWVVpFWTBWSmMxUlZSa0pVVTNoR1VWVkdSa3hGWkVKUlZXTnpVakJHUWxKNWVFUlJWVVpFVEVWc1FsRlZhM05TVlVaQ1VsTjRSbEZWUmtaTVJWWkNVVlZWYzFVd1JrSlZlWGhHVVZWR1JreEZaRUpSVldOelVsVkdRbEpVZEc1UmEwWkVaVVZOYzFOVlJrSlRVM2hFVVZWR1JFeEdaRUpSVm1OelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZUalJSYVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRGcFJWVTVKVEVWV1FsRlZWWE5STUVaQ1VYbDRXRkZWUmxoTVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUwM1ZWVkdSR05GU1hOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xVlZSa1JUUTNoS1VWVkdTa3hGVGtKUlZVMXpVekJHUWxONWVFUlJWVVpFVEVWMFFsRlZjM05TTUVaQ1VubDRSbEZWUmtaTVJVNUNVVlZOTjFOVlJrUmthMGx6VVRCR1FsRjZkRXBSVlU1RlRFVnNRbEZWYXpkVlZVWkVVME40U2xGVlJrcE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGYkVKUlZXdHpVbFZHUWxKVGVFNVJWVVpPVEVWT1FsRlZUWE5STUVaQ1VYcDBTbEZWVGpaUmFYaEVVVlZHUkU4d2JFSlJNRGh6VmpCR1FsWjVlRVJSVlVaRVRFVnNRbEZXYXpkVlZVWkVUREJKYzFOVlJrSlRVM2hFVVZWR1JFeEZPVUpSVlRoelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUbmRSYVhoRVVWVkdSRTh3VGtKUk1GRTNVVlZHUkZKRGVFNVJWVVpPVEVaR1FsRldSVGRUVlVaS1dXbDRXbEZWUmxwTVJteENVVmhrUTB4RlpFSlJWV056VWxWR1FsSlRlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWHAwVWxGVlRYWlJlWGhLVVZWR1NreEZUa0pSVlUxelUxVkdRbE5UZUVoUlZVWklURVZXUWxGVlZYTlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWY3hRMHhGVGtKUlZVMDNWVlZHUkUwd1RYTlRWVVpDVTFONFJGRlZSa1JNUldSQ1VWVmpjMUl3UmtKU2VYaEdVVlZHUmt4RlRrSlJWVTF6VjFWR1FsZFRlRVJSVlVaNlVXbDRSRkZWUmtSUE1VWkNVVEp3UlV4RmJFSlJWV3R6VVRCR1FsRjVlRkJSVlVaUVRFVmtRbEZWWTNOVk1FWkNWWGw0UkZGVlJrSlBNVVpDVVROb1EweEZNVUpSVlRCelUxVkdRbE5UZUVoUlZVWklURVZzUWxGVmEzTlJNRVpDVVhwMFVsRlZUbk5SYVhoUVVWVkdVRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWa1FsRlZZM05TVlVaQ1VsTjRTRkZWUmtoTVJWWkNVVlZWTjFkVlJrUmtSVWx6VTFWR1FsTlRlRVJSVlVaRVRFVTVRbEZWT0hOU1ZVWkNVbE40UkZGVlJrUlBNVVpDVVRKb1EweEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekJzUWxFd2IzTlJNRVpDVVhwMFNsRlZUa1ZNUld4Q1VWVnJOMVZWUmtSVFEzaEtVVlZHU2t4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVnNRbEZWYTNOU1ZVWkNVbE40VGxGVlJrNU1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk9ObEZwZUVSUlZVWkVUekJzUWxFd1VYTlRWVVpDVTFSMFVsRlZUa2xNUld4Q1VWVnJjMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VTFWR1FsTlRlRVpSVlVaR1RFVXhRbEZWTUhOUk1FWkNVWGw0UkZGVlJrUlBNR3hDVVROd1EweEZUa0pSVlUwM1VUQkdSRkpFZEVKUlZURkZURVV4UWxGVk1ITldWVVpDVmxSMFNsRlZiRzFQTVVaQ1VrVkZjMWxWUmtKVlUzaElVVlZHU0V4RlRrSlJWVTF6VTFWR1FsWjVlRVpSVlVaR1RFVldRbEZWVlhOU01FWkNVbmw0UkZGVlJrUk1SVTVDVVZWRk4xVlZSa1pQVlVselUxVkdRbE5UZUVSUlZVWkVURVZzUWxGVmEzTlNNRVpDVW5sNFJsRlZSa1pNUlU1Q1VWVk5jMVF3UmtKVWVYaEVVVlZHZEZGcGVFUlJWVVpFVHpGR1FsRjZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEdVVlZHUmt4RlpFSlJWV056VWxWR1FsSlRlRVJSVlVaRVRFWldRbEZXVlhOUk1FWkNZMVZKYzFFd1JrSlJlblJLVVZWTk5WRjVlRVJSVlVaRVR6QnNRbEV3VVhOVFZVWkNVMU40UkZGVlJrUk1SWFJDVVZkTk4xVlZSa1JpUlVselUxVkdRbE5UZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlZaQ1VWVlZjMVJWUmtKVVUzaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JHVkZTWE5VVlVaQ1ZGTjRSbEZWUmtaTVJXUkNVVlZqYzFOVlJrSlRVM2hFVVZWR1JFeEZWa0pSVlZWelVUQkdRbEY2ZEZKUlZVNTFVV2w0VGxGVlJrNU1SVTVDVVZWTmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMDNWVlZHUkZkRGVFNVJWVVpPVEVWc1FsRlZhM05TTUVaQ1VubDRTbEZWUmtwTVJVNUNVVlZGTjFWVlJrUmhhMGx6VXpCR1FsTjVlRVJSVlVaRVRFVTVRbEZWT0hOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxSlZSa0pTVkhSYVVWVk9jVkZwZUU1UlZVWk9URVZXUWxGVlZYTlNNRVpDVW5sNFNGRlZSa2hNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkV4R1ZrSlJWbFZ6VWxWR1FsSlRlRVpSVlVaR1RFVldRbEZWVlhOVk1FWkNWWGw0UmxGVlJrWk1SV1JDVVZWamMxSlZSa0pTVkhSdVVXdEdSR0ZGVVhOVFZVWkNVMU40UkZGVlJrUk1Sa1pDVVZaRmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRGcFJWVTV6VVdsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZPU1V4RlZrSlJWVlZ6VVRCR1FsRjVlRmhSVlVaWVRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTk4xVlZSa1JqUlVselVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlJUZFRWVVpFVTBONFJGRlZSa1JQTUd4Q1VUQlJjMU5WUmtKVFZIUlNVVlZPU1V4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UmxGVlJrWk1SVEZDVVZVd2MxRXdSa0pSZVhoRVVWVkdSRTh3YkVKUk0zQkRURVZPUWxGVlRUZFJNRVpFVWtSMFFsRllaRU5TUTNoT1VWVkdUa3hGT1VKUlZUZzNVMVZHVUZkcWRGSlJWVnBTVEVaV1FsRlZjM05TTUVaQ1kxVkpjMUpWUmtKU1UzaEVVVlZHUWs4eFJrSlJNMEpFVEVaa1FsRlZNSE5TTUVaQ1VubDRSRkZWUmtSTVJUbENVVmQwUTB4RlZrSlJWVlZ6VWxWR1FsSlRlRWhSVlVaSVRFVk9RbEZWVFhOUk1FWkNVVlIwVWxGVlZuVlJlWGhLVVZWR1NreEZUa0pSVlUxelUxVkdRbE5UZUVoUlZVWklURVZXUWxGVlZYTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWY3hRMHhGVGtKUlZVMDNWVlZHUkUxVlRYTlRWVVpDVTFONFJGRlZSa1JNUmtaQ1VWWkZjMUl3UmtKU2VYaEdVVlZHUmt4RlRrSlJWVTF6V2pCS1FsRlhaRU5NUlU1Q1VWY3hRMHhGVGtKUlZVMDNWVlZHUkdSclVYTlRWVVpDVTFONFJGRlZSa1JNUlRsQ1VWVTRjMUl3UmtKU2VYaEdVVlZHUmt4RlRrSlJWVTF6V1ZWR1FsbFRlRVJSVlVaNlVXbDRSRkZWUmtSUE1VWkNVVE5TUlV4RmJFSlJWV3R6VVRCR1FsRjVlRWhSVlVaSVRFVmtRbEZWWTNOU1ZVWkNVbE40UkZGVlJrUk1SbXhDVVZacmMxRXdSa0ppTUVselVUQkdRbEY2ZEZKUlZVMTJVWGw0VGxGVlJrNU1SV3hDVVZWcmMxSXdSa0pTZVhoS1VWVkdTa3hGVGtKUlZVMDNWVlZHUkdKRlNYTlVNRVpDVkhsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaFFVVlZHVUV4RlZrSlJWVlZ6VWpCR1FsSjVlRVpSVlVaR1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SbFpDVVZaVmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMDNVMVZHUkdGRlVYTlJNRVpDVVhwMFNsRlZUa1ZNUld4Q1VWVnJjMUV3UmtKUmVYaE9VVlZHYkV4RlZrSlJWVlZ6VWpCR1FsWjZkRkpSVlU1dlVYbDRTbEZWUmtwTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZiRUpSVld0elVsVkdRbEpUZUU1UlZVWk9URVZPUWxGVlRYTlJNRVpDVVhwMFVsRlZUalJSYVhoT1VWVkdUa3hHUmtKUlZrVnpVakJHUWxKNWVFcFJWVVpLVEVWT1FsRlZUWE5WVlVaQ1ZWTjRSRkZWUmtSUE1VWkNVWGs1UTB4Rk1VSlJWVEJ6VVRCR1FsRjVlRkpSVlVaU1RFVk9RbEZWVFhOUk1FWkNVWHAwVWxGVlRuRlJhWGhLVVZWR1NreEZUa0pSVlUxelV6QkdRbE41ZUVoUlZVWklURVZXUWxGVlZYTlJNRVpDVVhwMFVsRlZUbTlSYVhoT1VWVkdUa3hGYkVKUlZXdHpVakJHUWxKNWVFcFJWVVpLVEVWT1FsRlZUVGRWVlVaRVlrVkpjMVJWUmtKVVUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOU1ZVWkNVbFIwV2xGVlRuTlJhWGhPVVZWR1RreEZaRUpSVldOelVqQkdRbEo1ZUVaUlZVWkdURVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUlU1Q1VWVk5OMWRWUmtSa1JVbHpWRlZHUWxSVGVFUlJWVVpFVEVWa1FsRlZZM05TVlVaQ1VsTjRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSTTBKRFRFVXhRbEZWTUhOUk1FWkNVWGw0U0ZGVlJraE1SVlpDVVZWVmMxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMXpVVEJHUWxGNmRGcFJWVTUzVVdsNFJGRlZSa1JNUlU1Q1VWVk5jMVV3UmtKVmVYaElVVlZHU0V4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkWFZVWkVZa1ZKYzFFd1JrSlJlWGhFVVZWR1JFeEdUa0pSVmsxelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTVd4Q1VUSjRRMHhGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVEVWV1FsRlZWWE5TTUVaQ1VubDRSbEZWUmtaUE1tUkRVVlZPYlV4RmJFSlJWV3R6VVRCR1FsRjVlRWhSVlVaSVRFVldRbEZWVlhOVk1FWkNWWGw0UkZGVlJrUk1SVTVDVVZWTk4xb3dTa0pSTTBwRFRFVnNRbEZWYTNOUk1FWkNVWGw0U0ZGVlJraE1SVlpDVVZWVmMxUXdSa0pVZVhoRVVWVkdSRXhGVGtKUlZVMDNXakJLUWxFeU5VTk1SV3hDVVZWcmMxRXdSa0pSZVhoSVVWVkdTRXhGVmtKUlZWVnpWVEJHUWxWNWVFUlJWVVpFVEVWT1FsRlZUVGRYVlVaRVpFVkpjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTAzVjFWR1JGTkRlRkJSVlVaUVRFVk9RbEZWVFhOUk1FWkNVWGw0UmxGVlJrWk1SV1JDVVZWamMxSlZSa0pTVkhSdVVXdEdSRnBwZUVwUlZVWktURVZPUWxGVlRYTlNNRVpDVW5sNFJsRlZSa1pNUms1Q1VWWk5jMUV3UmtKUmVYaEVVVlZHUkU4eVpFTlJWVTU1VVdsNFNsRlZSa3BNUlU1Q1VWVk5jMUl3UmtKU2VYaEdVVlZHUmt4R1RrSlJWazF6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVG5sUmFYaEtVVlZHU2t4RlRrSlJWVTF6VWpCR1FsSjVlRVpSVlVaR1RFVTVRbEZWT0hOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVVROQ1EweEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekZzUWxFd1ozTlRWVVpDVTFONFJGRlZSa1JNUldSQ1VWVmpjMUpWUmtKU1UzaFVVVlZHVkV4RlRrSlJWVTF6VVRCR1FsRjZkRnBSVlU1NVVXbDRTbEZWUmtwTVJVNUNVVlZOYzFFd1JrSlJlWGhHVVZWR1JreEhUa0pSVjAxelVUQkdRbEY1ZUVSUlZVWkVUekZzUWxFemFFTk1SV3hDVVZWcmMxRXdSa0pSZVhoRVVWVkdSRXhGVmtKUlZWVnpXVEJHUWxsNWVFUlJWVVpFVEVWT1FsRlZUVGRYVlVaRVpVVkpjMUl3UmtKU2VYaEVVVlZHUkV4R1pFSlJWbU56VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwV2xGVlRuVlJhWGhJVVZWR1NFeEZUa0pSVlUxelZqQkdRbFo1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTVd4Q1VUSTFRMHhGYkVKUlZXdHpVVEJHUWxGNWVFaFJWVVpJVEVWV1FsRlZWWE5YVlVaQ1YxTjRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrUmxSVWx6VlZWR1FsVlRlRVJSVlVaRVRFWmtRbEZXWTNOUk1FWkNVWGw0U0ZGVlJraE1SVTVDVVZWTmMxRXdSa0pSZW5SYVVWVk5lRkZwZUVwUlZVWktURVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaElVVlZHU0V4RlRrSlJWVTF6VVRCR1FsRjZkRkpSVlU0d1VXbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJTVVZWT1NVeEZiRUpSVld0elVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5OMU5WUmtSaWEwbHpVVEJHUWxGNmRFcFJWVTVGVEVWc1FsRlZhemRWVlVaRVUwTjRTbEZWUmtwTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZiRUpSVld0elVsVkdRbEpUZUU1UlZVWk9URVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUalpSYVhoRVVWVkdSRTh3YkVKUk1EaHpWbFZHUWxaVWRGSlJWVTV4VVdsNFRsRlZSazVNUlRsQ1VWVTRjMUl3UmtKWmVYaEdVVlZHUmt4RlRrSlJWVTAzVlZWR1JFOVZTWE5VVlVaQ1ZGTjRXbEZWUmxwTVJXUkNVVmRGYzFKVlJrSlNVM2hFVVZWR1JFOHhSa0pSTW5oRVRFVnNRbEZWYTNOUk1FWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxUXdSa0pVZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFWlJWVVpHVEVWT1FsRlZUWE5TVlVaQ1VsTjRSbEZWUmtaUE1XeENVWHBPUTB4RmJFSlJWV3R6VVRCR1FsRjVlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZWTmMxVXdSa0pWZVhoRVVWVkdSRTh5WkVOUlZVWkdURVU1UWxGVk9ITlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RlRrSlJWVTAzWVZWS1FsRXlOVVZNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkV4R1RrSlJWazF6VVRCR1FsRjVlRkpSVlVaU1RFVk9RbEZWVFhOVU1FWkNWSGw0UkZGVlJrUlBNbVJEVVZWR1JreEZPVUpSVlRoelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUlU1Q1VWVk5OMDh5WkVOUlZVNHlVa040V2xGVlJscE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBVbEZWVFhaUmFYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkRkpSVlU1SlRFVnNRbEZWYTNOWFZVWkNWMU40UkZGVlJrUk1SVEZDVVZVd2MxSXdSa0pTZVhoRVVWVkdSRXhGVmtKUlZWVTNWMVZHUkU1VlNYTlRWVVpDVTFONFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVYY3dVV3RHUWs1RlNYTlNNRVpDVW5sNFdsRlZSbHBNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkWFZVWkVZMnRWYzFRd1JrSlVlblJVVVZWT1VVOHhSa0pSTUZGelUxVkdRbE5UZUVSUlZVWkVURVV4UWxGVk1ITlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMUV3UmtKUmVuUktVVlZPTUZGcGVFUlJWVVpFVHpCc1FsRXdPSE5VTUVaQ1ZIbDRSRkZWUmtSTVJXUkNVVlpqTjFWVlJrUk5WVWx6VTFWR1FsTlRlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWGw0VkZGVlJsUk1SV1JDVVZWamMxSXdSa0pTZVhoRVVWVkdSRTh3YkVKUmVrWkRURVZPUWxGVlRUZFJNRVpFVWtSMFFsRldSa1ZNUlRGQ1VWVXdjMVV3UmtKVmVuUktVVlZPYTB4R2JFSlJXRVpEVEVVeFFsRlhUWE5TVlVaQ1ZubDRTbEZWUm01UmFuUlNVVlZHTmxGNWVGaFJWVVpPVEVWa1FsRlZOSE5VVlVaQ1ZGTjRSRkZWUmxKUE1VWkNVVlpqYzFVd1JrSlRVM2hJVVZWR1MweEZiRUpSVld0elVUQkdRbGRVZEVwUlZWVTFVa040UkZGVlJrUlBNR3hDVVRCUmMxUXdSa0pVZW5SU1VWVk9UMHhGYkVKUlZXdHpVMVZHUWxOVGVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRWRkZWUmxSTVJXeENVVlZyYzFSVlJrSlVWSFJhVVZWR1JreEZPVUpSVlRoelZUQkdRbFY1ZUVSUlZVWkVUekZHUWxFelFrVk1SVGxDVVZVNE4xZFZSa1JVYVhoT1VWVkdUa3hGVmtKUlZWVnpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNRGRYVlVaRVltdEpjMVF3UmtKVWVYaEdVVlZHUmt4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVU1FWkNWSHAwV2xGVlRYaFJhWGhXVVZWR1ZreEZWa0pSVlZWelUxVkdRbE5UZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hQTVU1Q1VYcE9RMHhGVGtKUlZVVTNVMVZHUkZKcGVFUlJWVVpFVHpCT1FsRXdVVGRSVlVaRVVrTjRTbEZWUmxaTVJrWkNVVlpGYzFFd1JuUlJiWEJEVHpCR1FtSnJTa1ZNUm1SQ1VWWlZjMVZWUmtKVlZIUktVVlZPY1ZGcGVGUlJWVVp1VVdsNFRGRlZSa3hNUlU1Q1VWVk5jMUV3UmtKVmVuUlNVVlZOTlZGcGVFNVJWVVpPVEVWa1FsRlZZM05TTUVaQ1VubDRTbEZWUmtwTVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekZHUWxGNlJrTk1SV3hDVVZWcmMxTXdSa0pUZVhoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNmRGcFJWVVpHVEVVNVFsRlZPSE5WTUVaQ1ZYbDRSRkZWUmtSUE1VWkNVVEp3UkV4Rk9VSlJWVGh6VTFWR1FsTlRlRXBSVlVaS1RFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SVTVDVVZWTk4xTlZSa1JrUlVselVUQkdRbEY2ZEVwUlZYQnNURWRPUWxGVmMzTlZWVVpLWTBWSmMxRXdSa0pSVkhSS1VWVk9SVXhHVGtKUlYyUkRURVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSblJSYW5SU1VWVk9NRkY1ZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZSa1pNUlRsQ1VWVTRjMUpWUmtKU1UzaEVVVlZHUkU4eFJrSlJNbmhEVEVVNVFsRlZPSE5STUVaQ1VYbDRSRkZWUmtSTVJtUkNVVlpqYzFKVlJrSlNVM2hFVVZWR1JFOHdiRUpSTTJoRFRFVk9RbEZWVFRkVFZVWkpXbE40V2xGVlJraE1SVEZDVWpKNFEweEZUa0pSVlVVM1UxVkdSRkpEZUZSUlZVWnVVV2w0VEZGVlJreFBNVVpDVVROQ1EweEZPVUpSVlRoelZWVkdRbFZUZUVSUlZVWkVURVZzUWxGVmEzTlRWVVpDVTFONFJsRlZSa1pNUlU1Q1VWVk5jMUV3UmtKUmVuUktVVlZOTTFGcGVFUlJWVVpFVHpCc1FsSnRWWE5aTUVaQ1UzbDRVbEZWVm5kUmFYaEVVVlZHUWs4d2JFSlJNRkZ6VlRCR1Fsb3dTWE5WVlVaQ1ZWTjRSRkZWUmtSTVJXeENVVlpWTjFWVlJrUmlSVTF6VkRCR1FsUjVlRXBSVlVaS1RFVnNRbEZWYTNOUk1FWkNVWGw0VmxGVlJsWk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRFcFJWVTUxVVhsNFJGRlZSa1JQTUd4Q1VtMVZjMkZWU2tKUlZrVnpWakJHUm1SclNYTlJNRVpDVVZSMFNsRlZUa1ZNUms1Q1VWZGtRMHhHVmtKUlZsVnpVVEJHUWxGNWVFcFJWVVpXVHpGR1FsRXpRa1JNUlRsQ1VWVTRjMU5WUmtKVFUzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVU1FWkNWSGw0UmxGVlJrWk1SV1JDVVZWamMxSlZSa0pTVTNoSVVWVkdTRXhGVmtKUlZWVnpVakJHUWxKNWVFWlJWVVpHVEVWa1FsRlZZM05UVlVaQ1UxTjRSRkZWUmtSTVJXUkNVVlZqYzFKVlJrSlNVM2hJVVZWR1NFeEZWa0pSVlZWelVqQkdRbEo1ZUVaUlZVWkdURVZrUWxGVlkzTlRWVVpDVTFONFJGRlZSa1JQTUd4Q1VYazVSa3hGVGtKUlZVMDNVMVZHUjFwVGVIUlJhMFpDVmxONGFGRlZWalpSYVhoRVVWVkdRazh3UmtKUk1GbHpVVEJHUWxGNWVFWlJWelZEVlhsNFVsRlZSbEpNUlhSQ1VWWkpjMVZWUmtKVlUzaFNVVmN4UTJGclNUZFJWVVpHVWtONFZGRlZSbFJNUm1SQ1VWWmpjMUV3UmtKUmVYaE1VVlZHV2t4RlZrSlJWVlZ6VWpCR1FsWjVlRVpSVlVaR1RFVjBRbEZYVlhOU1ZVWkNVbE40U2xGVlJqVlJhblJLVVZWT05sSnBlRXBSVlVaS1RFVk9RbEZWVFhOU01FWkNVbmw0VEZGVlJreE1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVmtKUlZWVnpVVEJHUWxGNWVFaFJWVVpJVEVWMFFsRlZjM05STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFKVlJrSlNVM2hJVVZWR1NFeEZaRUpSVldOelV6QkdRbE41ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTUd4Q1VYazVSRXhGYkVKUlZXdHpVekJHUWxONWVFaFJWVVpJVEVWMFFsRlZjM05STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJLVVZWT2VWRnBlRXBSVlVaS1RFWkdRbEZXUlhOU01FWkNVbmw0VWxGVlJsSk1SVTVDVVZWTmMxTXdSa0pUZVhoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1HeENVVE5vUkV4RmJFSlJWV3R6VlZWR1FsVlRlRWhSVlVZeFVXbDRVbEZWUmxKTVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZFRWVVpFWkVWUmMxTlZSa0pUVTNoU1VWVkdVa3hGWkVKUlZXTnpWVlZHUWxWVGVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEVwUlZVNDBVWGw0U2xGVlJrcE1SazVDVVZaTmMxSXdSa0pTZVhoU1VWVkdVa3hGVGtKUlZVMXpVekJHUWxONWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFOVlJrUmlhMDF6VkZWR1FsUlRlRlJSVlVaVVRFVmtRbEZWWTNOVFZVWkNVMU40UkZGVlJrUk1SVEZDVVZVd2MxSlZSa0pTVTNoRVVWVkdSRTh3YkVKUk1taEVURVZzUWxGVmEzTlRNRVpDVTNsNFNsRlZSa3BNUlZaQ1VWVlZOMVZWUmtKU1UzaE1VVlZHVEV4RlpFSlJWV056VlZWR1FsVlRlRVJSVlVaRVR6QnNRbEV5ZUVSTVJXeENVVlZyYzFNd1JrSlRlWGhLVVZWR1NreEdSa0pSVmtWelUxVkdRbE5UZUV4UlZVWk1URVZzUWxGVmEzTlVNRVpDVkhsNFNsRlZSa3BNUlhSQ1VWVnpjMU5WUmtKVFUzaFVVVlZHVkV4RlZrSlJWVlUzVlZWR1JHRkZWWE5UVlVaQ1UxTjRSRkZWUmtSTVNHeEZVVlZHTlZKRGVFUlJWVVpFVEVWT1FsRlZUVGRWVlVaRVlVVlZjMU13UmtKVGVYaElVVlZHU0V4R1JrSlJWa1Z6VVRCR1FsRjZkRXhSVlU1eFVXcDBTbEZWVGtWTVJXeENVVlZyYzFNd1JrSlRlWGhLVVZWR1NreEZPVUpSVlRoelUxVkdRbE5UZUV4UlZVWk1URVZzUWxGVmEzTlZNRVpDVlhsNFJsRlZSa1pQTVVaQ1VYcE9SRXhGYkVKUlZXczNWMVZHUkZORGVFcFJWVVpLVEVWT1FsRlZUWE5WVlVaQ1ZWTjRTbEZWUmtwTVJVNUNVVlZOYzFWVlJrSlZVM2hLVVZWR1NreEZkRUpSVlhOelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlRWVVpDVTFONFRGRlZSa3hNUlU1Q1VWVk5jMVV3UmtKVmVYaEVVVlZHUkV4RlZrSlJWVlUzV2pCS1FsRXllRVpNUlRGQ1VWVXdjMUpWUmtKU1UzaEVVVlZHUkU4eVJrSlJNVkUzVjFWR1JGSkRlRTVSVlVaT1RFVnNRbEZWYTNOU01FWkNWbE40UmxGVlJrWk1SVTVDVVZWTmMxSlZSa0pTVTNoRVVWVkdSRXhGVmtKUlZWVnpVakJHUWxKNWVFWlJWVVpHVEVWMFFsRlZjM05TVlVaQ1VsTjRVbEZWUmxKTVJWWkNVVlZWYzFWVlJrSlZVM2hHVVZWR1JreEdSa0pSVmtWelVsVkdRbEpUZUZSUlZVWlVURVZXUWxGVlZYTlRNRVpDVTNsNFJsRlZSa1pNUldSQ1VWVmpjMUpWUmtKU1UzaFVVVlZHVkV4RlZrSlJWVlZ6VVRCR1FsRjZkRnBSVlU0MlVubDRVRkZWUmxCTVJXeENVVlZyYzFFd1JrSlJlblJVVVZWT1lVOHhSa0pSVlUxelZqQkdRbE42ZEZwUlZVNVBURVZzUWxGVmEzTlJNRVpDVVhsNGRsSlZSa0ppTUZWelVUQkdRbEY1ZUVSUlZVWkVUekZzUWxGNlRrWk1SWFJDVVZWemMxSXdSa0pTZVhoU1VWVkdVa3hGVGtKUlZVMDNWMVZHUkdGclNYTlZNRVpDVlhsNFNGRlZSa2hNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZPYTB4R1JrSlJWa1Z6VWpCR1FsSjVlRlJSVlVaVVRFVk9RbEZWVFRkWFZVWkVZMnRKYzFWVlJrSlZVM2hJVVZWR1NFeEZaRUpSVldOelVUQkdRbEY2ZEZwUlZVNXRURVpHUWxGV1JYTlNNRVpDVW5sNFZGRlZSbFJNUlU1Q1VWVk5OMVV3UmtSamEwazNVekJHUkZKRWRFcFJWVTVGVEVWc1FsRlZhM05WTUVaQ1ZYbDRTbEZWUmtwTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUZSUlZVWlVURVZPUWxGVlRUZFZWVVpFWkVWTmMxTlZSa0pUVTNoRVVWVkdSRXhJWkVWUlZVWXpVa040UkZGVlJrUk1SVTVDVVZWTk4xTlZSa1JoUlZWelUxVkdRbE5UZUZKUlZVWlNURVZzUWxGVmEzTlZNRVpDVlhwMFVsRlZUalJSYVhoS1VWVkdTa3hGVGtKUlZVMXpaRlZTUWxGWVZrVk1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk5kbEpEZUVwUlZVWktURVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUmtaQ1VWWkZjMUV3UmtKUmVuUlNVVlZPZFZGcGVFcFJWVVpLVEVWT1FsRlZUWE5qTUZKQ1VWaE9SVXhGVGtKUlZVMXpVVEJHUWxGNmRFcFJWVTAxVWtONFNsRlZSa3BNUmtaQ1VWWkZjMU5WUmtKVFUzaFVVVlZHVkU4eFJrSlJNMmhEVEVWc1FsRlZhM05STUVaQ1VYbDRNVkpGUmtKa1ZWRnpVVEJHUWxGNWVFUlJWVVpFVHpCc1FsRjVPVVZNUms1Q1VWWk5jMUl3UmtKU2VYaEVVVlZHUkV4RlRrSlJWVTAzVTFWR1JGcERlRkpSVlVaU1RFVmtRbEZWWTNOVk1FWkNWWGw0UkZGVlJrUlBNR3hDVVROS1EweEdSa0pSVmtWelVqQkdRbEo1ZUZSUlZVWlVURVZPUWxGVlRUZFRWVVpFWTJ0SmMxVlZSa0pWVTNoSVVWVkdTRXhHVGtKUlZrMXpVVEJHUWxGNmRFcFJWVTU1VVdsNFRsRlZSazVNUld4Q1VWVnJjMUl3UmtKV1UzaEdVVlZHUmt4RlRrSlJWVTF6VWxWR1FsSlRlRVJSVlVaRVRFVldRbEZWVlhOU01FWkNVbmw0UmxGVlJrWk1SWFJDVVZWemMxSlZSa0pTVTNoU1VWVkdVa3hGVmtKUlZWVnpWVlZHUWxWVGVFWlJWVVpHVEVaR1FsRldSWE5TVlVaQ1VsTjRVbEZWUmxKTVJWWkNVVlZWYzFVd1JrSlZlWGhHVVZWR1JreEZkRUpSVlhOelVsVkdRbEpUZUVoUlZVWklURVZXUWxGVlZYTlZNRVpDVlhsNFJsRlZSa1pNUlU1Q1VWVk5OMU5WUmtSaWEyZHpWREJHUWxSNWVFcFJWVVpLVEVWT1FsRlZUVGRSVlVaRVdXbDRSRkZWUmtSUE1FWkNVVEJSYzFVd1JrSlZlWGhzVVZWR2JFeEZUa0pSVlUxelV6QkdRbGRVZEVwUlZVNTNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxSXdSa0pTZVhoTVVWVkdURXhGVGtKUlZVMDNVMVZHUkdGRlNYTlVWVVpDVkZONFNGRlZSa2hNUldSQ1VWVmpjMUV3UmtKUmVYaEVVVlZHUkV4RlpFSlJWV056VWxWR1FsSlRlRXhSVlVaTVRFVmtRbEZWWTNOUk1FWkNVWGw0UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMDNVMVZHUkU5VlRYTlVWVVpDVkZONFdsRlZSbHBNUldSQ1VWVmpjMUV3UmtKUmVYaEVVVlZHUkV4R1JrSlJWa1Z6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1Sa1pDVVZaRmMxRXdSa0pSZVhoU1VWVkdVa3hGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSUE1HeENVbnBzUlV4Rk1VSlJWVEJ6VXpCR1FsTjVlRWhSVlVaSVRFVjBRbEZWYzNOU01FWkNVbmw0U2xGVlJrcE1SV1JDVVZWamMxSXdSa0pTZVhoSVVWVkdTRXhGYkVKUlZXdHpVakJHUWxKNWVFaFJWVVpJVEVWT1FsRlZUVGRUVlVaRVQxVk5jMVJWUmtKVVUzaE9VVlZHVGt4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0U0ZGVlJraE1SVlpDVVZWVmMxRXdSa0pSZVhoRVVWVkdSRXhGZEVKUlZYTnpVbFZHUWxKVGVGSlJWVVpTVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhTVVZWR1VreEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlZWVVpDVlZONFNsRlZSa3BNUlU1Q1VWVk5jMUpWUmtKU1UzaFNVVlZHVWt4RlRrSlJWVTF6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZWTmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBTbEZWVm5kVFEzaFFVVlZHVUV4RlZrSlJWVlZ6VXpCR1FsTjVlRVpSVlVaR1RFVXhRbEZWTUhOU1ZVWkNVbE40UkZGVlJrUlBNRVpDVVhwR1EweEZUa0pSVlUwM1VWVkdSRkpEZUVwUlZVWldURVV4UWxGVk1ITlJNRVl6VWpKWk4xRlZSalJTTUZGelZqQkdRbFpUZUU1UlZVWk9UekJzUWxFeVdYTlRWVVpDVTFONFVsRlZSbEpNUldSQ1VWVmpjMU13UmtKVGVYaEVVVlZHUWs4d2JFSlJNMEpEVEVaT1FsRlhaRU5NUld4Q1VWVnJOMVZWUmtSaWEwbHpVMVZHUWxOVGVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRhbEZWUm1wTVJWWkNVVlZWYzFJd1JrSlNlWGhHVVZWR1JrOHhiRUpSZW14RFRFWkdRbEZXUlhOU01FWkNVbmw0U2xGVlJrcE1SVTVDVVZWTk4xVlZSa1JoYTBselVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZFRWVVpFVTJsNFJGRlZSa1JQTUd4Q1UyMVZjMVl3UmtKVFUzaFFVVlZzZFZGcGVFUlJWVVpDVHpCc1FsRXdVWE5WTUVaQ1dqQkpjMU5WUmtKVFUzaEVVVlZHUkV4R1JrSlJWMlJEVEVWV1FsRlZWWE5VVlVaQ1ZGTjRTRkZWUmtoTVJXUkNVVlZqYzFKVlJrSlNVM2hJVVZWR1NFeEZUa0pSVlUxelVsVkdRbEpUZUV4UlZVWk1URVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSazVNUlZaQ1VWVlZjMUpWUmtKU1UzaElVVlZHU0V4RlRrSlJWVTAzVlZWR1JHRnJXWE5UVlVaQ1UxTjRSRkZWUmtSTVJrWkNVVlpGTjFkVlJrSlNVM2hRVVZWR1VFeEZkRUpSVlhOelVUQkdRbEY2ZEZKUlZVMHhVV2w0U2xGVlJrcE1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNmRGcFJWVTV2VVdsNFVsRlZSbEpNUlZaQ1VWVlZjMVZWUmtKVlZIUmFVVlZPYzFGcGVFeFJWVVpNVEVWV1FsRlZWWE5QUlU1Q1VWUm9SRTh4YkVKUk0wcEZURWRHUWxGWFJYTlNWVVpDVWxONFJGRlZSa1JNUkVKRlVWVkZkMUpEZUVSUlZVWkVUekZPUWxGNlRrWk1SVTVDVVZWTmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWV1FsRlZWVGRYVlVaRVYwTjRUbEZWUms1TVJWWkNVVlZWYzFFd1JrSlJlblJhVVZWT1ZVeEZiRUpSVld0elUxVkdRbE5UZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNGJGRlZSbXhNUlZaQ1VWVlZjMUV3UmtKUmVYaFdVVlZHVmt4RlRrSlJWVTF6VWpCR1FsSjVlRVpSVlVaR1R6SmtRMUZWVG05U1EzaFFVVlZHUWt4R1JrSlJWa1Z6VWxWR1FsSlRlRVJSVlVaRVR6RnNRbEV4YjNOVFZVWkNVMU40UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoc1VWVkdiRXhGVmtKUlZWVnpVVEJHUWxGNWVGWlJWVVpXVEVWT1FsRlZUWE5VVlVaQ1ZGTjRSRkZWUmtSTVJVNUNVVlZOYzFaVlJrSldVM2hHVVZWR1JreEZWa0pSVlZVM1dqQktRbEY2WkVWTVJXeENVVlZyYzFaVlJrSldWSFIyVVd0R1FsSlRlRkJSVlVaQ1RFWkdRbEZXUlhOU1ZVWkNVbE40UkZGVlJrUlBlblIyVVd0R1JHUkZTWE5VTUVaQ1VWTjRWRkZWUmxSTVJWWkNVVlZWYzFFd1JrSlJlblJhVVZWT2MxRnBlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwVWxGVlRrdE1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5TVlVaQ1VsUjBXbEZWVG1GTVJYUkNVVlZ6YzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEZKUlZVNVhURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTVVaQ1VUQm5jMVF3UmtKVWVYaEtVVlZHU2t4RlRrSlJWVTAzVTFWR1JGbHBlRVJSVlVaRVR6QnNRbUpGU214TVJtUkNVVlZyYzFRd1JuSlJiVFZEVEVWT1FsRlZSVGRUVlVaRVVrTjRWRkZWUm01UmFYaGFVVlZHV2s4eFJrSlJlazVEVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFwVlJrSmFVM2hHVVZWR1JreEZUa0pSVlUxelZGVkdRbFJUZUVaUlZVWkdURVZPUWxGVlRUZFRWVVpFWkd0TmMxRXdSa0pSZW5SS1VWVmFiRXhITVVOUlZVWmFURWRXUWxKVVRrTk1SVTVDVVZWRk4xTlZSa1JXVTNoc1VWVkdVa3hGWkVKUlZXTnpVakJHUWxKNWVFWlJWVVpHVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtKUE1HeENVVE5DUTB4SFpFTlJWVVpVVEVWa1FsRlZZM05TTUVaQ1VubDRSbEZWUmtaTVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1FrOHdiRUpSTW1oRVRFWk9RbEZYWkVOTVJrWkNVVlpGYzFFd1JrSlJlWGhPVVZWR2FreEZWa0pSVlZWelZUQkdRbFY1ZUVoUlZVWklURVZPUWxGVlRYTlRNRVpDV1hsNFJsRlZSa1pNUlZaQ1VWVlZjMUl3UmtKU2VYaEVVVlZHUkV4RlZrSlJWVlZ6VXpCR1FsTjVlRWhSVlVaSVRFVk9RbEZWVFhOUk1FWkNWRk40UmxGVlJrWk1SVlpDVVZWVmMxSXdSa0pTZVhoRVVWVkdSRTh4UmtKUk0wSklURVZzUWxGVmEzTlJNRVpDVVhsNFRsRlZSazVNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4R2JFSlJWbXR6VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFRkWFZVWkVZbXROYzFsVlJrSlpVM2hHVVZWR1JreEZNVUpSVlRBM1ZUQkdSR05yU1hOUk1FWkNVWGw0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa1JVYVhoSVVWVkdTRXhGVGtKUlZVMXpVbFZHUWxKVGVFUlJWVVpFVEVaT1FsRldUWE5STUVaQ1VYbDRTRkZWUmtoTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZNVUpSVlRCelVUQkdRbEY1ZUVoUlZVWklURVZPUWxFelNrUk1SVTVDVVZWTmMxRXdSa0pSZVhoR1VWVkdSa3hGVGtKUlZVMXpVMVZHUWxOVGVGUlJWVVpVVEVWT1FsRlZUWE5VVlVaQ1ZGTjRSbEZWUmtaTVJVNUNVVlZOYzFFd1JrSlJlWGhXVVZWR1ZreEZUa0pSVlUxelVUQkdRbEY1ZUZCUlZVWlFURVZXUWxGVlZYTlJNRVpFWWtWUmMxRXdSa0pSZVhoT1VWVkdUa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhHVVZWT2NWRnBlRWhSVlVaSVRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoSVVWVkdTRXhGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFOVlJrUmlSVTF6VVRCR1FsRjZkRXBSVmtwc1RFZFdRbEZXUlhOV01FWlNaR3RKYzFFd1JrSlJWSFJLVVZWT1JVeEdUa0pSVmsxelZqQkdRbFo1ZUVSUlZVWkVURVV4UWxGWFRYTlNWVVpDVWxONFRGRlZSbWhNUlZaQ1VWVlZjMVV3UmtKVmVYaElVVlZHU0V4RlRrSlJWVTF6VkZWR1FtRXdTWE5TVlVaQ1VsTjRSbEZWUmtaTVJXUkNVVlZqYzFFd1JrSlJlWGhHVVZWR1JreEZkRUpSVlhOelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVk1ITlNWVVpDVWxONFJsRlZSa1pNUldSQ1VWVmpjMUV3UmtKUmVuUlNVVlZPZFZORGVFcFJWVVpLVEVWT1FsRlZUWE5VVlVaQ1ZGTjRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhhVVZWR1dreEZUa0pSVlUxelZGVkdRbFJUZUVSUlZVWkVURVZrUWxGVlkzTlJNRVpDVVhwMFdsRlZUWGhSZVhob1VWVkdhRXhGVmtKUlZWVnpWRlZHUWxSVWRGcFJWVTU1VVdsNFRGRlZSa3hNUlZaQ1VWVlZjMU13UmtKVGVuUmFVVlZPWVV4SGJFTlJWVVp3VVdsNFJsRlZSa1pNUms1Q1VWWk5OMVV3UmtST1ZVbHpVVEJHUWxGNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaRVZHbDRTRkZWUmtoTVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFeEdUa0pSVmsxelVUQkdRbEY1ZUVoUlZVWklURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaEdVVlZPZFZGNWVFaFJWVVpJVEVWT1FsRlZUWE5TVlVaQ1VsTjRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhJVVZWR1NFeEZUa0pSVlUxelZGVkdRbFJUZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMU5WUmtSaVJVMXpVVEJHUWxGNmRFcFJWVTVGVEVaT1FsRldUWE5WVlVaQ1ZWTjRSRkZWUmtSTVJURkNVVmROYzFKVlJrSlNVM2hNVVZWR2FFeEZWa0pSVlZWelZUQkdRbFY1ZUVoUlZVWklURVZPUWxGVlRYTlVWVVpDWVRCSmMxSlZSa0pTVTNoR1VWVkdSa3hGWkVKUlZXTnpVVEJHUWxGNWVFWlJWVVpHVEVWMFFsRlZjM05TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlV3YzFKVlJrSlNVM2hHVVZWR1JreEZaRUpSVldOelVUQkdRbEY2ZEZKUlZVNXZVME40U2xGVlJrcE1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhGTVVKUlZUQnpVVEJHUWxGNWVGcFJWVVphVEVWT1FsRlZUWE5VVlVaQ1ZGTjRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlblJhVVZWTmVGRjVlR2hSVlVab1RFVldRbEZWVlhOVVZVWkNWRlIwV2xGVlRubFJhWGhNVVZWR1RFeEZWa0pSVlZWelV6QkdRbE42ZEZwUlZVNWhURWRzUTFGVlJuQlJhWGhHVVZWR1JreEhNVU5SVlVaMFVXcDBWRkZWVGpCUmVYaEVVVlZHUkV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlU1UFRFVmtRbEZWWTNOUk1FWkNVWGw0UmxGVlJrWk1SVTVDVVZWTmMxVXdSa0pWZVhoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFNVJWVVpPVEVWT1FsRlZUWE5VVlVaQ1ZGTjRSRkZWUmtSTVJWWkNVVEkxUkV4RlpFSlJWV056VVRCR1FsRjVlRVpSVlVaR1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SV1JDVVZWamMxRXdSa0pSZVhoT1VWVkdUa3hGVGtKUlZVMXpVekJHUWxONWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBTbEZWVG5OUmVYaEVVVlZHUkU4d2JFSlJNRkZ6VlRCR1Fsb3dTWE5aVlVaQ1dWTjRSRkZWUmtSTVJYUkNVVlpyYzFKVlJrSlNVM2hVVVZWR1ZFeEZaRUpSVldOelVUQkdRbEY1ZUV4UlZVWnFURVZXUWxGVlZYTlNWVVpDVWxONFNGRlZSa2hNUlU1Q1VWVk5jMUpWUmtKU1UzaE1VVlZHVEV4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaT1RFVldRbEZWVlhOU1ZVWkNVbE40U0ZGVlJraE1SVTVDVVZWTk4xVlZSa1JrYTJOelZGVkdRbFJUZUU1UlZVWk9URVZrUWxGVlkzTlRNRVpDVTNsNFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVuUlNVVlZOTVZGcGVFNVJWVVpPVEVaT1FsRldUWE5TTUVaQ1VubDRTRkZWUmtoTVJXUkNVVlZqYzFNd1JrSlRlWGhFVVZWR1JFeEdWa0pSVmxWelVqQkdRbEo1ZUVoUlZVWklURVZPUWxGVlRUZFZWVVpFVERCTmMxUlZSa0pVVTNoWVVWVkdXRXhGWkVKUlZXTnpWVEJHUWxWNWVFaFJWVVpJVEVWMFFsRlZjM05STUVaQ1VYcDBVbEZWVGpCUmVYaFNVVlZHVWt4RlRrSlJWVTF6VkZWR1FsUlRlRVpSVlVaR1RFWmtRbEZXWTNOU1ZVWkNVbE40VEZGVlJreE1SVTVDVVZWTmMxSlZSa0pTVkhSYVVWVk9lVkY1ZUU1UlZVWk9URVV4UWxGVk1ITlNNRVpDVW5sNFVsRlZSbEpNUlU1Q1VWVk5jMU13UmtKVGVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xZFZSa1JqYTAxelUxVkdRbE5UZUV4UlZVWk1URVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlZaQ1VWVlZOMW93U2tKUk1uaERURVYwUWxGVmMzTlJNRVpDVVhsNGVsSnJSa0pqTUZselVUQkdRbEY1ZUVSUlZVWkVUekprUTFGVlRUVlNhWGhRVVZWR1VFOHlSa0pSTVVFM1YxVkdSRkpEZUU1UlZVWk9URVpXUWxGV1ZYTlNNRVpDVW5sNFZGRlZSbFJNUldSQ1VWVmpjMVF3UmtKVWVYaElVVlZHU0V4RlRrSlJWVTF6VkZWR1FsUlRlRWhSVlVaSVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVVROU1JVeEdSa0pSVmtWelVUQkdRbEY1ZUU1UlZVWk9URVZXUWxGVlZYTldWVVpDVmxONFJsRlZSa1pNUlhSQ1VWVnpjMUV3UmtKUmVYaEdVVlZHUms4eVpFTlJWVTUzVVhsNFNsRlZSa3BNUmtaQ1VWWkZjMUl3UmtKWlUzaEdVVlZHUmt4RlRrSlJWVTAzV2pCS1FsRjZWa05NUlRGQ1VWVXdjMU13UmtKVGVYaElVVlZHV2t4RmRFSlJWWE56VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFhOUk1FWkNVWGw0VEZGVlJreE1SVlpDVVZWVmMxRXdSa0pSZVhoR1VWVkdSa3hGVmtKUlZWVTNZakJLUWxGNlpFUk1SWFJDVVZWemMxTlZSa0pUVTNoRVVWVkdSRXhGWkVKUlZXTnpVekJHUWxONWVFUlJWVVpFVEVVeFFsRlZNSE5TVlVaQ1VsTjRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhHVVZWR1JreEZUa0pSVlUxelVsVkdRbEpVZEROUmEwWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVmtKUlZWVnpVVEJHUWxGNWVFUlJWVVpFVHpJNVExRlZUbmxTUTNoS1VWVkdTa3hGYkVKUlZXdHpVakJHUWxKNWVFUlJWVVpFVEVWT1FsRldUWE5TVlVaQ1VsTjRSbEZWUmtaTVJVNUNVVlZOYzFWVlJrSlZVM2hFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlhSQ1VWVnpjMUV3UmtKUmVYaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjZkSFpSYTBaRVQxVlJjMVF3UmtKVWVYaFlVVlZHV0V4RlRrSlJWVTF6VXpCR1FsTjVlRVpSVlVaR1RFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SVlpDVVZWVmMxTXdSa0pUZVhoR1VWVkdSa3hGYkVKUlZXdHpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUWFpSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRHNVJhMFpFVTBONFNsRlZSa3BNUmtaQ1VWWkZjMUV3UmtKUmVYaE9VVlZHVGt4RlpFSlJWV056VVRCR1FsRjZkSFpSYTBaQ1VsTjRURkZWUmt4TVJVNUNVVlZOYzFWVlJrSlZVM2hFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQZW5SMlVXdEdSRXd3VFhOVk1FWkNWWGw0UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoRVVWVkdSRTh4YkVKUk0xcERURVZPUWxGVlRYTlNWVVpDVWxONFJGRlZSa1JNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNVVpDVVRJMVEweEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlNWVVpDVWxONFJGRlZSa1JNUlhSQ1VWVnpjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6QnNRbEV5TlVOTVJVNUNVVlZOTjFOVlJqQlJiVlZ6WWpCS1FsRlhSWE5hTUVwQ1l6QkpNVkZwZUVSUlZVWkNUekJzUWxFd1VYTlZNRVpDV2pCSmMxWlZSa0pXVTNoRVVWVkdSRXhGZEVKUlYwMXpVbFZHUWxKVGVGUlJWVVpVVEVWa1FsRlZZM05TTUVaQ1VubDRSbEZWUmtaTVJXUkNVVlZqYzFFd1JrSlJlWGhHVVZWR1JreEZkRUpSVlhOelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVk1ITlNWVVpDVWxONFJsRlZSa1pNUldSQ1VWVmpjMUV3UmtKUmVuUlNVVlZPTkZKcGVFcFJWVVpLVEVWa1FsRlZZM05TTUVaQ1VubDRTbEZWUmtwTVJXUkNVVlZqYzFKVlJrSmlWVWx6VVRCR1FsRjZkRkpSVlU1NVVYbDRURkZWUmt4TVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVaUlZVWkdUekZzUWxFeWNFTk1SVEZDVVZVd2MxUlZSa0pVVTNoSVVWVkdTRXhGVGtKUlZVMXpVVEJHUWxGNWVFeFJWVVpNVEVWT1FsRlZUWE5VVlVaQ1ZGTjRSRkZWUmtSUE1XeENVWHBzUTB4RmJFSlJWV3R6VWpCR1FsSjVlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTk4xb3dTa0pSVlZWelVqQkdRbEo1ZUVSUlZVWkVURVZrUWxGVlkzTlJNRVpDVVhsNFRsRlZSazVNUlU1Q1VWVlZjMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkUE1tUkRVVlZPTmxGNWVFaFJWVVpJVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJURkNVVlV3YzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRUZFZWVVpFVFRCSmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMDNWVlZHUkZORGVFaFJWVVpJVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSRkZWUmtSTVJVNUNVVlZOYzFNd1JrSlRlWGhHVVZWR1JreEZNVUpSVlRCelVsVkdRbEpUZUVaUlZVWkdUekZzUWxGNlpFTk1SekZEVVZWR2RGRnBlRVJSVlVaRVRFVXhRbEZWTUhOU1ZVWkNVbE40VEZGVlJreE1SVlpDVVZWVmMxVXdSa0pWZVhoR1VWVkdSa3hGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVHpGR1FsRXpVa1ZNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4d2JFSlJNRzl6VVRCR1FsRjZkRXBSVmxwc1RFZHNRMUZWUmxaTVIwWkNWbGh3UTB4RlRrSlJWVVUzVTFWR1JGSkRlRlJSVlVaVVRFY3hRMUZWUm5SUmFYaEVVVlZHUkV4Rk1VSlJWMDF6VWxWR1FsSlRlRXhSVlVacVRFVldRbEZWVlhOVk1FWkNWWGw0U0ZGVlJraE1SV1JDVVZWamMxSlZSa0pTVTNoSVVWVkdTRXhGVGtKUlZVMXpVbFZHUWxKVGVFeFJWVVpNVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUms1TVJWWkNVVlZWYzFKVlJrSlNVM2hJVVZWR1NFeEZUa0pSVlUwM1ZWVkdSRTFWWTNOVFZVWkNVMU40VEZGVlJreE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFWlJWVVpHVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhPVVZWR1RreEZiRUpSVld0elZGVkdRbFJUZUVSUlZVWkVUekZzUWxGVlZYTlVWVVpDVkZONFRGRlZSa3hNUlU1Q1VWVk5OMVZWUmtSTk1GRnpVMVZHUWxOVGVFNVJWVVpPVEVWa1FsRlZZM05TVlVaQ1VsTjRhRkZWUm1oTVJWWkNVVlZWYzFSVlJrSlVVM2hHVVZWR1JreEZUa0pSVlUwM1ZWVkdSR1JyVFhOVFZVWkNVMU40U2xGVlJrcE1SV1JDVVZWak4xZFZSa1JXYVhodVVXdEdRbG93U1hOU1ZVWkNVbE40VEZGVlJreFBNV3hDVVROYVEweEZiRUpSVld0elVsVkdRbEpUZUV4UlZVWk1URVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaEdVVlZHUmt4RlRrSlJWVTF6V2xWR1FscFRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNVTVDVVROb1JFeEZUa0pSVlUwM1ZWVkdSRkpwZUVwUlZVWktURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaGFVVlZHV2t4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFWmtRbEZXWTNOUk1FWkNVWGw0VGxGVlJrNU1SVlpDVVZWVmMxTlZSa0pUVTNoRVVWVkdSRTh5UmtKUmVteEZURVZzUWxGVmEzTlJNRVpFVTJsNFJGRlZSa1JNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4R1RrSlJWazF6VWxWR1FsSlRlRVpSVlU1dlVXbDRSRkZWUmtSTVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTUd4Q1VUSjRRMHhGVGtKUlZVMDNVVlZHUkZKcGVFUlJWVVpFVEVWV1FtVkZaRlJNUlRGQ1VWVXdjMU13UmtKVWFYaE9VVlZHVGt4R1JrSmtNR1J0VHpCR1FsRXdVWE5VVlVaQ1ZGTjRWbEZWUmxaTVJXUkNVVlZqYzFKVlJrSlNVM2hFVVZWR1JFOHdSa0pSTTFKRFRFVXhRbEZWTUhOVlZVWkNWVlIwU2xGVlpHbE1SbXhDVVZacmMxUlZSa0phVkhSU1VWVlNkVkZwZUdoUlZVWlNURVZrUWxGWVpFTk1SazVDVVZaTmMxRXdSa0pSZW5SU1VWVldjVkpEZUVwUlZVWktURVZPUWxGVlRYTlVWVVpDVkZONFNGRlZSa2hNUlRGQ1VWVXdjMUV3UmtKUmVuUlNVVlZPZVZGcGVFcFJWVVpLVEVWT1FsRlZUWE5UVlVaQ1UxTjRSbEZWUmtaTVJVNUNVVlZOTjFOVlJrUlphWGhFVVZWR1JFOHdiRUpSTUZGelUxVkdRbE5UZUVSUlZVWkVURVU1UWxGWE1VTlBNVVpDVVROYVEweEZiRUpSVld0elZEQkdRbFI2ZEZwUlZVWkdURVZzUWxGVmEzTlJNRVpDVVhsNFRsRlZSazVNUlU1Q1VWVk5jMVF3UmtKVWVYaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JHSkZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJUbENVVlU0TjFkVlJrSlNVM2hLVVZWR1NreEZiRUpSVld0elVUQkdRbEY1ZUZKUlZVWlNUekprUTFGVlJrWk1SVEZDVVZVd2MxTXdSa0pUZVhoRVVWVkdSRTh4UmtKUmVtUkVURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlZaQ1VWVlZjMUV3UmtKUmVuUlNVVlZPWVV4RmJFSlJWV3R6VTFWR1FsTlRlRVJSVlVaRVRFVXhRbEZWTUhOUk1FWkNVWGw0VGxGVlJrNU1SV3hDVVZWcmMxRXdSa0pSZW5SYVVWVkdSa3hGT1VKUlZUaHpVbFZHUWxKVGVFNVJWVVpPVEVWV1FsRlZWWE5TVlVaQ1VsTjRSbEZWUmtaTVJUbENVVlU0YzFKVlJrSlNVM2h1VVd0R1Fsb3dTWE5TVlVaQ1VsTjRSRkZWUmtSUE1VWkNVbFJzUmt4RmJFSlJWV3R6VkRCR1FsUjVlRWhSVlVaSVRFVldRbEZWVlhOUk1FWkNVWHAwVWxGVlRuRlJhWGhPVVZWR1RreEhUa0pSVjAxelVqQkdRbEo1ZUVSUlZVWkVURVZzUWxGV1kzTlNWVVpDVWxONFJsRlZSa1pNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmRFSlJWWE56VTFWR1FsTlRlRkpSVlVaU1R6RnNRbEY2WkVWTVJrWkNVVlpGYzFFd1JrSlJlWGhXVVZWR1ZreEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVpHUWxGV1JYTlJNRVpDVVhsNFNGRlZSa2hNUmtaQ1VWWkZjMUV3UmtKUmVYaFdVVlZHVmt4RlRrSlJWVTF6VTFWR1FsTlRlRXBSVlVaS1RFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUlBNVVpDVVROU1JreEZiRUpSVld0eldUQkdRbGw1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFRsRlZSazVNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VWxWR1FsSlVkRnBSVlU1MVVYbDRUbEZWUms1TVJURkNVVlV3YzFJd1JrSlNlWGhLVVZWR1NreEZUa0pSVlUxelZGVkdRbFJUZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JNUlZaQ1VWVlZjMVpWUmtKV1UzaEVVVlZHUkV4RlRrSlJWVTAzVjFWR1JHRkZVWE5VVlVaQ1ZGTjRVRkZWUmxCTVJXUkNVVlZqYzJGVlNrSlJWMnhEVEVWT1FsRlZUVGRYVlVaRVlrVk5jMVJWUmtKVVUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SVlpDVVZWVmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVGUlJWVVpVVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJrNUNVVlpOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSTW5CRlRFVnNRbEZWYTNOUk1FWkNVWGw0VWxGVlJsSk1SV1JDVVZWamMxUlZSa0pVVTNoRVVWVkdSRTh4YkVKUk0xcERURVU1UWxGVk9ITlNWVVpDVWxONFRsRlZSazVNUlZaQ1VWVlZjMVF3UmtKVWVYaEdVVlZHUmt4RlRrSlJWVTAzVlRCR1JFMHdTVGRaVlVaQ1ZGUjBXbEZWVGs5TVJURkNVVlV3YzFSVlJrSlVVM2hJVVZWR1NFeEZiRUpSVld0elVUQkdRbEY1ZUU1UlZVWk9URVZPUWxGVlRYTlRNRVpDVTNsNFJGRlZSa1JNUlU1Q1VWVk5jMUpWUmtKU1UzaFdVVlZHVmt4RlRrSlJWVTF6VVRCR1FsRjVlRTVSVlVaT1RFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1SVlpDVVZWVmMxRXdSa0pSZVhoRVVWVkdSRXhIVGtKUlYwMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1XeENVVEpvUjB4Rk1VSlJWVEJ6VkRCR1FsUjVlRWhSVlVaSVRFWnNRbEZXYTNOUk1FWkNVWHAwV2xGVlRUTlJhWGhPVVZWR1RreEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJsRlZSa1pNUlU1Q1VWVk5jMUpWUmtKU1UzaEdVVlZHUmt4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFWk9RbEZXVFhOU01FWkNVbmw0UkZGVlJrUk1SVTVDVVZWTmMxVXdSa0pWZVhoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkdGclVYTlRWVVpDVTFONFJGRlZSa1JNUmtaQ1VWWkZjMUl3UmtKU2VYaE9VVlZHVGt4RlRrSlJWVTAzVjFWR1JHUnJTWE5VTUVaQ1ZIbDRSbEZWUmtaTVJURkNVVlV3YzFKVlJrSlNVM2hRVVZWR1VFeEZWa0pSVlZWelVUQkdRbEY2ZEZSUlZVMTZVV3AwU2xGVlRrZE1SVTVDVVZWTk4xTlZSa1JVZVhoT1VWVkdUa3hGVGtKUlZVMXpWREJHUW1Fd1NUZFZWVVpFWVVWTmMxTlZSa0pUVTNoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVGSlJWVVpTVHpGc1FsRlZWWE5VVlVaQ1ZGTjRURkZWUmt4TVJVNUNVVlZOTjFWVlJrUmhSVTF6VTFWR1FsTlRlRkJSVlVaUVRFVk9RbEZWVFhOVVZVWkNWRk40U2xGVlJrcE1SV3hDVVZWcmMxRXdSa0pSZVhoU1VWVkdVa3hGVGtKUlZVMXpWRlZHUWxSVWRGcFJWVVpHVEVVeFFsRlZNSE5UTUVaQ1UzbDRSRkZWUmtSUE1VWkNVVE5vUlV4RmJFSlJWV3R6VVRCR1FsRjVlRkpSVlVaU1RFVk9RbEZWVFhOVU1FWkNWSGw0UkZGVlJrUk1SVTVDVVZWTmMxTXdSa0pUZVhoR1VWVkdSa3hGVGtKUlZVMXpVbFZHUWxKVGVFWlJWVVpHVHpGc1FsRXllRVJNUlRGQ1VWVXdjMVJWUmtKVVUzaElVVlZHU0V4Rk9VSlJWVGh6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwV2xGVlRYaFJhWGhPVVZWR1RreEZaRUpSVldOelVqQkdRbEo1ZUVwUlZVWktURVZzUWxGVmEzTlNWVVpDVWxONFJGRlZSa1JQTVd4Q1VUTmFRMHhGYkVKUlZXdHpWRlZHUWxSVGVFWlJWVVpHVHpKa1ExRlZUbGxNUlhSQ1VWVnpjMUV3UmtKUmVYaFVVVlZHVkV4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVG5kUmFYaE9VVlZHVGt4Rk1VSlJWVEJ6VWpCR1FsSjVlRVJSVlVaRVRFVmtRbEZWWTNOVFZVWkNVMU40U0ZGVlJraE1SVlpDVVZWVmMxSXdSa0pTZVhoR1VWVkdSa3hGWkVKUlZXTnpVbFZHUWxKVGVFUlJWVVpFVHpKa1ExRlZUakpSZVhoS1VWVkdTa3hGZEVKUlZYTnpVVEJHUWxGNWVGSlJWVVpTVEVWV1FsRlZWVGRpTUVwQ1VUSTFRMHhGTVVKUlZUQnpWakJHUWxaNWVFaFJWVVpJVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJUbENVVlU0YzFKVlJrSlNVM2hJVVZWR1NFeEZkRUpSVlhOelVUQkdRbEY1ZUZKUlZVWlNURVZPUWxGVlRYTlVNRVpDVkhsNFJsRlZSa1pNUlU1Q1VWVk5jMUl3UmtKU2VYaElVVlZHU0V4RlRrSlJWVTAzWWpCS1FsRXpTa1pNUlhSQ1VWVnpjMUV3UmtKUmVYaFNVVlZHVWt4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxVlZSa0pWVTNoR1VWVkdSa3hHWkVKUlZtTnpVbFZHUWxKVGVFNVJWVVpPVEVWT1FsRlZUWE5STUVaQ1VYcDBjRkZyUmtSTU1GRTNZMVZLUWxGVk1EZGlNRXBDVWxVMGMxTXdSa0pUZVhoRVVWVkdSRXhHUmtKUlZrVnpVakJHUWxKNWVFNVJWVVpPVEVWT1FsRlZUVGRoVlVwQ1VUTm9RMDh5WkVOUlZVNUZURVYwUWxGVmMzTlJNRVpDVVhsNFRGRlZSa3hNUldSQ1VWVmpjMVF3UmtKVWVYaEVVVlZHUkU4eVJrSlJNMUpEVHpKc1ExRlZSazVQTW1SRFVWVk9UMHhGZEVKUlZYTnpVVEJHUWxGNWVGUlJWVVpVVEVWV1FsRlZWWE5STUVaQ1VYcDBibEZyUmtSaVJVbHpVekJHUWxONWVFUlJWVVpFVEVaR1FsRldSWE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlJNalZEVEVWMFFsRlZjM05STUVaQ1VYbDRURkZWUmt4TVJXUkNVVlZqYzFNd1JrSlRlWGhFVVZWR1JFeEZkRUpSVlhOelUxVkdRbE5UZUZKUlZVWlNURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VlRCR1FsVjVlRVJSVlVaRVR6SkdRbEY2VmtWUE1XeENVVEJSYzFNd1JrSlRlWGhFVVZWR1JFeEdUa0pSVmsxelVqQkdRbEo1ZUVwUlZVWktURVZPUWxGVlRYTlVWVVpDVkZONFJsRlZSa1pNUlU1Q1VWVk5OMWRWUmtSaFJVMXpVekJHUWxONWVFUlJWVVpFVEVaR1FsRldSWE5TTUVaQ1VubDRTRkZWUmtoTVJVNUNVVlZOTjFkVlJrUmphMGx6VXpCR1FsTjVlRVJSVlVaRVRFWkdRbEZXUlhOU01FWkNVbmw0U2xGVlJrcE1SV3hDVVZWcmMxRXdSa0pSZVhoSVVWVkdTRXhGVGtKUlZVMXpWREJHUWxSNWVFWlJWVVpHVEVWa1FsRlZZM05UTUVaQ1UzbDRSRkZWUmtSTVJrWkNVVlpOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSZWs1RlRFVjBRbEZWYzNOUk1FWkNVWGw0U0ZGVlJraE1SV3hDVVZWcmMxVlZSa0pWVTNoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFaFJWVVpJVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJURkNVVlV3YzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFNGRlZSa2hNUlU1Q1VWVk5jMUl3UmtKU2VYaElVVlZHU0V4RlRrSlJWVTAzVlZWR1JFNHdVWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFWVlJrUlRRM2hPVVZWR1RreEZUa0pSVlUxelZsVkdRbFpUZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFVsRlZSbEpNUlZaQ1VYcHNRMHhGWkVKUlZXTnpVbFZHUWxKVGVFUlJWVVpFVEVVNVFsRlZPSE5STUVaQ1VYbDRTRkZWUmtoTVJVNUNVVlZOYzFvd1NrSlJWMlJEVEVWT1FsRlZUWE5TVlVaRVltdE5jMUV3UmtKUmVYaEVVVlZHUkV4RlZrSlJWVlZ6VVRCR1FsRjVlRkJSVlVaUVRFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SMFpDVVZkRmMxSlZSa0pTVTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUkdKRlRYTlJNRVpDVVhwMFNsRlZUa2xNUlU1Q1VWVk5OMU5WUmtSVWVYaEtVVlZHU2s4eFJrSlJNV2R6VTFWR1FsTlRlRVJSVlVaRVRFVXhRbEZWTUhOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVmtKUlZWVnpVVEJHUWxGNWVFWlJWVVpHVEVWV1FsRlZWVGRYVlVaRVpXdEpjMVJWUmtKVVUzaE9VVlZHVGt4RlpFSlJWV056VVRCR1FsRjVlRVJSVlVaRVRFVjBRbEZWYzNOVFZVWkNVMU40VWxGVlJsSk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJYUkNVVlZ6YzFOVlJrSlRVM2hVVVZWR1ZFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJNMUpHVEVVeFFsRlZNSE5VVlVaQ1ZGTjRTRkZWUmtoTVJVNUNVVlZOYzFFd1JrSlJlWGhNVVZWR1RFeEZiRUpSVld0elZWVkdRbFZUZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRXhSVlVaTVRFVnNRbEZWYTNOVk1FWkNWWGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVGpCU1UzaEtVVlZHU2t4Rk1VSlJWVEJ6VTFWR1FsTlRlRTVSVlVaT1R6SmtRMUZWUmtaTVJUbENVVlU0YzFSVlJrSlVVM2hJVVZWR1NFeEZNVUpSVlRCelVUQkdRbEY2ZEZwUlZVMHpVWGw0U2xGVlJrcE1SVTVDVVZWTmMxRXdSa0pSZVhoTVVWVkdURXhGYkVKUlZXdHpWVlZHUWxWVGVFcFJWVVpLVEVWT1FsRlZUWE5STUVaQ1VYbDRURkZWUmt4TVJXeENVVlZyYzFWVlJrSlZWSFJ1VVd0R1FsSlRlRkJSVlVaUVRFVk9RbEZWVFhOUk1FWkNVWGw0VkZGVlJsUk1SV1JDVVZWamMxRXdSa0pSZVhoRVVWVkdSRXhHVGtKUlZrMXpVVEJHUWxGNmRGcFJWVTV4VW1sNFRsRlZSazVNUldSQ1VWVmpjMUl3UmtKU2VYaFNVVlZHVWt4RlRrSlJWVTF6VmxWR1FsWlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZWTmMxSXdSa0pTZVhoU1VWVkdVa3hGVGtKUlZVMXpWbFZHUWxaVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWTk5WSlRlRXBSVlVaS1RFVmtRbEZWWTNOVFZVWkNVMU40UkZGVlJrUlBNbVJEVVZWR1JreEZPVUpSVlRoelVqQkdRbEo1ZUVSUlZVWkVUM3AwYmxGclJrUmpSVWx6VkRCR1FsUjVlRVJSVlVaRVRFVk9RbEZWVFhOVk1FWkNWWGw0U0ZGVlJraE1SVTVDVVZWTmMxRXdSa0pSZVhoVVVWVkdWRXhGVGtKUlZVMDNWVlZHUkdSclRYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMU5WUmtSVGFYaEVVVlZHUkU4d1RrSlJNRkUzVVZWR1JGSkRlRTVSVlVaT1RFVk9RbEZWVFhOU01FWkNVbmw0UmxGVlJrWlBNR3hDVVRGbmMxUlZSa0pVVTNoU1VWVkdVa3hGWkVKUlZXTnpVMVZHUWxOVGVIQlJhMFpDWVZWSmMxRXdSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMXpVVEJHUWxGNmRFcFJWVTUxVWtONFRsRlZSazVNUmtaQ1VWWkZjMUl3UmtKU2VYaEtVVlZHU2t4R1JrSlJWa1Z6VWxWR1FsSlRlRVJSVlVaRVR6QnNRbEV5YUVSTVJURkNVVlV3YzFWVlJrSlZVM2hJVVZWR1NFeEZiRUpSVld0ellWVktRbEZYYkVOTVJVNUNVVlZOYzFWVlJrSlZVM2hFVVZWR1JFeEZUa0pSVlUwM1UxVkdSR0ZyVVhOVVZVWkNWRk40VWxGVlJsSk1SV1JDVVZWamMxTlZSa0pUVTNoc1VWVkdiRXhGVGtKUlZVMXpWbFZHUWxaVGVFWlJWVVpHVEVaR1FsRldSWE5STUVaQ1VYbDRSRkZWUmtSUE1HeENVWHBPUlV4Rk1VSlJWVEJ6VlZWR1FsVlRlRWhSVlVaSVRFVnNRbEZWYTNOYVZVWkNXbE40UkZGVlJrUk1Sa1pDVVZaRmMxSlZSa0pTVTNoU1VWVkdVa3hGVGtKUlZVMXpVVEJHUWxGNmRFcFJWVTQyVWtONFRsRlZSazVNUmtaQ1VWWkZjMUl3UmtKU2VYaEtVVlZHU2t4R1ZrSlJWbFZ6VWxWR1FsSlRlRVJSVlVaRVR6QnNRbEV5ZUVSTVJURkNVVlV3YzFWVlJrSlZVM2hJVVZWR1NFeEZiRUpSVld0elZEQkdRbFI1ZUVaUlZVWkdURVZPUWxGVlRUZFRWVVpFVERCSmMxUXdSa0pVZVhoRVVWVkdSRXhGVmtKUlZWVnpVVEJHUWxGNWVGaFJWVVpZVEVWT1FsRlZUWE5TVlVaQ1VsTjRTRkZWUmtoTVJWWkNVVlZWTjFWVlJrUk9NRWx6VTFWR1FsTlRlRVJSVlVaRVRFVTVRbEZWT0hOUk1FWkNVWGw0Y0ZKVlJrSmhWVlZ6VVRCR1FsRjZkRnBSVlVaR1RFVTVRbEZWT0RkVlZVWkVaVVZaYzFWVlJrSlZVM2hFVVZWR1JFeEZkRUpSVlhOelVsVkdRbEpUZUVSUlZVWkVUekZHUWxFeWNFTk1Sa1pDVVZaRmMxRXdSa0pSZVhoTVVWVkdURXhGVmtKUlZWVnpVVEJHUWxGNmRGSlJWVTV4VVdsNFRGRlZSa3hNUlU1Q1VWVk5jMVpWUmtKV1UzaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JHSkZTWE5VVlVaQ1ZGTjRSRkZWUmtSTVJrWkNVVlpGYzFFd1JrSlJlWGhPVVZWR1RreEZWa0pSVlZWelVUQkdRbEY2ZEVwUlZVMTRVV2w0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk9TVXhHUmtKUlZrVnpVVEJHUWxGNWVGQlJWVVpRVEVWa1FsRlZZM05UVlVaQ1UxTjRSRkZWUmtSTVJWWkNVVlZWTjFWVlJrUmxhMGx6VlZWR1FsVlRlRVJSVlVaRVRFVnNRbEZWYTNOU1ZVWkNVbE40UkZGVlJrUlBNVVpDVVRKb1EweEZNVUpSVlRCelVUQkdRbEY1ZUVwUlZVWktURVZPUWxGVlRYTlRWVVpDVTFONFJsRlZSa1pNUldSQ1VWVmpjMUpWUmtKU1ZIUmFVVlZPTUZGcGVGSlJWVVpTVEVWT1FsRlZUWE5aVlVaQ1dWTjRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSZW1SRFRFWkdRbEZXUlhOUk1FWkNVWGw0U2xGVlJrcE1SVlpDVVZWVmMxRXdSa0pSZW5SU1VWVk9jVkZwZUVSUlZVWkVURVZXUWxGVlZYTlJNRVpDVVhsNFJGRlZSa1JNUlZaQ1VWVlZOMWRWUmtSVWFYaE1VVlZHVEV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh4YkVKUk0zQkRURVpHUWxGV1JYTlJNRVpDVVhsNFRsRlZSazVNUlZaQ1VWVlZjMUV3UmtKUmVuUlNVVlZPZFZGcGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBTbEZWVGt0TVJVNUNVVlZOYzFFd1JrSlJlblJLVVZWT1IweEdSa0pSVmtWelVUQkdRbEY1ZUZCUlZVWlFURVZrUWxGVlkzTlNNRVpDVW5sNFJsRlZSa1pQTVVaQ1VUTmFRMHhGTVVKUlZUQnpVVEJHUWxGNWVGcFJWVVphVEVWV1FsRlZWWE5STUVaQ1VYcDBTbEZWVGpKUmFYaEVVVlZHUkV4RlRrSlJWVVUzVTFWR1JGSkRlRTVSVlVaT1RFVk9RbEZWVFhOVlZVWkNWVk40U0ZGVlJraE1SV1JDVVZWamMxSlZSa0pTVkhSU1VWVk9NRkZwZUZKUlZVWlNURVZPUWxGVlRYTlRWVVpDVTFONFJsRlZSa1pNUlU1Q1VWVk5OMVZWUmtSaFJVbHpWVlZHUWxWVGVFUlJWVVpFVEVWc1FsRlZhM05TVlVaQ1VsTjRSRkZWUmtSUE1HeENVVEp3UTB4RlRrSlJWVTF6VVRCR1FsRlVkRXBSVlU1RlRFVXhRbEZWTUhOUk1FWkNVWGw0VkZGVlJsUk1SV1JDVVZWamMxSXdSa0pTZVhoR1VWVkdSazh4UmtKUk0xcERURVYwUWxGVmMzTlJNRVpDVVhsNGFGRlZSbWhNUlU1Q1VWVk5jMUV3UmtKUmVuUktVVlZPTUZGcGVFUlJWVVpFVEVWT1FsRlZSVGRUVlVaRVVrTjRTbEZWUmtwTVJUbENVVlU0YzFJd1JrSmtNRWx6VlRCR1FsVjVlRVJSVlVaRVR6QnNRbEY2WkVSTVJrWkNVVlpGYzFFd1JrSlJlWGhRVVZWR1VFeEZaRUpSVldOelUxVkdRbE5UZUVSUlZVWkVURVZXUWxGVlZUZFZWVVpFWld0SmMxVlZSa0pWVTNoRVVWVkdSRXhGYkVKUlZXdHpVbFZHUWxKVGVFUlJWVVpFVHpGR1FsRXlhRU5NUlRGQ1VWVXdjMUV3UmtKUmVYaFNVVlZHVWt4RlRrSlJWVTF6VTFWR1FsTlRlRVpSVlVaR1RFVjBRbEZWYzNOUk1FWkNVWGw0UmxGVlJrWlBNV3hDVVhwa1EweEdSa0pSVmtWelVUQkdRbEY1ZUdoUlZVWm9URVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JNUlU1Q1VWVk5OMWRWUmtST01FbHpWVlZHUWxWVGVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWT2VWRnBlRkJSVlVaUVRFVmtRbEZWWTNOVE1FWkNVM2w0UkZGVlJrUlBNVVpDVVRKd1EweEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlNWVVpDVWxSMFdsRlZUazlNUlhSQ1VWVnpjMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VlRCR1FsVjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xZFZSa1JsYTBselZWVkdRbFZUZUVSUlZVWkVURVZzUWxGVmEzTlNWVVpDVWxONFJGRlZSa1JQTVVaQ1VUSndRMHhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpCc1FsRXdiM05STUVaQ1VYbDRSRkZWUmtSUE1HeENVVEJaYzFOVlJrSlRVM2hTVVZWR1VreEZaRUpSV0d4RFRFWk9RbEZXVFhOUk1FWkNVWHAwU2xGVlRYWlJlWGhTVVZWR1VreEZUa0pSVlUxelZWVkdRbFZUZUVoUlZVWklURVZzUWxGVmEzTlJNRVpDVVhsNFJsRlZSa1pQTVVaQ1VYcEdRMHhHUmtKUlZrVnpVVEJHUWxGNWVFcFJWVVpLVEVWV1FsRlZWWE5STUVaQ1VYcDBVbEZWVG05UmFYaE9VVlZHVGt4RlRrSlJWVTF6V1ZWR1FsbFRlRVJSVlVaRVRFVnNRbEZWYTNOU1ZVWkNVbE40VEZGVlJreE1SVTVDVVZWTmMxSlZSa0pTVkhSYVVWVk9jMUY1ZUZKUlZVWlNURVZrUWxGVlkzTlRWVVpDVTFONFVsRlZSbEpNUlU1Q1VWVk5jMU13UmtKVGVYaEVVVlZHUkV4RlRrSlJWVTAzVjFWR1JFd3dTWE5VVlVaQ1ZGTjRUbEZWUms1TVJXUkNVVlZqYzFFd1JrSlJlWGhRVVZWR2RGRnBlRVpSVlVaR1RFVldRbEZWVlRkYU1FcENVVE5TUkV4RmJFSlJWV3R6VVRCR1FsRjVlRkpSVlVaU1RFVldRbEZWVlRkaU1FcENVVEpSYzFSVlJrSlVVM2hNVVZWR1RFeEZUa0pSVlUwM1lWVktRbEV4YnpkYU1FcENVVEJSYzFSVlJrSlVVM2hHVVZWR1JreEZNVUpSVlRCelVsVkdRbEpUZUZCUlZVWlFURVZXUWxGVlZYTlNNRVpDVW5sNFVsRlZSbEpNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVG5WU1EzaFNVVlZHVWt4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVXhRbEZWTUhOU1ZVWkNVbE40VUZGVlJsQk1SVTVDVVZWTmMxRXdSa0pSZW5SYVVWVk9iMUY1ZUVSUlZVWkVURVZPUWxGVlJUZFhWVVpFVWtONFVsRlZSbEpNUlU1Q1VWVk5jMVJWUmtKVVUzaElVVlZHU0V4Rk1VSlJWVEJ6VVRCR1FsRjZkRnBSVlU0MlVXbDRUbEZWUms1TVJWWkNVVlZWYzFFd1JrSlJlblJTVVZWT1YweEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVZPUWxGVlRYTlNWVVpDVWxSMFdsRlZUazlNUld4Q1VWVnJjMVF3UmtKVWVYaEVVVlZHUkV4RmJFSlJWV3R6VlZWR1FsVlVkRzVSYTBaRVpHdEpjMU13UmtKVGVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVQzcDBibEZyUmtaV1EzaE1VVlZHVEV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFWk9RbEZXVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh4YkVKUmVrWkRURVZzUWxGVmEzTlVNRVpDVkhwMGJsRnJSa1JXYVhoU1VWVkdVa3hGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVVNVFsRlZPSE5STUVaQ1VYbDRSRkZWUmtSUGVuUnVVV3RHUm1SclNYTlVWVVpDVkZONFRGRlZSa3hNUlU1Q1VWVk5OMVZWUmtSYVEzaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkRXBSVlU1TFRFVk9RbEZWVFhOUk1FWkNVVlIwU2xGVlZrVk1Sa1pDVVZaRmMxRXdSa0pSZVhoS1VWVkdTa3hGVmtKUlZWVnpVVEJHUWxGNmRFcFJWVlp2VVdsNFRsRlZSazVNUlU1Q1VWVk5jMU5WUmtKVFUzaEdVVlZHUmt4RlRrSlJWVTAzVTFWR1JGcERlRTVSVlVaT1RFVk9RbEZWVFhOVlZVWkNWVk40UkZGVlJrUk1SV1JDVVZWamMxUlZSa0pVVTNoRVVWVkdSRTh3UmtKUmVrNURURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JKYmpBOUlsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRk5CUVZNc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEpRVU5hTEU5QlFVOHNVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dERRVU4wUXp0QlFVTkVMRk5CUVZNc1JVRkJSU3hEUVVGRExFOUJRVThzUlVGQlJUdEpRVU5xUWl4UFFVRlBMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdRMEZETVVNN1FVRkRSQ3hUUVVGVExFZEJRVWNzUTBGQlF5eFRRVUZUTEVWQlFVVXNUMEZCVHl4RlFVRkZMRVZCUVVVc1JVRkJSU3hUUVVGVExFVkJRVVU3U1VGRE5VTXNUVUZCVFN4RlFVRkZMRWRCUVVjc1JVRkJSU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBsQlEzQkNMRVZCUVVVc1EwRkJReXhUUVVGVExFZEJRVWNzVTBGQlV5eERRVUZETzBsQlEzcENMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eEpRVUZKTEVsQlFVa3NRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5zUXl4SlFVRkpMRVZCUVVVN1VVRkRSaXhGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEVWQlFVVXNRMEZCUXp0SlFVTm1MRWxCUVVrc1UwRkJVenRSUVVOVUxFOUJRVThzUTBGQlF5eEZRVUZGTEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNN1NVRkRNMElzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZEWWp0QlFVTkVMRk5CUVZNc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeEhRVUZITEVWQlFVVTdTVUZEY0VJc1IwRkJSeXhEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1EwRkROMEk3UVVGRFJDeFRRVUZUTEVsQlFVa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRk8wbEJRM0JDTEVkQlFVY3NRMEZCUXl4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzBOQlF6RkNPMEZCUTBRc1UwRkJVeXhOUVVGTkxFTkJRVU1zUjBGQlJ5eEZRVUZGTzBsQlEycENMRWRCUVVjc1EwRkJReXhUUVVGVExFZEJRVWNzUlVGQlJTeERRVUZETzBOQlEzUkNPMEZCUTBRc1UwRkJVeXhQUVVGUExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVWQlFVVXNSVUZCUlR0SlFVTjBRaXhIUVVGSExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1QwRkJUeXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETzBOQlEzSkRPMEZCUTBRc1UwRkJVeXhOUVVGTkxFTkJRVU1zUlVGQlJTeEZRVUZGTzBsQlEyaENMRTFCUVUwc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4TlFVRk5MRVZCUVVVc1JVRkJSU3hEUVVGRExFTkJRVU03UTBGRGRrTTdRVUZEUkN4TlFVRk5MR2xDUVVGcFFpeERRVUZETzBsQlEzQkNMRmRCUVZjc1EwRkJReXhIUVVGSExFVkJRVVU3VVVGRFlpeEpRVUZKTEVOQlFVTXNSMEZCUnl4SFFVRkhMRWRCUVVjc1EwRkJRenRSUVVObUxFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NSVUZCUlN4RFFVRkRPMHRCUTI1Q08wbEJRMFFzU1VGQlNTeEpRVUZKTEVkQlFVYzdVVUZEVUN4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU03VVVGRFpDeFBRVUZQTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU03UzBGRE4wSTdTVUZEUkN4SlFVRkpMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVU3VVVGRFdDeEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dFJRVU14UWl4SlFVRkpMRU5CUVVNc1lVRkJZU3hGUVVGRkxFTkJRVU03UzBGRGVFSTdTVUZEUkN4SlFVRkpMRlZCUVZVc1IwRkJSenRSUVVOaUxFOUJRVThzU1VGQlNTeERRVUZETEVkQlFVY3NSMEZCUnl4dlFrRkJiMElzUTBGQlF6dExRVU14UXp0SlFVTkVMRWRCUVVjc1EwRkJReXhIUVVGSExFVkJRVVU3VVVGRFRDeFBRVUZQTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0TFFVTjBRenRKUVVORUxFZEJRVWNzUTBGQlF5eEhRVUZITEVWQlFVVTdVVUZEVEN4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0UlFVTnlRaXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVOQlFVTTdTMEZEZUVJN1NVRkRSQ3hoUVVGaExFTkJRVU1zUjBGQlJ5eEZRVUZGTzFGQlEyWXNTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8xRkJRMlFzU1VGQlNTeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETzFsQlF6TkNMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdTMEZEY2tJN1NVRkRSQ3hOUVVGTkxFTkJRVU1zUjBGQlJ5eEZRVUZGTzFGQlExSXNTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8xRkJRMlFzVFVGQlRTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdVVUZEYkVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF6dFpRVU5NTEU5QlFVOHNTMEZCU3l4RFFVRkRPMUZCUTJwQ0xFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU40UWl4SlFVRkpMRU5CUVVNc1lVRkJZU3hGUVVGRkxFTkJRVU03VVVGRGNrSXNUMEZCVHl4SlFVRkpMRU5CUVVNN1MwRkRaanRKUVVORUxFdEJRVXNzUjBGQlJ6dFJRVU5LTEZsQlFWa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzFGQlEzcERMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF6dExRVU5xUWp0SlFVTkVMRTFCUVUwc1IwRkJSenRSUVVOTUxFMUJRVTBzU1VGQlNTeEhRVUZITEZsQlFWa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzFGQlEyNUVMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVU3V1VGRFVDeEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRVZCUVVVc1EwRkJRenRUUVVOdVFqdGhRVU5KTzFsQlEwUXNTVUZCU1R0blFrRkRRU3hOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8yZENRVU01UWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zU1VGQlNTeFBRVUZQTEVOQlFVTXNTVUZCU1N4UlFVRlJMRU5CUVVNc1JVRkJSVHR2UWtGRE9VUXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhGUVVGRkxFTkJRVU03YVVKQlEyNUNPM0ZDUVVOSk8yOUNRVU5FTEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRE8ybENRVU55UWp0aFFVTktPMWxCUTBRc1QwRkJUeXhEUVVGRExFVkJRVVU3WjBKQlEwNHNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhGUVVGRkxFTkJRVU03WVVGRGJrSTdVMEZEU2p0UlFVTkVMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUTBGQlF6dExRVU40UWp0SlFVTkVMR0ZCUVdFc1IwRkJSenRSUVVOYUxFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzFGQlEzaERMRmxCUVZrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRMUVVNdlF6dERRVU5LTzBGQlEwUXNUVUZCVFN4bFFVRmxMRU5CUVVNN1NVRkRiRUlzVjBGQlZ5eERRVUZETEZGQlFWRXNSVUZCUlN4UFFVRlBMRVZCUVVVc1QwRkJUeXhIUVVGSExFMUJRVTBzUzBGQlN5eERRVUZETEVWQlFVVTdVVUZEYmtRc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eEZRVUZGTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNN1VVRkRla0lzU1VGQlNTeERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRU5CUVVNc1VVRkJVU3hIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETzFGQlF5OUNMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzUlVGQlJTeERRVUZETEZGQlFWRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1EwRkJRenRSUVVOeVF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4SFFVRkhMRVZCUVVVc1EwRkJReXhSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZETEVOQlFVTTdVVUZEZUVNc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTTdVVUZEZGtJc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTTdVVUZEZGtJc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETzFGQlEyeENMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTEUxQlFVMDdXVUZEZWtJc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xTkJRM1JETEVOQlFVTXNRMEZCUXp0TFFVTk9PMGxCUTBRc1NVRkJTU3hIUVVGSE8xRkJRMGdzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1RVRkJUU3hEUVVGRExFTkJRVU03VVVGRGVFSXNUVUZCVFN4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTTdVVUZEYUVNc1RVRkJUU3hGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXp0UlFVTnVRaXhOUVVGTkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdVVUZEV0N4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRGJFSXNTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFbEJRVWs3V1VGRGJFSXNUVUZCVFN4RlFVRkZMRWRCUVVjc1IwRkJSeXhEUVVGRExFbEJRVWtzUlVGQlJTeEZRVUZGTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwN1owSkJRM1JETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WVVGRE1VSXNRMEZCUXl4RFFVRkRPMWxCUTBnc1JVRkJSU3hEUVVGRExGZEJRVmNzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXp0VFFVTjBRaXhEUVVGRExFTkJRVU03VVVGRFNDeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1IwRkJSeXhGUVVGRkxFTkJRVU03UzBGRGVrSTdTVUZEUkN4SlFVRkpMRWRCUVVjN1VVRkRTQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenRMUVVNelFqdEpRVU5FTEZkQlFWY3NRMEZCUXl4SlFVRkpMRVZCUVVVN1VVRkRaQ3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMHRCUTNSQ08wTkJRMG83UVVGRFJDeE5RVUZOTEZGQlFWRXNRMEZCUXp0SlFVTllMRmRCUVZjc1EwRkJReXhUUVVGVExFZEJRVWNzVFVGQlRTeExRVUZMTEVOQlFVTXNSVUZCUlR0UlFVTnNReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRSUVVONlFpeEpRVUZKTEVOQlFVTXNSMEZCUnl4SFFVRkhMRVZCUVVVc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF6dFJRVU0xUWl4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExGTkJRVk1zUTBGQlF6dFJRVU42UWl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRGJFSXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFVkJRVVVzVFVGQlRUdFpRVU53UWl4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFTkJRVU03VTBGRGJFSXNRMEZCUXl4RFFVRkRPMHRCUTA0N1NVRkRSQ3hKUVVGSkxFZEJRVWM3VVVGRFNDeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dExRVU16UWp0SlFVTkVMRWxCUVVrc1IwRkJSenRSUVVOSUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRE8wdEJRek5DTzBOQlEwbzdRVUZEUkN4TlFVRk5MRlZCUVZVc1EwRkJRenRKUVVOaUxGZEJRVmNzUjBGQlJ6dFJRVU5XTEVsQlFVa3NRMEZCUXl4UlFVRlJMRWRCUVVjc1EwRkJReXhKUVVGSkxFdEJRVXNzUjBGQlJ5eERRVUZETzFGQlF6bENMRWxCUVVrc1EwRkJReXhKUVVGSkxFZEJRVWNzUlVGQlJTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPMUZCUTNoQ0xFbEJRVWtzUTBGQlF5eEZRVUZGTEVkQlFVY3NSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRE8wdEJRelZDTzBsQlEwUXNTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkJSVHRSUVVOU0xFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRE8xRkJRM2hDTEUxQlFVMHNSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU03VVVGRGJrSXNUVUZCVFN4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRE8xRkJRMWdzVFVGQlRTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRPMUZCUTJ4Q0xFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4SlFVRkpPMWxCUTJZc1RVRkJUU3hGUVVGRkxFZEJRVWNzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4VlFVRlZMRVZCUVVVc1JVRkJSU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTzJkQ1FVTTVReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMkZCUTNCQ0xFTkJRVU1zUTBGQlF6dFpRVU5JTEVWQlFVVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03VTBGRGRFSXNRMEZCUXl4RFFVRkRPMHRCUTA0N1NVRkRSQ3hKUVVGSkxFZEJRVWM3VVVGRFNDeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dExRVU16UWp0RFFVTktPMEZCUTBRc1RVRkJUU3hQUVVGUExFTkJRVU03U1VGRFZpeFhRVUZYTEVkQlFVYzdVVUZEVml4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU5vUWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zVDBGQlR5eExRVUZMTEVkQlFVY3NRMEZCUXp0UlFVTXZRaXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRSUVVONFFpeEpRVUZKTEVOQlFVTXNVVUZCVVN4SFFVRkhMRVZCUVVVc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4RFFVRkRPMUZCUTNKRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NSVUZCUlN4RFFVRkRMR0ZCUVdFc1EwRkJReXhEUVVGRE8xRkJRMnBETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZETzFGQlF6VkNMRTFCUVUwc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF6dFJRVU5zUWl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUlVGQlJTeE5RVUZOTEVsQlFVa3NRMEZCUXl4VlFVRlZMRVZCUVVVc1EwRkJReXhEUVVGRE8wdEJRMnhFTzBsQlEwUXNTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hIUVVGSExFVkJRVVU3VVVGRFpDeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dFJRVU40UWl4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETzFGQlF5OUNMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dFJRVU5xUWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU5vUWl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRGJFSXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFbEJRVWs3V1VGRGFFSXNUVUZCVFN4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzFsQlEzUkNMRTFCUVUwc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0WlFVTndRaXhOUVVGTkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1dVRkRjRUlzUTBGQlF5eERRVUZETEZOQlFWTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRMnhDTEVOQlFVTXNRMEZCUXl4VFFVRlRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5zUWl4UFFVRlBMRU5CUVVNc1EwRkJReXhGUVVGRkxFMUJRVTA3WjBKQlEySXNTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF6dG5Ra0ZEY2tJc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0blFrRkRia0lzU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4VFFVRlRMRU5CUVVNc1EwRkJRenRoUVVONFFpeERRVUZETEVOQlFVTTdXVUZEU0N4UFFVRlBMRU5CUVVNc1EwRkJReXhGUVVGRkxFMUJRVTA3WjBKQlEySXNTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF6dG5Ra0ZEY2tJc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXp0blFrRkRja0lzU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRoUVVOMFFpeERRVUZETEVOQlFVTTdXVUZEU0N4SlFVRkpMRU5CUVVNc1IwRkJSeXhGUVVGRkxGTkJRVk1zUTBGQlF5eERRVUZETzFsQlEzSkNMRWxCUVVrc1EwRkJReXhEUVVGRExFVkJRVVVzWTBGQll5eERRVUZETEVOQlFVTTdXVUZEZUVJc1NVRkJTU3hEUVVGRExFTkJRVU1zUlVGQlJTeGpRVUZqTEVOQlFVTXNRMEZCUXp0WlFVTjRRaXhIUVVGSExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTI1Q0xFZEJRVWNzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRia0lzU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4WlFVRlpMRU5CUVVNc1EwRkJRenRaUVVONFFpeFJRVUZSTEVOQlFVTXNWMEZCVnl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8xbEJRekZDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzFOQlEzaENMRU5CUVVNc1EwRkJRenRSUVVOSUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1MwRkRja0k3U1VGRFJDeEpRVUZKTEVkQlFVYzdVVUZEU0N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0TFFVTXpRanRKUVVORUxGVkJRVlVzUjBGQlJ6dFJRVU5VTEUxQlFVMHNUMEZCVHl4SFFVRkhMRVZCUVVVc1EwRkJRenRSUVVOdVFpeE5RVUZOTEZsQlFWa3NSMEZCUnl4RlFVRkZMRU5CUVVNN1VVRkRlRUlzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eExRVUZMTzFsQlEzcENMRWxCUVVrc1EwRkJReXhEUVVGRExGTkJRVk1zUTBGQlF5eFJRVUZSTEVOQlFVTXNVMEZCVXl4RFFVRkRPMmRDUVVNdlFpeFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8ybENRVU5zUWl4SlFVRkpMRU5CUVVNc1EwRkJReXhUUVVGVExFTkJRVU1zVVVGQlVTeERRVUZETEU5QlFVOHNRMEZCUXp0blFrRkRiRU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenM3WjBKQlJYQkNMRmxCUVZrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTJoRExFTkJRVU1zUTBGQlF6dFJRVU5JTEVsQlFVa3NXVUZCV1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFVkJRVVU3V1VGRGVrSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXcwUWtGQk5FSXNSMEZCUnl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEY2tVc1QwRkJUenRUUVVOV08xRkJRMFFzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRMUVVONFFqdEpRVU5FTEU5QlFVOHNRMEZCUXl4SFFVRkhMRVZCUVVVN1VVRkRWQ3hKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEZOQlFWTXNSMEZCUnl4SFFVRkhMRU5CUVVNN1MwRkROVUk3UTBGRFNqdEJRVU5FTEUxQlFVMHNVMEZCVXl4RFFVRkRPMGxCUTFvc1YwRkJWeXhEUVVGRExFMUJRVTBzUlVGQlJTeEpRVUZKTEVWQlFVVTdVVUZEZEVJc1NVRkJTU3hEUVVGRExFMUJRVTBzUjBGQlJ5eE5RVUZOTEVOQlFVTTdVVUZEY2tJc1NVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdTMEZEY0VJN1NVRkRSQ3hQUVVGUExFZEJRVWM3VVVGRFRpeEpRVUZKTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhKUVVGSkxFMUJRVTA3V1VGRE4wSXNUMEZCVHl4VFFVRlRMRU5CUVVNN1VVRkRja0lzVDBGQlR6dFpRVU5JTEUxQlFVMHNSVUZCUlN4SlFVRkpMRU5CUVVNc1RVRkJUVHRaUVVOdVFpeFBRVUZQTEVWQlFVVXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUE8xbEJRekZDTEZWQlFWVXNSVUZCUlN4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXM3VTBGRE9VSXNRMEZCUXp0TFFVTk1PME5CUTBvN1FVRkRSQ3hKUVVGSkxGRkJRVkVzUTBGQlF6dEJRVU5pTEVOQlFVTXNWVUZCVlN4UlFVRlJMRVZCUVVVN1NVRkRha0lzVTBGQlV5eExRVUZMTEVOQlFVTXNRMEZCUXl4RlFVRkZPMUZCUTJRc1RVRkJUU3hIUVVGSExFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVNeFFpeEpRVUZKTEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNN1dVRkRWaXhQUVVGUExGTkJRVk1zUTBGQlF6dFJRVU55UWl4UFFVRlBMRWxCUVVrc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzB0QlEzaENPMGxCUTBRc1VVRkJVU3hEUVVGRExFdEJRVXNzUjBGQlJ5eExRVUZMTEVOQlFVTTdTVUZEZGtJc1UwRkJVeXhIUVVGSExFTkJRVU1zUTBGQlF5eEZRVUZGTzFGQlExb3NTVUZCU1N4RFFVRkRMRU5CUVVNN1dVRkRSaXhQUVVGUExFVkJRVVVzUTBGQlF6dFJRVU5rTEU5QlFVOHNRMEZCUXl4RFFVRkRMRmRCUVZjc1JVRkJSU3hEUVVGRE8wdEJRekZDTzBsQlEwUXNVVUZCVVN4RFFVRkRMRWRCUVVjc1IwRkJSeXhIUVVGSExFTkJRVU03U1VGRGJrSXNVMEZCVXl4TFFVRkxMRWRCUVVjN1VVRkRZaXhQUVVGUExGRkJRVkVzUTBGQlF5eEpRVUZKTEVsQlFVa3NSVUZCUlN4RFFVRkRMRU5CUVVNN1MwRkRMMEk3U1VGRFJDeFJRVUZSTEVOQlFVTXNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJRenRKUVVOMlFpeFRRVUZUTEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVN1VVRkRjRUlzVDBGQlR5eEpRVUZKTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dExRVU55UXp0SlFVTkVMRkZCUVZFc1EwRkJReXhSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZETzBsQlF6ZENMRk5CUVZNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUlVGQlJUdFJRVU4wUWl4UFFVRlBMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXp0TFFVTnFSanRKUVVORUxGRkJRVkVzUTBGQlF5eFZRVUZWTEVkQlFVY3NWVUZCVlN4RFFVRkRPME5CUTNCRExFVkJRVVVzVVVGQlVTeExRVUZMTEZGQlFWRXNSMEZCUnl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRMmhETEZOQlFWTXNWMEZCVnl4RFFVRkRMRXRCUVVzc1JVRkJSU3hIUVVGSExFVkJRVVVzUzBGQlN5eEZRVUZGTEVsQlFVa3NSVUZCUlR0SlFVTXhReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4SFFVRkhMRWRCUVVjc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBsQlF5OURMRWxCUVVrc1MwRkJTeXhIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTnlRaXhKUVVGSkxGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEzaERMRWxCUVVrc1VVRkJVU3hIUVVGSExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOc1F5eEpRVUZKTEZGQlFWRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTNoRExFbEJRVWtzVTBGQlV5eEhRVUZITEZGQlFWRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU51UXl4TlFVRk5MRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdTVUZEYUVNc1NVRkJTU3hMUVVGTExFbEJRVWtzUlVGQlJUdFJRVU5ZTEV0QlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNN1NVRkRja0lzU1VGQlNTeExRVUZMTEVsQlFVa3NVVUZCVVN4SlFVRkpMRXRCUVVzc1NVRkJTU3hQUVVGUExFbEJRVWtzUzBGQlN5eEpRVUZKTEZOQlFWTXNSVUZCUlR0UlFVTTNSQ3hKUVVGSkxFTkJRVU1zZVVSQlFYbEVMRU5CUVVNc1EwRkJRenRSUVVOb1JTeExRVUZMTEVkQlFVY3NVVUZCVVN4RFFVRkRPMHRCUTNCQ08wbEJRMFFzU1VGQlNTeExRVUZMTEVsQlFVa3NUMEZCVHl4SlFVRkpMRXRCUVVzc1NVRkJTU3hUUVVGVExFVkJRVVU3VVVGRGVFTXNTVUZCU1R0WlFVTkJMRWxCUVVrc1EwRkJReXhSUVVGUkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVsQlFVa3NTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFdEJRVXNzUTBGQlF5eFRRVUZUTEVOQlFVTXNSVUZCUlR0blFrRkRMMFFzVFVGQlRTeEZRVUZGTEVOQlFVTTdZVUZEV2p0WlFVTkVMRTFCUVUwc1NVRkJTU3hIUVVGSExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkhMRVZCUVVVc1MwRkJTeXhGUVVGRkxGRkJRVkVzUlVGQlJTeFJRVUZSTEVWQlFVVXNVVUZCVVN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUjBGQlJ5eEZRVUZGTEZOQlFWTXNSVUZCUlN4RFFVRkRPMWxCUTJ4SExFOUJRVThzU1VGQlNTeERRVUZETzFOQlEyWTdVVUZEUkN4UFFVRlBMRVZCUVVVc1JVRkJSVHRaUVVOUUxFbEJRVWtzUTBGQlF5eHZSVUZCYjBVc1EwRkJReXhEUVVGRE8xbEJRek5GTEV0QlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNN1dVRkRha0lzVTBGQlV5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVTmtMRkZCUVZFc1IwRkJSeXhUUVVGVExFTkJRVU03V1VGRGNrSXNVVUZCVVN4SFFVRkhMRWRCUVVjc1EwRkJRenRaUVVObUxGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTTdVMEZEZUVJN1MwRkRTanRKUVVORUxFbEJRVWtzVTBGQlV5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhUUVVGVExFTkJRVU03VVVGRGJrTXNTVUZCU1N4RFFVRkRMSGRFUVVGM1JDeERRVUZETEVOQlFVTTdTVUZEYmtVc1NVRkJTU3hSUVVGUkxFbEJRVWtzVTBGQlV6dFJRVU55UWl4SlFVRkpMRU5CUVVNc2RVUkJRWFZFTEVOQlFVTXNRMEZCUXp0SlFVTnNSU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXp0UlFVTm9RaXhKUVVGSkxFTkJRVU1zYzBSQlFYTkVMRU5CUVVNc1EwRkJRenRKUVVOcVJTeEpRVUZKTEZGQlFWRXNTVUZCU1N4VFFVRlRPMUZCUTNKQ0xFbEJRVWtzUTBGQlF5eDFSRUZCZFVRc1EwRkJReXhEUVVGRE8wbEJRMnhGTEZOQlFWTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1NVRkRaQ3hSUVVGUkxFZEJRVWNzVTBGQlV5eERRVUZETzBsQlEzSkNMRkZCUVZFc1IwRkJSeXhUUVVGVExFTkJRVU03U1VGRGNrSXNVVUZCVVN4SFFVRkhMRk5CUVZNc1EwRkJRenRKUVVOeVFpeE5RVUZOTEVsQlFVa3NSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlJ5eEZRVUZGTEV0QlFVc3NSVUZCUlN4UlFVRlJMRVZCUVVVc1VVRkJVU3hGUVVGRkxGRkJRVkVzUlVGQlJTeFJRVUZSTEVWQlFVVXNVMEZCVXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hIUVVGSExFVkJRVVVzVTBGQlV5eEZRVUZGTEVOQlFVTTdTVUZETlVjc1QwRkJUeXhKUVVGSkxFTkJRVU03UTBGRFpqdEJRVU5FTEZOQlFWTXNaVUZCWlN4RFFVRkRMRXRCUVVzc1JVRkJSVHRKUVVNMVFpeE5RVUZOTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNN1NVRkRhRUlzVFVGQlRTeEhRVUZITEVkQlFVY3NRMEZCUXl4RFFVRkRMRWRCUVVjc1JVRkJSU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVNN1NVRkRPVU1zVFVGQlRTeFpRVUZaTEVkQlFVY3NRMEZCUXl4RFFVRkRMRkZCUVZFc1IwRkJSeXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEZGQlFWRXNSVUZCUlN4SFFVRkhMRWRCUVVjc1EwRkJRenRKUVVNNVJDeE5RVUZOTEV0QlFVc3NSMEZCUnl4TFFVRkxMRWRCUVVjc1NVRkJTU3hIUVVGSExFZEJRVWNzUjBGQlJ5eEpRVUZKTEVkQlFVY3NSMEZCUnl4RFFVRkRPMGxCUXpsRExFMUJRVTBzVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zUTBGQlF5eExRVUZMTEVWQlFVVXNVVUZCVVN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRkZCUVZFc1NVRkJTU3hEUVVGRExFVkJRVVVzVVVGQlVTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1VVRkJVU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRjRWdzVDBGQlR5eEZRVUZGTEV0QlFVc3NSVUZCUlN4TlFVRk5MRVZCUVVVc1EwRkJRenREUVVNMVFqdEJRVU5FTEVsQlFVa3NUVUZCVFN4RFFVRkRPMEZCUTFnc1EwRkJReXhWUVVGVkxFMUJRVTBzUlVGQlJUdEpRVU5tTEVsQlFVa3NVVUZCVVN4SFFVRkhMRXRCUVVzc1EwRkJRenRKUVVOeVFpeFRRVUZUTEVsQlFVa3NSMEZCUnp0UlFVTmFMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTEUxQlFVMDdXVUZETlVJc1VVRkJVU3hIUVVGSExFbEJRVWtzUTBGQlF6dFRRVU51UWl4RFFVRkRMRU5CUVVNN1MwRkRUanRKUVVORUxFMUJRVTBzUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRPMGxCUTI1Q0xGTkJRVk1zU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4TlFVRk5MRWRCUVVjc1RVRkJUU3hIUVVGSExFVkJRVVVzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSVHRSUVVNMVJDeEpRVUZKTEVOQlFVTXNVVUZCVVR0WlFVTlVMRTlCUVU4c1MwRkJTeXhEUVVGRE8xRkJRMnBDTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRE8xbEJRMklzVVVGQlVTeEZRVUZGTEZGQlFWRTdXVUZEYkVJc1MwRkJTeXhGUVVGRkxEaERRVUU0UXp0WlFVTnlSQ3hoUVVGaExFVkJRVVVzUTBGQlF5d3dSRUZCTUVRc1EwRkJRenRUUVVNNVJTeERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTVHRaUVVOVUxFMUJRVTBzUlVGQlJTeERRVUZETzFsQlExUXNTVUZCU1N4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHVkJRV1VzUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4SFFVRkhMRVZCUVVVN1owSkJRemRETEUxQlFVMHNRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJRenRaUVVOMFFpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMR1ZCUVdVc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4VlFVRlZMRXRCUVVzN1owSkJRek5FTEVsQlFVa3NWVUZCVlR0dlFrRkRWaXhOUVVGTkxFTkJRVU1zVVVGQlVTeEZRVUZGTEVOQlFVTTdPMjlDUVVWc1FpeE5RVUZOTEVOQlFVTXNVMEZCVXl4RlFVRkZMRU5CUVVNN1lVRkRNVUlzUTBGQlF5eERRVUZETzFOQlEwNHNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFbEJRVWs3V1VGRFZpeExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1UwRkRXaXhEUVVGRExFTkJRVU03VVVGRFNDeFBRVUZQTEVsQlFVa3NRMEZCUXp0TFFVTm1PMGxCUTBRc1RVRkJUU3hEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdTVUZEYmtJc1UwRkJVeXhaUVVGWkxFZEJRVWM3VVVGRGNFSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhsUVVGbExFVkJRVVVzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0TFFVTjZRenRKUVVORUxFMUJRVTBzUTBGQlF5eFpRVUZaTEVkQlFVY3NXVUZCV1N4RFFVRkRPMGxCUTI1RExFMUJRVTBzUTBGQlF5eFJRVUZSTEVkQlFVY3NUVUZCVFN4SFFVRkhMRU5CUVVNN1NVRkROVUlzVFVGQlRTeERRVUZETEZOQlFWTXNSMEZCUnl4TlFVRk5MRWRCUVVjc1EwRkJRenRKUVVNM1FpeFRRVUZUTEZGQlFWRXNRMEZCUXl4TlFVRk5MRVZCUVVVc1UwRkJVeXhIUVVGSExFTkJRVU1zUzBGQlN5eExRVUZMTEVkQlFVY3NSVUZCUlN4TFFVRkxMRWRCUVVjc1EwRkJReXhEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTzFGQlEzUkZMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETEZsQlFWa3NRMEZCUXl4SFFVRkhMRU5CUVVNN1dVRkRhRU1zWVVGQllTeEZRVUZGTEUxQlFVMDdVMEZEZUVJc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVsQlFVa3NVMEZCVXl4RFFVRkRMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1NVRkJTU3hUUVVGVExFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhQUVVGUExFVkJRVVVzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeEhRVUZITEVsQlFVa3NTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0TFFVTjJTanRKUVVORUxFMUJRVTBzUTBGQlF5eFJRVUZSTEVkQlFVY3NVVUZCVVN4RFFVRkRPMGxCUXpOQ0xFRkJUMEVzVTBGQlV5eFJRVUZSTEVOQlFVTXNUVUZCVFN4RlFVRkZMRXRCUVVzc1JVRkJSU3hUUVVGVExFZEJRVWNzUTBGQlF5eE5RVUZOTEV0QlFVc3NSMEZCUnl4RlFVRkZMRXRCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU1zUzBGQlN5eEhRVUZITEVWQlFVVTdVVUZET1VVc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4RFFVRkRMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU03V1VGRGRrTXNZVUZCWVN4RlFVRkZMRTFCUVUwN1dVRkRja0lzUzBGQlN5eEZRVUZGTEV0QlFVczdXVUZEV2l4cFFrRkJhVUlzUlVGQlJTeHRRa0ZCYlVJN1UwRkRla01zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWxCUVVrc1UwRkJVeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVc1IwRkJSeXhKUVVGSkxFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03UzBGRGFFWTdTVUZEUkN4VFFVRlRMR0ZCUVdFc1EwRkJReXhMUVVGTExFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNTMEZCU3l4TFFVRkxMRWRCUVVjc1JVRkJSU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZPMUZCUXpGRkxFMUJRVTBzVFVGQlRTeEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNN1VVRkROVUlzVFVGQlRTeFRRVUZUTEVkQlFVY3NSMEZCUnl4SFFVRkhMRXRCUVVzc1EwRkJReXhWUVVGVkxFZEJRVWNzUjBGQlJ5eERRVUZETzFGQlF5OURMRTFCUVUwc1YwRkJWeXhIUVVGSExGTkJRVk1zUjBGQlJ5eExRVUZMTEVOQlFVTTdVVUZEZEVNc1VVRkJVU3hEUVVGRExFMUJRVTBzUlVGQlJTeFhRVUZYTEVWQlFVVXNTMEZCU3l4SlFVRkpPMWxCUTI1RExFMUJRVTBzVFVGQlRTeEhRVUZITEZGQlFWRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnlReXhKUVVGSkxFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlR0blFrRkRaaXhMUVVGTExFTkJRVU1zYzBaQlFYTkdMRU5CUVVNc1EwRkJRenRuUWtGRE9VWXNUMEZCVHp0aFFVTldPMWxCUTBRc1RVRkJUU3hWUVVGVkxFZEJRVWNzVTBGQlV5eEhRVUZITEU5QlFVOHNTVUZCU1N4TlFVRk5MRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGRFUXNVVUZCVVN4RFFVRkRMRTFCUVUwc1JVRkJSU3hWUVVGVkxFVkJRVVVzUzBGQlN5eEpRVUZKTzJkQ1FVTnNReXhKUVVGSkxGRkJRVkVzUjBGQlJ5eEZRVUZGTEVOQlFVTTdaMEpCUTJ4Q0xFMUJRVTBzUzBGQlN5eEhRVUZITEV0QlFVc3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF5eExRVUZMTzI5Q1FVTnNReXhMUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVTdkMEpCUTJwRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN2IwSkJRMjVDTEVsQlFVa3NTVUZCU1N4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExGRkJRVkVzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8yOUNRVU4wUkN4UFFVRlBMRmRCUVZjc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03YVVKQlEycEVMRU5CUVVNc1EwRkJRenRuUWtGRFNDeEpRVUZKTEZGQlFWRXNRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJRenR2UWtGRGJrSXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXpzN2IwSkJSVE5DTEZOQlFWTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRoUVVONFFpeEZRVUZGTEVOQlFVTXNTVUZCU1N4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFRRVU55UWl4RlFVRkZMRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0TFFVTnlRanRKUVVORUxFMUJRVTBzUTBGQlF5eGhRVUZoTEVkQlFVY3NZVUZCWVN4RFFVRkRPMGxCUTNKRExGTkJRVk1zVlVGQlZTeERRVUZETEV0QlFVc3NSVUZCUlN4VFFVRlRMRWRCUVVjc1RVRkJUU3hIUVVGSExFVkJRVVVzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSVHRSUVVOc1JTeEpRVUZKTEVkQlFVY3NSMEZCUnl4SlFVRkpMRWRCUVVjc1JVRkJSU3hEUVVGRE8xRkJRM0JDTEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhKUVVGSk8xbEJRMllzVFVGQlRTeE5RVUZOTEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU03V1VGRE9VSXNTVUZCU1N4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFMUJRVTBzUTBGQlF6dG5Ra0ZEWml4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenM3WjBKQlJYaENMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRUUVVNMVFpeERRVUZETEVOQlFVTTdVVUZEU0N4SFFVRkhMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUzBGQlN5eEZRVUZGTEUxQlFVMHNTMEZCU3p0WlFVTXpRaXh0UWtGQmJVSXNRMEZCUXl4TlFVRk5MRVZCUVVVc1MwRkJTeXhGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVOQlFVTXNRMEZCUXp0VFFVTjRSQ3hEUVVGRExFTkJRVU03UzBGRFRqdEpRVU5FTEUxQlFVMHNRMEZCUXl4VlFVRlZMRWRCUVVjc1ZVRkJWU3hEUVVGRE8wbEJReTlDTEZOQlFWTXNiVUpCUVcxQ0xFTkJRVU1zVFVGQlRTeEZRVUZGTEV0QlFVc3NSVUZCUlN4VFFVRlRMRWRCUVVjc1RVRkJUU3hIUVVGSExFVkJRVVVzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSVHRSUVVOdVJpeEpRVUZKTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4SlFVRkpMRTFCUVUwc1EwRkJRenRaUVVONlF5eE5RVUZOTEV0QlFVc3NRMEZCUXp0UlFVTm9RaXhKUVVGSkxFMUJRVTBzUjBGQlJ5eEZRVUZGTEdGQlFXRXNSVUZCUlN4TlFVRk5MRVZCUVVVc1EwRkJRenRSUVVOMlF5eEpRVUZKTEVsQlFVa3NSMEZCUnp0WlFVTlFMR2RDUVVGblFpeEZRVUZGTEV0QlFVczdXVUZEZGtJc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SlFVRkpMR1ZCUVdVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFRRVU16UXl4RFFVRkRPMUZCUTBZc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4RFFVRkRMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zVFVGQlRTeEZRVUZGTEVsQlFVa3NRMEZCUXp0aFFVTXpSQ3hKUVVGSkxFTkJRVU1zUTBGQlF5eEpRVUZKTEZOQlFWTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0TFFVTTVRenREUVVOS0xFVkJRVVVzVFVGQlRTeExRVUZMTEUxQlFVMHNSMEZCUnl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRelZDTEUxQlFVMHNWVUZCVlN4SFFVRkhMRVZCUVVVc1EwRkJRenRCUVVOMFFpeE5RVUZOTEZGQlFWRXNRMEZCUXp0SlFVTllMRmRCUVZjc1EwRkJReXhOUVVGTkxFVkJRVVU3VVVGRGFFSXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhUUVVGVExFTkJRVU03VVVGRE1VSXNTVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhOUVVGTkxFTkJRVU03VVVGRGNrSXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8wdEJRMlk3U1VGRFJDeEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZPMUZCUTFZc1NVRkJTU3hQUVVGUE8xbEJRMUFzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRSUVVONlFpeEpRVUZKTEVOQlFVTXNUMEZCVHp0WlFVTlNMRWxCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkU3WjBKQlEySXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRjRUlzU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTFvc1NVRkJTU3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEUxQlFVMHNTVUZCU1N4RFFVRkRPMWxCUTNaQ0xFOUJRVThzUlVGQlJTeE5RVUZOTEVWQlFVVXNSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3huUWtGQlowSXNSVUZCUlN4RFFVRkRPMUZCUTNKRUxFRkJRMEVzVFVGQlRTeGpRVUZqTEVkQlFVY3NRMEZCUXl4SlFVRkpMRXRCUVVzc1NVRkJTU3hEUVVGRExFdEJRVXNzU1VGQlNTeFJRVUZSTzFsQlEyNUVMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4SFFVRkhMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeEpRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRPMUZCUTNwRkxFbEJRVWtzWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdFpRVU5vUXl4TlFVRk5MRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRVZCUVVVc1ZVRkJWU3hEUVVGRExFTkJRVU03V1VGRGFFUXNUVUZCVFN4UFFVRlBMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdXVUZEYkVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExGTkJRVk1zUjBGQlJ5eERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNN1dVRkRha1FzU1VGQlNTeERRVUZETEZGQlFWRXNSMEZCUnl4TlFVRk5MRU5CUVVNN1dVRkRka0lzVDBGQlR5eEZRVUZGTEUxQlFVMHNSVUZCUlN4UFFVRlBMRVZCUVVVc1EwRkJRenRUUVVNNVFqdGhRVU5KTzFsQlEwUXNUVUZCVFN4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RlFVRkZMRlZCUVZVc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5vUml4TlFVRk5MRTlCUVU4c1IwRkJSeXhaUVVGWkxFTkJRVU03V1VGRE4wSXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdXVUZEYWtRc1NVRkJTU3hEUVVGRExGRkJRVkVzUjBGQlJ5eE5RVUZOTEVOQlFVTTdXVUZEZGtJc1QwRkJUeXhGUVVGRkxFMUJRVTBzUlVGQlJTeFBRVUZQTEVWQlFVVXNRMEZCUXp0VFFVTTVRanRMUVVOS08wbEJRMFFzVFVGQlRTeERRVUZETEU5QlFVOHNSVUZCUlR0UlFVTmFMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVUdFpRVU5rTEUxQlFVMHNTMEZCU3l4RFFVRkRPMUZCUTJoQ0xFbEJRVWtzVDBGQlR5eERRVUZETEUxQlFVMHNTVUZCU1N4SlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFMUJRVTA3V1VGRGRFTXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRhRUlzU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF5eExRVUZMTzFsQlEyaERMRTFCUVUwc1RVRkJUU3hIUVVGSExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTXhRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVsQlFVa3NSVUZCUlN4RFFVRkRPMWxCUTNaQ0xFbEJRVWtzVFVGQlRTeEZRVUZGTzJkQ1FVTlNMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETzJkQ1FVTndRaXhOUVVGTkxFMUJRVTBzUjBGQlJ5eERRVUZETEVkQlFVY3NTVUZCU1N4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETzJkQ1FVTjJReXhKUVVGSkxFdEJRVXNzUTBGQlF5eFJRVUZSTEVWQlFVVTdiMEpCUTJoQ0xFMUJRVTBzVjBGQlZ5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRTlCUVU4c1JVRkJSU3hIUVVGSExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RlFVRkZMRWxCUVVrc1IwRkJSeXhEUVVGRE8yOUNRVU55UlN4TFFVRkxMRU5CUVVNc1VVRkJVU3hIUVVGSExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1JVRkJSU3hYUVVGWExFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdhVUpCUTJ4Rk8zRkNRVU5KTzI5Q1FVTkVMRXRCUVVzc1EwRkJReXhSUVVGUkxFZEJRVWNzVFVGQlRTeERRVUZETzJsQ1FVTXpRanRuUWtGRFJDeExRVUZMTEVOQlFVTXNTMEZCU3l4SFFVRkhMRTlCUVU4c1EwRkJRenRoUVVONlFqdHBRa0ZEU1R0blFrRkRSQ3hMUVVGTExFTkJRVU1zVTBGQlV5eEZRVUZGTEVOQlFVTTdaMEpCUTJ4Q0xFdEJRVXNzUTBGQlF5eFJRVUZSTEVkQlFVY3NRMEZCUXl4RFFVRkRPMmRDUVVOdVFpeExRVUZMTEVOQlFVTXNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJReXhMUVVGTExFbEJRVWtzVVVGQlVTeEhRVUZITEU5QlFVOHNSMEZCUnl4VFFVRlRMRU5CUVVNN1lVRkRMMFE3V1VGRFJDeExRVUZMTEVOQlFVTXNVMEZCVXl4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF6dFpRVU5vUXl4TFFVRkxMRU5CUVVNc1VVRkJVU3hIUVVGSExFZEJRVWNzUTBGQlF6dFpRVU55UWl4TFFVRkxMRU5CUVVNc1VVRkJVU3hIUVVGSExFbEJRVWtzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4UFFVRlBMRVZCUVVVc1IwRkJSeXhMUVVGTExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTTdXVUZETVVRc1MwRkJTeXhEUVVGRExFZEJRVWNzU1VGQlNTeFJRVUZSTEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFMUJRVTBzUjBGQlJ5eEhRVUZITEVkQlFVY3NSMEZCUnl4RFFVRkRMRWRCUVVjc1IwRkJSeXhEUVVGRE8xTkJReTlFTEVOQlFVTXNRMEZCUXp0UlFVTklMRTFCUVUwc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4TlFVRk5MRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1JVRkJSU3hEUVVGRExFbEJRVWtzVDBGQlR5eERRVUZETEVkQlFVY3NRMEZCUXl4aFFVRmhMRVZCUVVVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dExRVU0zUnp0SlFVTkVMRWxCUVVrc1IwRkJSenRSUVVOSUxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUzBGQlN6dFpRVU4yUWl4TlFVRk5MRTFCUVUwc1IwRkJSeXhEUVVGRExFTkJRVU1zUzBGQlN5eEpRVUZKTEZGQlFWRXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFdEJRVXNzU1VGQlNTeFRRVUZUTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVOMFJTeE5RVUZOTEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhKUVVGSkxGRkJRVkVzUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1NVRkJTU3hUUVVGVExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0WlFVTjBSU3hKUVVGSkxFMUJRVTBzU1VGQlNTeE5RVUZOTzJkQ1FVTm9RaXhQUVVGUExFMUJRVTBzUjBGQlJ5eE5RVUZOTEVOQlFVTTdXVUZETTBJc1NVRkJTU3hEUVVGRExFTkJRVU1zUzBGQlN5eEpRVUZKTEZGQlFWRXNTVUZCU1N4RFFVRkRMRU5CUVVNc1MwRkJTeXhKUVVGSkxGRkJRVkU3WjBKQlF6RkRMRTlCUVU4c1EwRkJReXhEUVVGRExGTkJRVk1zUjBGQlJ5eERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRPMWxCUTNKRExFMUJRVTBzUjBGQlJ5eEhRVUZITEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eEhRVUZITEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzFsQlF6bEZMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03WjBKQlExSXNUMEZCVHl4SFFVRkhMRU5CUVVNN08yZENRVVZZTEU5QlFVOHNRMEZCUXl4RFFVRkRMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVU1zVTBGQlV5eERRVUZETzFOQlEzaERMRU5CUVVNc1EwRkJRenRMUVVOT08wTkJRMG83UVVGRFJDeE5RVUZOTEVOQlFVTXNUVUZCVFR0SlFVTlVMRTFCUVUwc1VVRkJVU3hIUVVGSExFbEJRVWtzYVVKQlFXbENMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU03U1VGRGJrUXNUVUZCVFN4UlFVRlJMRWRCUVVjc1NVRkJTU3hSUVVGUkxFVkJRVVVzUTBGQlF6dEpRVU5vUXl4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxHbENRVUZwUWl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRE8wbEJRMnBFTEUxQlFVMHNVVUZCVVN4SFFVRkhMRWxCUVVrc1pVRkJaU3hEUVVGRExGVkJRVlVzUlVGQlJTeFJRVUZSTEVOQlFVTXNRMEZCUXp0SlFVTXpSQ3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEdWQlFXVXNRMEZCUXl4UlFVRlJMRVZCUVVVc1VVRkJVU3hEUVVGRExFTkJRVU03U1VGRGVrUXNUVUZCVFN4UlFVRlJMRWRCUVVjc1NVRkJTU3hWUVVGVkxFVkJRVVVzUTBGQlF6dEpRVU5zUXl4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxFOUJRVThzUlVGQlJTeERRVUZETzBsQlF5OUNMRTlCUVU4c1EwRkJReXhGUVVGRkxFTkJRVU1zVjBGQlZ5eERRVUZETEVWQlFVVXNUVUZCVFR0UlFVTXpRaXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEdsRlFVRnBSU3hEUVVGRE8xbEJRek5GTEU5QlFVODdVVUZEV0N4UlFVRlJMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU03VVVGRGFrSXNVVUZCVVN4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRE8xRkJRMnBDTEV0QlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkJRenRSUVVOc1FpeE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8wdEJRelZDTEVOQlFVTXNRMEZCUXp0SlFVTklMRkZCUVZFc1EwRkJReXhQUVVGUExFZEJRVWNzU1VGQlNTeEpRVUZKTzFGQlEzWkNMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dFJRVU5vUWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTzFsQlEzQkNMRkZCUVZFc1EwRkJReXhoUVVGaExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdXVUZETjBJc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFOQlEyNUNMRVZCUVVVc1EwRkJReXhKUVVGSk8xbEJRMG9zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU42UWl4UlFVRlJMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU03VTBGRGNrSXNRMEZCUXl4RFFVRkRPMHRCUTA0c1EwRkJRenRKUVVOR0xGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NUVUZCVFR0UlFVTnlRaXhOUVVGTkxFTkJRVU1zV1VGQldTeEZRVUZGTEVOQlFVTTdTMEZEZWtJc1EwRkJRenRKUVVOR0xFMUJRVTBzUTBGQlF5eFJRVUZSTEVkQlFVY3NUVUZCVFR0UlFVTndRaXhSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdVVUZEYUVJc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzB0QlEyNUNMRU5CUVVNN1NVRkRSaXhOUVVGTkxFTkJRVU1zVTBGQlV5eEhRVUZITEUxQlFVMDdVVUZEY2tJc1MwRkJTeXhEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETzB0QlEzaENMRU5CUVVNN1NVRkRSaXhKUVVGSkxFOUJRVThzUjBGQlJ5eFRRVUZUTEVOQlFVTTdTVUZEZUVJc1VVRkJVU3hEUVVGRExFOUJRVThzUjBGQlJ5eEpRVUZKTEVsQlFVazdVVUZEZGtJc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFGQlEyaENMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVc3NTVUZCU1R0WlFVTXpRaXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMWxCUXpkQ0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1dVRkRja0lzVDBGQlR5eEhRVUZITEV0QlFVc3NRMEZCUXp0VFFVTnVRaXhGUVVGRkxFTkJRVU1zU1VGQlNUdFpRVU5LTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEZWtJc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFOQlEyNUNMRU5CUVVNc1EwRkJRenRMUVVOT0xFTkJRVU03U1VGRFJpeEpRVUZKTEZGQlFWRXNSMEZCUnl4VFFVRlRMRU5CUVVNN1NVRkRla0lzVVVGQlVTeERRVUZETEZGQlFWRXNSMEZCUnl4SlFVRkpMRWxCUVVrN1VVRkRlRUlzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTJoQ0xFMUJRVTBzUTBGQlF5eGhRVUZoTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVzc1NVRkJTVHRaUVVOb1F5eFJRVUZSTEVkQlFVY3NTVUZCU1N4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03V1VGREwwSXNUVUZCVFN4TlFVRk5MRWRCUVVjc1EwRkJReXhQUVVGUExFdEJRVXM3WjBKQlEzaENMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVU3YjBKQlExZ3NUVUZCVFN4TFFVRkxMRU5CUVVNN2FVSkJRMlk3WjBKQlEwUXNUVUZCVFN4RlFVRkZMRTFCUVUwc1JVRkJSU3hQUVVGUExFVkJRVVVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8yZENRVU51UkN4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0aFFVTnNReXhEUVVGRE8xbEJRMFlzVVVGQlVTeERRVUZETEUxQlFVMHNSMEZCUnl4TlFVRk5MRU5CUVVNN1dVRkRla0lzVFVGQlRTeEZRVUZGTEVOQlFVTTdVMEZEV2l4RlFVRkZMRU5CUVVNc1NVRkJTVHRaUVVOS0xFbEJRVWtzVDBGQlR5eERRVUZETEVsQlFVa3NVVUZCVVR0blFrRkRjRUlzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPenRuUWtGRlZDeExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlF6ZENMRWxCUVVrc1QwRkJUenRuUWtGRFVDeFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE96dG5Ra0ZGZGtJc1RVRkJUU3hMUVVGTExFTkJRVU03VTBGRGJrSXNRMEZCUXl4RFFVRkRPMHRCUTA0c1EwRkJRenRKUVVOR0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0SlFVTm9RaXhOUVVGTkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdTVUZEWkN4TlFVRk5MRU5CUVVNc1VVRkJVU3hEUVVGRExFZEJRVWNzVFVGQlRTeERRVUZETzBOQlF6ZENMRU5CUVVNc1EwRkJReUo5In0=
