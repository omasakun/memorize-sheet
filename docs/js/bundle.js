function ge(id) {
    return document.getElementById(id);
}
function ce(tagName) {
    return document.createElement(tagName);
}
function cLI(innerText, classes, id, onClickFn) {
    const li = ce("li");
    li.innerText = innerText;
    classes.forEach(_ => addC(li, _));
    if (id)
        li.id = id;
    if (onClickFn)
        onClick(li, onClickFn);
    return li;
}
function remC(elm, cls) {
    elm.classList.remove(cls);
}
function addC(elm, cls) {
    elm.classList.add(cls);
}
function remAll(elm) {
    elm.innerHTML = "";
}
function onClick(elm, fn) {
    elm.addEventListener("click", fn);
}
function onLoad(fn) {
    window.addEventListener("load", fn);
}
class StringListStorage {
    constructor(key) {
        this.key = key;
        this._keys = [];
    }
    get keys() {
        this.update();
        return this._keys.slice();
    }
    set keys(keys) {
        this._keys = keys.slice();
        this.updateStorage();
    }
    get storageKey() {
        return this.key + "-stringListStorage";
    }
    has(key) {
        return this.keys.indexOf(key) >= 0;
    }
    add(key) {
        this._keys.push(key);
        this.updateStorage();
    }
    addIfNotExist(key) {
        this.update();
        if (this._keys.indexOf(key) < 0)
            this.add(key);
    }
    remove(key) {
        this.update();
        const i = this._keys.indexOf(key);
        if (i < 0)
            return false;
        this._keys.splice(i, 1);
        this.updateStorage();
        return true;
    }
    clear() {
        localStorage.removeItem(this.storageKey);
        this.update();
    }
    update() {
        const data = localStorage.getItem(this.storageKey);
        if (!data) {
            this._keys = [];
        }
        else {
            try {
                const list = JSON.parse(data);
                if (!Array.isArray(list) || list.some(_ => typeof _ != "string")) {
                    this._keys = [];
                }
                else {
                    this._keys = list;
                }
            }
            catch (e) {
                this._keys = [];
            }
        }
        this.updateStorage();
    }
    updateStorage() {
        const item = JSON.stringify(this._keys);
        localStorage.setItem(this.storageKey, item);
    }
}
class SelectOrInputUI {
    constructor(idPrefix, storage, onEnter = () => void 0) {
        this.root = ge(idPrefix);
        this.ul = ge(idPrefix + "_ul");
        this.input = ge(idPrefix + "_input");
        this.inputBtn = ge(idPrefix + "_enter");
        this.storage = storage;
        this.onEnter = onEnter;
        const self = this;
        onClick(this.inputBtn, () => {
            self.callOnEnter(this.input.value);
        });
    }
    show() {
        remC(this.root, "hide");
        const items = this.storage.keys;
        const ul = this.ul;
        remAll(ul);
        const self = this;
        items.forEach(text => {
            const li = cLI(text, [], undefined, () => {
                self.callOnEnter(text);
            });
            ul.appendChild(li);
        });
        this.input.value = "";
    }
    hide() {
        addC(this.root, "hide");
    }
    callOnEnter(text) {
        this.onEnter(text);
    }
}
class SigninUI {
    constructor(onClickFn = () => void 0) {
        this.root = ge("signin");
        this.btn = ge("signin_btn");
        this.onClick = onClickFn;
        const self = this;
        onClick(this.btn, () => {
            self.onClick();
        });
    }
    show() {
        remC(this.root, "hide");
    }
    hide() {
        addC(this.root, "hide");
    }
}
class QSetListUI {
    constructor() {
        this.onSelect = (item) => { };
        this.root = ge("qlist");
        this.ul = ge("qlist_ul");
    }
    show(qList) {
        remC(this.root, "hide");
        const ul = this.ul;
        remAll(ul);
        const self = this;
        qList.forEach(_ => {
            const li = cLI(_.sheetTitle, [], undefined, () => {
                self.onSelect(_);
            });
            ul.appendChild(li);
        });
    }
    hide() {
        addC(this.root, "hide");
    }
}
class QAndAUI {
    constructor() {
        this.items = [];
        this.onNext = (results) => { };
        this.root = ge("qanda");
        this.itemRoot = ge("qanda_itemroot");
        this.nextBtn = ge("quanda_next");
        this.log = ge("quanda_log");
        const self = this;
        onClick(this.nextBtn, () => self.callOnNext());
    }
    show(qAndAs, log) {
        remC(this.root, "hide");
        const itemRoot = this.itemRoot;
        remAll(itemRoot);
        this.items = [];
        const self = this;
        qAndAs.forEach(_ => {
            const div = ce("div");
            const q = ce("div");
            const a = ce("div");
            q.innerText = _.q;
            a.innerText = _.a;
            onClick(q, () => {
                remC(div, "trans-a");
                remC(div, "wrong");
                addC(div, "correct");
            });
            onClick(a, () => {
                remC(div, "trans-a");
                remC(div, "correct");
                addC(div, "wrong");
            });
            addC(div, "trans-a");
            addC(q, "qanda_item_q");
            addC(a, "qanda_item_a");
            div.appendChild(q);
            div.appendChild(a);
            addC(div, "qanda_item");
            itemRoot.appendChild(div);
            self.items.push(div);
        });
        this.showLog(log);
    }
    hide() {
        addC(this.root, "hide");
    }
    callOnNext() {
        const results = [];
        const notAnswereds = [];
        this.items.forEach((_, i) => {
            if (_.classList.contains("correct"))
                results.push(true);
            else if (_.classList.contains("wrong"))
                results.push(false);
            else
                notAnswereds.push(i + 1);
        });
        if (notAnswereds.length > 0) {
            this.showLog("You haven't answered to Q." + notAnswereds.join(", "));
            return;
        }
        this.onNext(results);
    }
    showLog(log) {
        this.log.innerText = log;
    }
}
class SheetProp {
    constructor(fileID, item) {
        this.fileID = fileID;
        this.item = item;
    }
    toQItem() {
        if (this.item.sheetType != "GRID")
            return undefined;
        return {
            fileID: this.fileID,
            sheetID: this.item.sheetId,
            sheetTitle: this.item.title
        };
    }
}
var DateUtil;
(function (DateUtil) {
    function parse(s) {
        const tmp = Date.parse(s);
        if (isNaN(tmp))
            return undefined;
        return new Date(tmp);
    }
    DateUtil.parse = parse;
    function str(d) {
        if (!d)
            return "";
        return d.toISOString();
    }
    DateUtil.str = str;
    function today() {
        return onlyDate(new Date());
    }
    DateUtil.today = today;
    function onlyDate(date) {
        return new Date(getDateNum(date));
    }
    DateUtil.onlyDate = onlyDate;
    function getDateNum(date) {
        return Math.floor(date.getTime() / 60 / 60 / 24 / 1000) * 60 * 60 * 24 * 1000;
    }
    DateUtil.getDateNum = getDateNum;
})(DateUtil || (DateUtil = {}));
function cells2QAndA(qItem, row, cells, warn) {
    let q = cells[0], a = cells[1], log = cells[2];
    let state = cells[3];
    let prevDate = DateUtil.parse(cells[4]);
    let interval = parseInt(cells[5]);
    let nextDate = DateUtil.parse(cells[6]);
    let failCount = parseInt(cells[7]);
    const initOrder = Math.random();
    if (state == "")
        state = "unseen";
    if (state != "unseen" && state != "learn" && state != "relearn") {
        warn('"State" should be set to "unseen", "learn" or "relearn"');
        state = "unseen";
    }
    if (state == "learn" || state == "relearn") {
        try {
            if (!prevDate || !nextDate || isNaN(interval) || isNaN(failCount)) {
                throw "";
            }
            const item = { q, a, log, state, prevDate, interval, nextDate, failCount, qItem, row, initOrder };
            return item;
        }
        catch (_a) {
            warn('"State" should be set to "unseen" because some data are incorrect.');
            state = "unseen";
            failCount = 0;
            prevDate = undefined;
            interval = NaN;
            nextDate = undefined;
        }
    }
    if (failCount != 0 && !isNaN(failCount))
        warn('"Fail Count" should be "" because the item is "unseen"');
    if (prevDate != undefined)
        warn('"Prev Date" should be "" because the item is "unseen"');
    if (!isNaN(interval))
        warn('"Interval" should be "" because the item is "unseen"');
    if (nextDate != undefined)
        warn('"Next Date" should be "" because the item is "unseen"');
    failCount = 0;
    prevDate = undefined;
    interval = undefined;
    nextDate = undefined;
    const item = { q, a, log, state: "unseen", prevDate, interval, nextDate, failCount, qItem, row, initOrder };
    return item;
}
function qAndA2UpdateReq(qAndA) {
    const _ = qAndA;
    const row = _.row, sheet = _.qItem.sheetTitle;
    const intervalText = _.interval ? _.interval.toString() : "0";
    const range = sheet + "!C" + row + ":H" + row;
    const values = [[_.log, _.state, DateUtil.str(_.prevDate), _.interval || 0, DateUtil.str(_.nextDate), _.failCount]];
    return { range, values };
}
var GSheet;
(function (GSheet) {
    var isLoaded = false;
    function load() {
        gapi.load('client:auth2', () => {
            isLoaded = true;
        });
    }
    GSheet.load = load;
    function init(clientID, onDone = () => { }, onErr = (e) => { }) {
        if (!isLoaded)
            return false;
        gapi.client.init({
            clientId: clientID,
            scope: 'https://www.googleapis.com/auth/spreadsheets',
            discoveryDocs: ['https://sheets.googleapis.com/$discovery/rest?version=v4']
        }).then(_ => {
            onDone();
            if (gapi.auth2.getAuthInstance().isSignedIn.get())
                GSheet.onSignIn();
            gapi.auth2.getAuthInstance().isSignedIn.listen((isSignedIn) => {
                if (isSignedIn)
                    GSheet.onSignIn();
                else
                    GSheet.onSignOut();
            });
        }).catch(e => {
            onErr(e);
        });
        return true;
    }
    GSheet.init = init;
    function promptSignIn() {
        gapi.auth2.getAuthInstance().signIn();
    }
    GSheet.promptSignIn = promptSignIn;
    GSheet.onSignIn = () => { };
    GSheet.onSignOut = () => { };
    function getQList(fileID, onSuccess = (qList) => { }, onErr = (e) => { }) {
        gapi.client.sheets.spreadsheets.get({
            spreadsheetId: fileID
        }).then(res => onSuccess(res.result.sheets.map(_ => new SheetProp(fileID, _.properties).toQItem()).filter(_ => _)), res => onErr(res.result.error));
    }
    GSheet.getQList = getQList;
    function getRangeRaw(fileID, range, onSuccess = (sheets) => { }, onErr = (e) => { }) {
        gapi.client.sheets.spreadsheets.values.get({
            spreadsheetId: fileID,
            range: range,
            valueRenderOption: "FORMULA"
        }).then(res => onSuccess(res.result.values), res => onErr(res.result.error));
    }
    function getRange(fileID, range, onSuccess = (sheets) => { }, onErr = (e) => { }) {
        gapi.client.sheets.spreadsheets.values.get({
            spreadsheetId: fileID,
            range: range,
            valueRenderOption: "UNFORMATTED_VALUE"
        }).then(res => onSuccess(res.result.values), res => onErr(res.result.error));
    }
    function loadQAndAList(qItem, onSuccess = (qAndA) => { }, onErr = (e) => { }) {
        const fileId = qItem.fileID;
        const sheetName = "'" + qItem.sheetTitle + "'";
        const QCountRange = sheetName + "!J1";
        getRange(fileId, QCountRange, cells => {
            const QCount = parseInt(cells[0][0]);
            if (isNaN(QCount)) {
                onErr("Invalid sheet as a database. The value of J1 cell should be the number of questions.");
                return;
            }
            const QAndARange = sheetName + "!A2:H" + (QCount + 1);
            getRangeRaw(fileId, QAndARange, cells => {
                let warnMsgs = [];
                const items = cells.map((cells, i) => {
                    for (let i = cells.length; i < 8; i++)
                        cells.push("");
                    let warn = (s) => warnMsgs.push(`row ${i + 2}: ${s}`);
                    return cells2QAndA(qItem, i + 2, cells, warn);
                });
                if (warnMsgs.length > 0)
                    onErr(warnMsgs.join("\n"));
                else
                    onSuccess(items);
            }, e => onErr(e));
        }, e => onErr(e));
    }
    GSheet.loadQAndAList = loadQAndAList;
    function saveQAndAs(qAndA, onSuccess = () => { }, onErr = (e) => { }) {
        let map = new Map();
        qAndA.forEach(_ => {
            const fileId = _.qItem.fileID;
            if (map.has(fileId))
                map.get(fileId).push(_);
            else
                map.set(fileId, [_]);
        });
        map.forEach((items, fileId) => {
            saveQAndASingleFile(fileId, items, onSuccess, onErr);
        });
    }
    GSheet.saveQAndAs = saveQAndAs;
    function saveQAndASingleFile(fileId, qAndA, onSuccess = () => { }, onErr = (e) => { }) {
        if (qAndA.some(_ => _.qItem.fileID != fileId))
            throw "BUG";
        let params = { spreadsheetId: fileId };
        var body = {
            valueInputOption: "RAW",
            data: qAndA.map(_ => qAndA2UpdateReq(_))
        };
        gapi.client.sheets.spreadsheets.values.batchUpdate(params, body)
            .then(_ => onSuccess(), e => onErr(e));
    }
})(GSheet || (GSheet = {}));
const QPerScreen = 10;
class Strategy {
    constructor(qAndAs) {
        this.pvQAndAs = undefined;
        this.qAndAs = qAndAs;
        this.sort();
    }
    next(results) {
        if (results)
            this.update(results);
        if (!results)
            if (this.pvQAndAs)
                throw "BUG";
        this.sort();
        if (this.qAndAs.length == 0)
            return { qAndAs: [], message: "No item found." };
        const isOverLearning = (item) => item.state != "unseen" &&
            DateUtil.getDateNum(item.nextDate) > DateUtil.getDateNum(new Date());
        if (isOverLearning(this.qAndAs[0])) {
            const qAndAs = this.qAndAs.slice(0, QPerScreen);
            const message = "[over learning]";
            qAndAs.sort((a, b) => a.initOrder - b.initOrder);
            this.pvQAndAs = qAndAs;
            return { qAndAs, message };
        }
        else {
            const qAndAs = this.qAndAs.slice(0, QPerScreen).filter(_ => !isOverLearning(_));
            const message = "[learning]";
            qAndAs.sort((a, b) => a.initOrder - b.initOrder);
            this.pvQAndAs = qAndAs;
            return { qAndAs, message };
        }
    }
    update(results) {
        if (!this.pvQAndAs)
            throw "BUG";
        if (results.length != this.pvQAndAs.length)
            throw "BUG";
        this.pvQAndAs.forEach((qAndA, i) => {
            const result = results[i];
            const now = new Date();
            if (result) {
                qAndA.failCount = 0;
                const oneDay = 1 * 1000 * 60 * 60 * 24;
                if (qAndA.prevDate) {
                    const tmpInterval = (now.getTime() - qAndA.prevDate.getTime()) * 2.0;
                    qAndA.interval = Math.max(qAndA.interval, tmpInterval, oneDay);
                }
                else {
                    qAndA.interval = oneDay;
                }
                qAndA.state = "learn";
            }
            else {
                qAndA.failCount++;
                qAndA.interval = 0;
                qAndA.state = qAndA.state == "unseen" ? "learn" : "relearn";
            }
            qAndA.initOrder = Math.random();
            qAndA.prevDate = now;
            qAndA.nextDate = new Date(now.getTime() + qAndA.interval);
            qAndA.log += DateUtil.str(now) + (result ? "✓" : "✗") + " ";
        });
        GSheet.saveQAndAs(this.pvQAndAs, () => console.log("Save successed"), e => console.log("Save failed", e));
    }
    sort() {
        this.qAndAs.sort((a, b) => {
            const aState = a.state == "unseen" ? 0 : a.state == "relearn" ? 1 : 2;
            const bState = b.state == "unseen" ? 0 : b.state == "relearn" ? 1 : 2;
            if (aState != bState)
                return aState - bState;
            if (a.state == "unseen" || b.state == "unseen")
                return a.initOrder - b.initOrder;
            const tmp = DateUtil.getDateNum(a.nextDate) - DateUtil.getDateNum(b.nextDate);
            if (tmp != 0)
                return tmp;
            else
                return a.initOrder - b.initOrder;
        });
    }
}
onLoad(() => {
    const cli_idSt = new StringListStorage("clientid");
    const signinUI = new SigninUI();
    const fileIDSt = new StringListStorage("fileid");
    const cli_idUI = new SelectOrInputUI("clientid", cli_idSt);
    const fileIDUI = new SelectOrInputUI("fileid", fileIDSt);
    const qlist_UI = new QSetListUI();
    const qanda_UI = new QAndAUI();
    onClick(ge("clear_all"), () => {
        if (!confirm("Do you really want to clear all registered ClientIDs & FileIDs?"))
            return;
        cli_idSt.clear();
        fileIDSt.clear();
        alert("Cleared.");
        window.location.reload();
    });
    cli_idUI.onEnter = text => {
        cli_idUI.hide();
        GSheet.init(text, () => {
            cli_idSt.addIfNotExist(text);
            signinUI.show();
        }, e => {
            alert(JSON.stringify(e));
            location.reload();
        });
    };
    signinUI.onClick = () => {
        GSheet.promptSignIn();
    };
    GSheet.onSignIn = () => {
        signinUI.hide();
        fileIDUI.show();
    };
    GSheet.onSignOut = () => {
        alert("Signed out.");
    };
    let pvQList = undefined;
    fileIDUI.onEnter = text => {
        fileIDUI.hide();
        GSheet.getQList(text, qList => {
            fileIDSt.addIfNotExist(text);
            qlist_UI.show(qList);
            pvQList = qList;
        }, e => {
            alert(JSON.stringify(e));
            fileIDUI.show();
        });
    };
    let strategy = undefined;
    qlist_UI.onSelect = item => {
        qlist_UI.hide();
        GSheet.loadQAndAList(item, qAndA => {
            strategy = new Strategy(qAndA);
            const onNext = (results) => {
                if (!strategy) {
                    throw "BUG";
                }
                const { qAndAs, message } = strategy.next(results);
                qanda_UI.show(qAndAs, message);
            };
            qanda_UI.onNext = onNext;
            onNext();
        }, e => {
            if (typeof e == "string")
                alert(e);
            else
                alert(JSON.stringify(e));
            if (pvQList)
                qlist_UI.show(pvQList);
            else
                throw "BUG";
        });
    };
    cli_idUI.show();
    GSheet.load();
    window["gSheet"] = GSheet;
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJkb2NzL2pzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGdlKGlkKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbn1cbmZ1bmN0aW9uIGNlKHRhZ05hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbn1cbmZ1bmN0aW9uIGNMSShpbm5lclRleHQsIGNsYXNzZXMsIGlkLCBvbkNsaWNrRm4pIHtcbiAgICBjb25zdCBsaSA9IGNlKFwibGlcIik7XG4gICAgbGkuaW5uZXJUZXh0ID0gaW5uZXJUZXh0O1xuICAgIGNsYXNzZXMuZm9yRWFjaChfID0+IGFkZEMobGksIF8pKTtcbiAgICBpZiAoaWQpXG4gICAgICAgIGxpLmlkID0gaWQ7XG4gICAgaWYgKG9uQ2xpY2tGbilcbiAgICAgICAgb25DbGljayhsaSwgb25DbGlja0ZuKTtcbiAgICByZXR1cm4gbGk7XG59XG5mdW5jdGlvbiByZW1DKGVsbSwgY2xzKSB7XG4gICAgZWxtLmNsYXNzTGlzdC5yZW1vdmUoY2xzKTtcbn1cbmZ1bmN0aW9uIGFkZEMoZWxtLCBjbHMpIHtcbiAgICBlbG0uY2xhc3NMaXN0LmFkZChjbHMpO1xufVxuZnVuY3Rpb24gcmVtQWxsKGVsbSkge1xuICAgIGVsbS5pbm5lckhUTUwgPSBcIlwiO1xufVxuZnVuY3Rpb24gb25DbGljayhlbG0sIGZuKSB7XG4gICAgZWxtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmbik7XG59XG5mdW5jdGlvbiBvbkxvYWQoZm4pIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZm4pO1xufVxuY2xhc3MgU3RyaW5nTGlzdFN0b3JhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKGtleSkge1xuICAgICAgICB0aGlzLmtleSA9IGtleTtcbiAgICAgICAgdGhpcy5fa2V5cyA9IFtdO1xuICAgIH1cbiAgICBnZXQga2V5cygpIHtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleXMuc2xpY2UoKTtcbiAgICB9XG4gICAgc2V0IGtleXMoa2V5cykge1xuICAgICAgICB0aGlzLl9rZXlzID0ga2V5cy5zbGljZSgpO1xuICAgICAgICB0aGlzLnVwZGF0ZVN0b3JhZ2UoKTtcbiAgICB9XG4gICAgZ2V0IHN0b3JhZ2VLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleSArIFwiLXN0cmluZ0xpc3RTdG9yYWdlXCI7XG4gICAgfVxuICAgIGhhcyhrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5cy5pbmRleE9mKGtleSkgPj0gMDtcbiAgICB9XG4gICAgYWRkKGtleSkge1xuICAgICAgICB0aGlzLl9rZXlzLnB1c2goa2V5KTtcbiAgICAgICAgdGhpcy51cGRhdGVTdG9yYWdlKCk7XG4gICAgfVxuICAgIGFkZElmTm90RXhpc3Qoa2V5KSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIGlmICh0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KSA8IDApXG4gICAgICAgICAgICB0aGlzLmFkZChrZXkpO1xuICAgIH1cbiAgICByZW1vdmUoa2V5KSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIGNvbnN0IGkgPSB0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KTtcbiAgICAgICAgaWYgKGkgPCAwKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB0aGlzLl9rZXlzLnNwbGljZShpLCAxKTtcbiAgICAgICAgdGhpcy51cGRhdGVTdG9yYWdlKCk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9XG4gICAgdXBkYXRlKCkge1xuICAgICAgICBjb25zdCBkYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgICB0aGlzLl9rZXlzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpc3QgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShsaXN0KSB8fCBsaXN0LnNvbWUoXyA9PiB0eXBlb2YgXyAhPSBcInN0cmluZ1wiKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9rZXlzID0gW107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9rZXlzID0gbGlzdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2tleXMgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVwZGF0ZVN0b3JhZ2UoKTtcbiAgICB9XG4gICAgdXBkYXRlU3RvcmFnZSgpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IEpTT04uc3RyaW5naWZ5KHRoaXMuX2tleXMpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIGl0ZW0pO1xuICAgIH1cbn1cbmNsYXNzIFNlbGVjdE9ySW5wdXRVSSB7XG4gICAgY29uc3RydWN0b3IoaWRQcmVmaXgsIHN0b3JhZ2UsIG9uRW50ZXIgPSAoKSA9PiB2b2lkIDApIHtcbiAgICAgICAgdGhpcy5yb290ID0gZ2UoaWRQcmVmaXgpO1xuICAgICAgICB0aGlzLnVsID0gZ2UoaWRQcmVmaXggKyBcIl91bFwiKTtcbiAgICAgICAgdGhpcy5pbnB1dCA9IGdlKGlkUHJlZml4ICsgXCJfaW5wdXRcIik7XG4gICAgICAgIHRoaXMuaW5wdXRCdG4gPSBnZShpZFByZWZpeCArIFwiX2VudGVyXCIpO1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlO1xuICAgICAgICB0aGlzLm9uRW50ZXIgPSBvbkVudGVyO1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgb25DbGljayh0aGlzLmlucHV0QnRuLCAoKSA9PiB7XG4gICAgICAgICAgICBzZWxmLmNhbGxPbkVudGVyKHRoaXMuaW5wdXQudmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2hvdygpIHtcbiAgICAgICAgcmVtQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICAgICAgY29uc3QgaXRlbXMgPSB0aGlzLnN0b3JhZ2Uua2V5cztcbiAgICAgICAgY29uc3QgdWwgPSB0aGlzLnVsO1xuICAgICAgICByZW1BbGwodWwpO1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgaXRlbXMuZm9yRWFjaCh0ZXh0ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGxpID0gY0xJKHRleHQsIFtdLCB1bmRlZmluZWQsICgpID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLmNhbGxPbkVudGVyKHRleHQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB1bC5hcHBlbmRDaGlsZChsaSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmlucHV0LnZhbHVlID0gXCJcIjtcbiAgICB9XG4gICAgaGlkZSgpIHtcbiAgICAgICAgYWRkQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG4gICAgY2FsbE9uRW50ZXIodGV4dCkge1xuICAgICAgICB0aGlzLm9uRW50ZXIodGV4dCk7XG4gICAgfVxufVxuY2xhc3MgU2lnbmluVUkge1xuICAgIGNvbnN0cnVjdG9yKG9uQ2xpY2tGbiA9ICgpID0+IHZvaWQgMCkge1xuICAgICAgICB0aGlzLnJvb3QgPSBnZShcInNpZ25pblwiKTtcbiAgICAgICAgdGhpcy5idG4gPSBnZShcInNpZ25pbl9idG5cIik7XG4gICAgICAgIHRoaXMub25DbGljayA9IG9uQ2xpY2tGbjtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIG9uQ2xpY2sodGhpcy5idG4sICgpID0+IHtcbiAgICAgICAgICAgIHNlbGYub25DbGljaygpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2hvdygpIHtcbiAgICAgICAgcmVtQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG4gICAgaGlkZSgpIHtcbiAgICAgICAgYWRkQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG59XG5jbGFzcyBRU2V0TGlzdFVJIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5vblNlbGVjdCA9IChpdGVtKSA9PiB7IH07XG4gICAgICAgIHRoaXMucm9vdCA9IGdlKFwicWxpc3RcIik7XG4gICAgICAgIHRoaXMudWwgPSBnZShcInFsaXN0X3VsXCIpO1xuICAgIH1cbiAgICBzaG93KHFMaXN0KSB7XG4gICAgICAgIHJlbUModGhpcy5yb290LCBcImhpZGVcIik7XG4gICAgICAgIGNvbnN0IHVsID0gdGhpcy51bDtcbiAgICAgICAgcmVtQWxsKHVsKTtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIHFMaXN0LmZvckVhY2goXyA9PiB7XG4gICAgICAgICAgICBjb25zdCBsaSA9IGNMSShfLnNoZWV0VGl0bGUsIFtdLCB1bmRlZmluZWQsICgpID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLm9uU2VsZWN0KF8pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB1bC5hcHBlbmRDaGlsZChsaSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBoaWRlKCkge1xuICAgICAgICBhZGRDKHRoaXMucm9vdCwgXCJoaWRlXCIpO1xuICAgIH1cbn1cbmNsYXNzIFFBbmRBVUkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLml0ZW1zID0gW107XG4gICAgICAgIHRoaXMub25OZXh0ID0gKHJlc3VsdHMpID0+IHsgfTtcbiAgICAgICAgdGhpcy5yb290ID0gZ2UoXCJxYW5kYVwiKTtcbiAgICAgICAgdGhpcy5pdGVtUm9vdCA9IGdlKFwicWFuZGFfaXRlbXJvb3RcIik7XG4gICAgICAgIHRoaXMubmV4dEJ0biA9IGdlKFwicXVhbmRhX25leHRcIik7XG4gICAgICAgIHRoaXMubG9nID0gZ2UoXCJxdWFuZGFfbG9nXCIpO1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgb25DbGljayh0aGlzLm5leHRCdG4sICgpID0+IHNlbGYuY2FsbE9uTmV4dCgpKTtcbiAgICB9XG4gICAgc2hvdyhxQW5kQXMsIGxvZykge1xuICAgICAgICByZW1DKHRoaXMucm9vdCwgXCJoaWRlXCIpO1xuICAgICAgICBjb25zdCBpdGVtUm9vdCA9IHRoaXMuaXRlbVJvb3Q7XG4gICAgICAgIHJlbUFsbChpdGVtUm9vdCk7XG4gICAgICAgIHRoaXMuaXRlbXMgPSBbXTtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIHFBbmRBcy5mb3JFYWNoKF8gPT4ge1xuICAgICAgICAgICAgY29uc3QgZGl2ID0gY2UoXCJkaXZcIik7XG4gICAgICAgICAgICBjb25zdCBxID0gY2UoXCJkaXZcIik7XG4gICAgICAgICAgICBjb25zdCBhID0gY2UoXCJkaXZcIik7XG4gICAgICAgICAgICBxLmlubmVyVGV4dCA9IF8ucTtcbiAgICAgICAgICAgIGEuaW5uZXJUZXh0ID0gXy5hO1xuICAgICAgICAgICAgb25DbGljayhxLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVtQyhkaXYsIFwidHJhbnMtYVwiKTtcbiAgICAgICAgICAgICAgICByZW1DKGRpdiwgXCJ3cm9uZ1wiKTtcbiAgICAgICAgICAgICAgICBhZGRDKGRpdiwgXCJjb3JyZWN0XCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBvbkNsaWNrKGEsICgpID0+IHtcbiAgICAgICAgICAgICAgICByZW1DKGRpdiwgXCJ0cmFucy1hXCIpO1xuICAgICAgICAgICAgICAgIHJlbUMoZGl2LCBcImNvcnJlY3RcIik7XG4gICAgICAgICAgICAgICAgYWRkQyhkaXYsIFwid3JvbmdcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGFkZEMoZGl2LCBcInRyYW5zLWFcIik7XG4gICAgICAgICAgICBhZGRDKHEsIFwicWFuZGFfaXRlbV9xXCIpO1xuICAgICAgICAgICAgYWRkQyhhLCBcInFhbmRhX2l0ZW1fYVwiKTtcbiAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChxKTtcbiAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChhKTtcbiAgICAgICAgICAgIGFkZEMoZGl2LCBcInFhbmRhX2l0ZW1cIik7XG4gICAgICAgICAgICBpdGVtUm9vdC5hcHBlbmRDaGlsZChkaXYpO1xuICAgICAgICAgICAgc2VsZi5pdGVtcy5wdXNoKGRpdik7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNob3dMb2cobG9nKTtcbiAgICB9XG4gICAgaGlkZSgpIHtcbiAgICAgICAgYWRkQyh0aGlzLnJvb3QsIFwiaGlkZVwiKTtcbiAgICB9XG4gICAgY2FsbE9uTmV4dCgpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgICAgICBjb25zdCBub3RBbnN3ZXJlZHMgPSBbXTtcbiAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKChfLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoXy5jbGFzc0xpc3QuY29udGFpbnMoXCJjb3JyZWN0XCIpKVxuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaCh0cnVlKTtcbiAgICAgICAgICAgIGVsc2UgaWYgKF8uY2xhc3NMaXN0LmNvbnRhaW5zKFwid3JvbmdcIikpXG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGZhbHNlKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBub3RBbnN3ZXJlZHMucHVzaChpICsgMSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAobm90QW5zd2VyZWRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd0xvZyhcIllvdSBoYXZlbid0IGFuc3dlcmVkIHRvIFEuXCIgKyBub3RBbnN3ZXJlZHMuam9pbihcIiwgXCIpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9uTmV4dChyZXN1bHRzKTtcbiAgICB9XG4gICAgc2hvd0xvZyhsb2cpIHtcbiAgICAgICAgdGhpcy5sb2cuaW5uZXJUZXh0ID0gbG9nO1xuICAgIH1cbn1cbmNsYXNzIFNoZWV0UHJvcCB7XG4gICAgY29uc3RydWN0b3IoZmlsZUlELCBpdGVtKSB7XG4gICAgICAgIHRoaXMuZmlsZUlEID0gZmlsZUlEO1xuICAgICAgICB0aGlzLml0ZW0gPSBpdGVtO1xuICAgIH1cbiAgICB0b1FJdGVtKCkge1xuICAgICAgICBpZiAodGhpcy5pdGVtLnNoZWV0VHlwZSAhPSBcIkdSSURcIilcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBmaWxlSUQ6IHRoaXMuZmlsZUlELFxuICAgICAgICAgICAgc2hlZXRJRDogdGhpcy5pdGVtLnNoZWV0SWQsXG4gICAgICAgICAgICBzaGVldFRpdGxlOiB0aGlzLml0ZW0udGl0bGVcbiAgICAgICAgfTtcbiAgICB9XG59XG52YXIgRGF0ZVV0aWw7XG4oZnVuY3Rpb24gKERhdGVVdGlsKSB7XG4gICAgZnVuY3Rpb24gcGFyc2Uocykge1xuICAgICAgICBjb25zdCB0bXAgPSBEYXRlLnBhcnNlKHMpO1xuICAgICAgICBpZiAoaXNOYU4odG1wKSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSh0bXApO1xuICAgIH1cbiAgICBEYXRlVXRpbC5wYXJzZSA9IHBhcnNlO1xuICAgIGZ1bmN0aW9uIHN0cihkKSB7XG4gICAgICAgIGlmICghZClcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICByZXR1cm4gZC50b0lTT1N0cmluZygpO1xuICAgIH1cbiAgICBEYXRlVXRpbC5zdHIgPSBzdHI7XG4gICAgZnVuY3Rpb24gdG9kYXkoKSB7XG4gICAgICAgIHJldHVybiBvbmx5RGF0ZShuZXcgRGF0ZSgpKTtcbiAgICB9XG4gICAgRGF0ZVV0aWwudG9kYXkgPSB0b2RheTtcbiAgICBmdW5jdGlvbiBvbmx5RGF0ZShkYXRlKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShnZXREYXRlTnVtKGRhdGUpKTtcbiAgICB9XG4gICAgRGF0ZVV0aWwub25seURhdGUgPSBvbmx5RGF0ZTtcbiAgICBmdW5jdGlvbiBnZXREYXRlTnVtKGRhdGUpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoZGF0ZS5nZXRUaW1lKCkgLyA2MCAvIDYwIC8gMjQgLyAxMDAwKSAqIDYwICogNjAgKiAyNCAqIDEwMDA7XG4gICAgfVxuICAgIERhdGVVdGlsLmdldERhdGVOdW0gPSBnZXREYXRlTnVtO1xufSkoRGF0ZVV0aWwgfHwgKERhdGVVdGlsID0ge30pKTtcbmZ1bmN0aW9uIGNlbGxzMlFBbmRBKHFJdGVtLCByb3csIGNlbGxzLCB3YXJuKSB7XG4gICAgbGV0IHEgPSBjZWxsc1swXSwgYSA9IGNlbGxzWzFdLCBsb2cgPSBjZWxsc1syXTtcbiAgICBsZXQgc3RhdGUgPSBjZWxsc1szXTtcbiAgICBsZXQgcHJldkRhdGUgPSBEYXRlVXRpbC5wYXJzZShjZWxsc1s0XSk7XG4gICAgbGV0IGludGVydmFsID0gcGFyc2VJbnQoY2VsbHNbNV0pO1xuICAgIGxldCBuZXh0RGF0ZSA9IERhdGVVdGlsLnBhcnNlKGNlbGxzWzZdKTtcbiAgICBsZXQgZmFpbENvdW50ID0gcGFyc2VJbnQoY2VsbHNbN10pO1xuICAgIGNvbnN0IGluaXRPcmRlciA9IE1hdGgucmFuZG9tKCk7XG4gICAgaWYgKHN0YXRlID09IFwiXCIpXG4gICAgICAgIHN0YXRlID0gXCJ1bnNlZW5cIjtcbiAgICBpZiAoc3RhdGUgIT0gXCJ1bnNlZW5cIiAmJiBzdGF0ZSAhPSBcImxlYXJuXCIgJiYgc3RhdGUgIT0gXCJyZWxlYXJuXCIpIHtcbiAgICAgICAgd2FybignXCJTdGF0ZVwiIHNob3VsZCBiZSBzZXQgdG8gXCJ1bnNlZW5cIiwgXCJsZWFyblwiIG9yIFwicmVsZWFyblwiJyk7XG4gICAgICAgIHN0YXRlID0gXCJ1bnNlZW5cIjtcbiAgICB9XG4gICAgaWYgKHN0YXRlID09IFwibGVhcm5cIiB8fCBzdGF0ZSA9PSBcInJlbGVhcm5cIikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCFwcmV2RGF0ZSB8fCAhbmV4dERhdGUgfHwgaXNOYU4oaW50ZXJ2YWwpIHx8IGlzTmFOKGZhaWxDb3VudCkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgaXRlbSA9IHsgcSwgYSwgbG9nLCBzdGF0ZSwgcHJldkRhdGUsIGludGVydmFsLCBuZXh0RGF0ZSwgZmFpbENvdW50LCBxSXRlbSwgcm93LCBpbml0T3JkZXIgfTtcbiAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgd2FybignXCJTdGF0ZVwiIHNob3VsZCBiZSBzZXQgdG8gXCJ1bnNlZW5cIiBiZWNhdXNlIHNvbWUgZGF0YSBhcmUgaW5jb3JyZWN0LicpO1xuICAgICAgICAgICAgc3RhdGUgPSBcInVuc2VlblwiO1xuICAgICAgICAgICAgZmFpbENvdW50ID0gMDtcbiAgICAgICAgICAgIHByZXZEYXRlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgaW50ZXJ2YWwgPSBOYU47XG4gICAgICAgICAgICBuZXh0RGF0ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZmFpbENvdW50ICE9IDAgJiYgIWlzTmFOKGZhaWxDb3VudCkpXG4gICAgICAgIHdhcm4oJ1wiRmFpbCBDb3VudFwiIHNob3VsZCBiZSBcIlwiIGJlY2F1c2UgdGhlIGl0ZW0gaXMgXCJ1bnNlZW5cIicpO1xuICAgIGlmIChwcmV2RGF0ZSAhPSB1bmRlZmluZWQpXG4gICAgICAgIHdhcm4oJ1wiUHJldiBEYXRlXCIgc2hvdWxkIGJlIFwiXCIgYmVjYXVzZSB0aGUgaXRlbSBpcyBcInVuc2VlblwiJyk7XG4gICAgaWYgKCFpc05hTihpbnRlcnZhbCkpXG4gICAgICAgIHdhcm4oJ1wiSW50ZXJ2YWxcIiBzaG91bGQgYmUgXCJcIiBiZWNhdXNlIHRoZSBpdGVtIGlzIFwidW5zZWVuXCInKTtcbiAgICBpZiAobmV4dERhdGUgIT0gdW5kZWZpbmVkKVxuICAgICAgICB3YXJuKCdcIk5leHQgRGF0ZVwiIHNob3VsZCBiZSBcIlwiIGJlY2F1c2UgdGhlIGl0ZW0gaXMgXCJ1bnNlZW5cIicpO1xuICAgIGZhaWxDb3VudCA9IDA7XG4gICAgcHJldkRhdGUgPSB1bmRlZmluZWQ7XG4gICAgaW50ZXJ2YWwgPSB1bmRlZmluZWQ7XG4gICAgbmV4dERhdGUgPSB1bmRlZmluZWQ7XG4gICAgY29uc3QgaXRlbSA9IHsgcSwgYSwgbG9nLCBzdGF0ZTogXCJ1bnNlZW5cIiwgcHJldkRhdGUsIGludGVydmFsLCBuZXh0RGF0ZSwgZmFpbENvdW50LCBxSXRlbSwgcm93LCBpbml0T3JkZXIgfTtcbiAgICByZXR1cm4gaXRlbTtcbn1cbmZ1bmN0aW9uIHFBbmRBMlVwZGF0ZVJlcShxQW5kQSkge1xuICAgIGNvbnN0IF8gPSBxQW5kQTtcbiAgICBjb25zdCByb3cgPSBfLnJvdywgc2hlZXQgPSBfLnFJdGVtLnNoZWV0VGl0bGU7XG4gICAgY29uc3QgaW50ZXJ2YWxUZXh0ID0gXy5pbnRlcnZhbCA/IF8uaW50ZXJ2YWwudG9TdHJpbmcoKSA6IFwiMFwiO1xuICAgIGNvbnN0IHJhbmdlID0gc2hlZXQgKyBcIiFDXCIgKyByb3cgKyBcIjpIXCIgKyByb3c7XG4gICAgY29uc3QgdmFsdWVzID0gW1tfLmxvZywgXy5zdGF0ZSwgRGF0ZVV0aWwuc3RyKF8ucHJldkRhdGUpLCBfLmludGVydmFsIHx8IDAsIERhdGVVdGlsLnN0cihfLm5leHREYXRlKSwgXy5mYWlsQ291bnRdXTtcbiAgICByZXR1cm4geyByYW5nZSwgdmFsdWVzIH07XG59XG52YXIgR1NoZWV0O1xuKGZ1bmN0aW9uIChHU2hlZXQpIHtcbiAgICB2YXIgaXNMb2FkZWQgPSBmYWxzZTtcbiAgICBmdW5jdGlvbiBsb2FkKCkge1xuICAgICAgICBnYXBpLmxvYWQoJ2NsaWVudDphdXRoMicsICgpID0+IHtcbiAgICAgICAgICAgIGlzTG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIEdTaGVldC5sb2FkID0gbG9hZDtcbiAgICBmdW5jdGlvbiBpbml0KGNsaWVudElELCBvbkRvbmUgPSAoKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBpZiAoIWlzTG9hZGVkKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBnYXBpLmNsaWVudC5pbml0KHtcbiAgICAgICAgICAgIGNsaWVudElkOiBjbGllbnRJRCxcbiAgICAgICAgICAgIHNjb3BlOiAnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9zcHJlYWRzaGVldHMnLFxuICAgICAgICAgICAgZGlzY292ZXJ5RG9jczogWydodHRwczovL3NoZWV0cy5nb29nbGVhcGlzLmNvbS8kZGlzY292ZXJ5L3Jlc3Q/dmVyc2lvbj12NCddXG4gICAgICAgIH0pLnRoZW4oXyA9PiB7XG4gICAgICAgICAgICBvbkRvbmUoKTtcbiAgICAgICAgICAgIGlmIChnYXBpLmF1dGgyLmdldEF1dGhJbnN0YW5jZSgpLmlzU2lnbmVkSW4uZ2V0KCkpXG4gICAgICAgICAgICAgICAgR1NoZWV0Lm9uU2lnbkluKCk7XG4gICAgICAgICAgICBnYXBpLmF1dGgyLmdldEF1dGhJbnN0YW5jZSgpLmlzU2lnbmVkSW4ubGlzdGVuKChpc1NpZ25lZEluKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU2lnbmVkSW4pXG4gICAgICAgICAgICAgICAgICAgIEdTaGVldC5vblNpZ25JbigpO1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgR1NoZWV0Lm9uU2lnbk91dCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgb25FcnIoZSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgR1NoZWV0LmluaXQgPSBpbml0O1xuICAgIGZ1bmN0aW9uIHByb21wdFNpZ25JbigpIHtcbiAgICAgICAgZ2FwaS5hdXRoMi5nZXRBdXRoSW5zdGFuY2UoKS5zaWduSW4oKTtcbiAgICB9XG4gICAgR1NoZWV0LnByb21wdFNpZ25JbiA9IHByb21wdFNpZ25JbjtcbiAgICBHU2hlZXQub25TaWduSW4gPSAoKSA9PiB7IH07XG4gICAgR1NoZWV0Lm9uU2lnbk91dCA9ICgpID0+IHsgfTtcbiAgICBmdW5jdGlvbiBnZXRRTGlzdChmaWxlSUQsIG9uU3VjY2VzcyA9IChxTGlzdCkgPT4geyB9LCBvbkVyciA9IChlKSA9PiB7IH0pIHtcbiAgICAgICAgZ2FwaS5jbGllbnQuc2hlZXRzLnNwcmVhZHNoZWV0cy5nZXQoe1xuICAgICAgICAgICAgc3ByZWFkc2hlZXRJZDogZmlsZUlEXG4gICAgICAgIH0pLnRoZW4ocmVzID0+IG9uU3VjY2VzcyhyZXMucmVzdWx0LnNoZWV0cy5tYXAoXyA9PiBuZXcgU2hlZXRQcm9wKGZpbGVJRCwgXy5wcm9wZXJ0aWVzKS50b1FJdGVtKCkpLmZpbHRlcihfID0+IF8pKSwgcmVzID0+IG9uRXJyKHJlcy5yZXN1bHQuZXJyb3IpKTtcbiAgICB9XG4gICAgR1NoZWV0LmdldFFMaXN0ID0gZ2V0UUxpc3Q7XG4gICAgZnVuY3Rpb24gZ2V0UmFuZ2VSYXcoZmlsZUlELCByYW5nZSwgb25TdWNjZXNzID0gKHNoZWV0cykgPT4geyB9LCBvbkVyciA9IChlKSA9PiB7IH0pIHtcbiAgICAgICAgZ2FwaS5jbGllbnQuc2hlZXRzLnNwcmVhZHNoZWV0cy52YWx1ZXMuZ2V0KHtcbiAgICAgICAgICAgIHNwcmVhZHNoZWV0SWQ6IGZpbGVJRCxcbiAgICAgICAgICAgIHJhbmdlOiByYW5nZSxcbiAgICAgICAgICAgIHZhbHVlUmVuZGVyT3B0aW9uOiBcIkZPUk1VTEFcIlxuICAgICAgICB9KS50aGVuKHJlcyA9PiBvblN1Y2Nlc3MocmVzLnJlc3VsdC52YWx1ZXMpLCByZXMgPT4gb25FcnIocmVzLnJlc3VsdC5lcnJvcikpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRSYW5nZShmaWxlSUQsIHJhbmdlLCBvblN1Y2Nlc3MgPSAoc2hlZXRzKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBnYXBpLmNsaWVudC5zaGVldHMuc3ByZWFkc2hlZXRzLnZhbHVlcy5nZXQoe1xuICAgICAgICAgICAgc3ByZWFkc2hlZXRJZDogZmlsZUlELFxuICAgICAgICAgICAgcmFuZ2U6IHJhbmdlLFxuICAgICAgICAgICAgdmFsdWVSZW5kZXJPcHRpb246IFwiVU5GT1JNQVRURURfVkFMVUVcIlxuICAgICAgICB9KS50aGVuKHJlcyA9PiBvblN1Y2Nlc3MocmVzLnJlc3VsdC52YWx1ZXMpLCByZXMgPT4gb25FcnIocmVzLnJlc3VsdC5lcnJvcikpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBsb2FkUUFuZEFMaXN0KHFJdGVtLCBvblN1Y2Nlc3MgPSAocUFuZEEpID0+IHsgfSwgb25FcnIgPSAoZSkgPT4geyB9KSB7XG4gICAgICAgIGNvbnN0IGZpbGVJZCA9IHFJdGVtLmZpbGVJRDtcbiAgICAgICAgY29uc3Qgc2hlZXROYW1lID0gXCInXCIgKyBxSXRlbS5zaGVldFRpdGxlICsgXCInXCI7XG4gICAgICAgIGNvbnN0IFFDb3VudFJhbmdlID0gc2hlZXROYW1lICsgXCIhSjFcIjtcbiAgICAgICAgZ2V0UmFuZ2UoZmlsZUlkLCBRQ291bnRSYW5nZSwgY2VsbHMgPT4ge1xuICAgICAgICAgICAgY29uc3QgUUNvdW50ID0gcGFyc2VJbnQoY2VsbHNbMF1bMF0pO1xuICAgICAgICAgICAgaWYgKGlzTmFOKFFDb3VudCkpIHtcbiAgICAgICAgICAgICAgICBvbkVycihcIkludmFsaWQgc2hlZXQgYXMgYSBkYXRhYmFzZS4gVGhlIHZhbHVlIG9mIEoxIGNlbGwgc2hvdWxkIGJlIHRoZSBudW1iZXIgb2YgcXVlc3Rpb25zLlwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBRQW5kQVJhbmdlID0gc2hlZXROYW1lICsgXCIhQTI6SFwiICsgKFFDb3VudCArIDEpO1xuICAgICAgICAgICAgZ2V0UmFuZ2VSYXcoZmlsZUlkLCBRQW5kQVJhbmdlLCBjZWxscyA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHdhcm5Nc2dzID0gW107XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBjZWxscy5tYXAoKGNlbGxzLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSBjZWxscy5sZW5ndGg7IGkgPCA4OyBpKyspXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxscy5wdXNoKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgd2FybiA9IChzKSA9PiB3YXJuTXNncy5wdXNoKGByb3cgJHtpICsgMn06ICR7c31gKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNlbGxzMlFBbmRBKHFJdGVtLCBpICsgMiwgY2VsbHMsIHdhcm4pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmICh3YXJuTXNncy5sZW5ndGggPiAwKVxuICAgICAgICAgICAgICAgICAgICBvbkVycih3YXJuTXNncy5qb2luKFwiXFxuXCIpKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIG9uU3VjY2VzcyhpdGVtcyk7XG4gICAgICAgICAgICB9LCBlID0+IG9uRXJyKGUpKTtcbiAgICAgICAgfSwgZSA9PiBvbkVycihlKSk7XG4gICAgfVxuICAgIEdTaGVldC5sb2FkUUFuZEFMaXN0ID0gbG9hZFFBbmRBTGlzdDtcbiAgICBmdW5jdGlvbiBzYXZlUUFuZEFzKHFBbmRBLCBvblN1Y2Nlc3MgPSAoKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBsZXQgbWFwID0gbmV3IE1hcCgpO1xuICAgICAgICBxQW5kQS5mb3JFYWNoKF8gPT4ge1xuICAgICAgICAgICAgY29uc3QgZmlsZUlkID0gXy5xSXRlbS5maWxlSUQ7XG4gICAgICAgICAgICBpZiAobWFwLmhhcyhmaWxlSWQpKVxuICAgICAgICAgICAgICAgIG1hcC5nZXQoZmlsZUlkKS5wdXNoKF8pO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIG1hcC5zZXQoZmlsZUlkLCBbX10pO1xuICAgICAgICB9KTtcbiAgICAgICAgbWFwLmZvckVhY2goKGl0ZW1zLCBmaWxlSWQpID0+IHtcbiAgICAgICAgICAgIHNhdmVRQW5kQVNpbmdsZUZpbGUoZmlsZUlkLCBpdGVtcywgb25TdWNjZXNzLCBvbkVycik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBHU2hlZXQuc2F2ZVFBbmRBcyA9IHNhdmVRQW5kQXM7XG4gICAgZnVuY3Rpb24gc2F2ZVFBbmRBU2luZ2xlRmlsZShmaWxlSWQsIHFBbmRBLCBvblN1Y2Nlc3MgPSAoKSA9PiB7IH0sIG9uRXJyID0gKGUpID0+IHsgfSkge1xuICAgICAgICBpZiAocUFuZEEuc29tZShfID0+IF8ucUl0ZW0uZmlsZUlEICE9IGZpbGVJZCkpXG4gICAgICAgICAgICB0aHJvdyBcIkJVR1wiO1xuICAgICAgICBsZXQgcGFyYW1zID0geyBzcHJlYWRzaGVldElkOiBmaWxlSWQgfTtcbiAgICAgICAgdmFyIGJvZHkgPSB7XG4gICAgICAgICAgICB2YWx1ZUlucHV0T3B0aW9uOiBcIlJBV1wiLFxuICAgICAgICAgICAgZGF0YTogcUFuZEEubWFwKF8gPT4gcUFuZEEyVXBkYXRlUmVxKF8pKVxuICAgICAgICB9O1xuICAgICAgICBnYXBpLmNsaWVudC5zaGVldHMuc3ByZWFkc2hlZXRzLnZhbHVlcy5iYXRjaFVwZGF0ZShwYXJhbXMsIGJvZHkpXG4gICAgICAgICAgICAudGhlbihfID0+IG9uU3VjY2VzcygpLCBlID0+IG9uRXJyKGUpKTtcbiAgICB9XG59KShHU2hlZXQgfHwgKEdTaGVldCA9IHt9KSk7XG5jb25zdCBRUGVyU2NyZWVuID0gMTA7XG5jbGFzcyBTdHJhdGVneSB7XG4gICAgY29uc3RydWN0b3IocUFuZEFzKSB7XG4gICAgICAgIHRoaXMucHZRQW5kQXMgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucUFuZEFzID0gcUFuZEFzO1xuICAgICAgICB0aGlzLnNvcnQoKTtcbiAgICB9XG4gICAgbmV4dChyZXN1bHRzKSB7XG4gICAgICAgIGlmIChyZXN1bHRzKVxuICAgICAgICAgICAgdGhpcy51cGRhdGUocmVzdWx0cyk7XG4gICAgICAgIGlmICghcmVzdWx0cylcbiAgICAgICAgICAgIGlmICh0aGlzLnB2UUFuZEFzKVxuICAgICAgICAgICAgICAgIHRocm93IFwiQlVHXCI7XG4gICAgICAgIHRoaXMuc29ydCgpO1xuICAgICAgICBpZiAodGhpcy5xQW5kQXMubGVuZ3RoID09IDApXG4gICAgICAgICAgICByZXR1cm4geyBxQW5kQXM6IFtdLCBtZXNzYWdlOiBcIk5vIGl0ZW0gZm91bmQuXCIgfTtcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSBcIlwiO1xuICAgICAgICBjb25zdCBpc092ZXJMZWFybmluZyA9IChpdGVtKSA9PiBpdGVtLnN0YXRlICE9IFwidW5zZWVuXCIgJiZcbiAgICAgICAgICAgIERhdGVVdGlsLmdldERhdGVOdW0oaXRlbS5uZXh0RGF0ZSkgPiBEYXRlVXRpbC5nZXREYXRlTnVtKG5ldyBEYXRlKCkpO1xuICAgICAgICBpZiAoaXNPdmVyTGVhcm5pbmcodGhpcy5xQW5kQXNbMF0pKSB7XG4gICAgICAgICAgICBjb25zdCBxQW5kQXMgPSB0aGlzLnFBbmRBcy5zbGljZSgwLCBRUGVyU2NyZWVuKTtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBcIltvdmVyIGxlYXJuaW5nXVwiO1xuICAgICAgICAgICAgcUFuZEFzLnNvcnQoKGEsIGIpID0+IGEuaW5pdE9yZGVyIC0gYi5pbml0T3JkZXIpO1xuICAgICAgICAgICAgdGhpcy5wdlFBbmRBcyA9IHFBbmRBcztcbiAgICAgICAgICAgIHJldHVybiB7IHFBbmRBcywgbWVzc2FnZSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcUFuZEFzID0gdGhpcy5xQW5kQXMuc2xpY2UoMCwgUVBlclNjcmVlbikuZmlsdGVyKF8gPT4gIWlzT3ZlckxlYXJuaW5nKF8pKTtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBcIltsZWFybmluZ11cIjtcbiAgICAgICAgICAgIHFBbmRBcy5zb3J0KChhLCBiKSA9PiBhLmluaXRPcmRlciAtIGIuaW5pdE9yZGVyKTtcbiAgICAgICAgICAgIHRoaXMucHZRQW5kQXMgPSBxQW5kQXM7XG4gICAgICAgICAgICByZXR1cm4geyBxQW5kQXMsIG1lc3NhZ2UgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUocmVzdWx0cykge1xuICAgICAgICBpZiAoIXRoaXMucHZRQW5kQXMpXG4gICAgICAgICAgICB0aHJvdyBcIkJVR1wiO1xuICAgICAgICBpZiAocmVzdWx0cy5sZW5ndGggIT0gdGhpcy5wdlFBbmRBcy5sZW5ndGgpXG4gICAgICAgICAgICB0aHJvdyBcIkJVR1wiO1xuICAgICAgICB0aGlzLnB2UUFuZEFzLmZvckVhY2goKHFBbmRBLCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSByZXN1bHRzW2ldO1xuICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBxQW5kQS5mYWlsQ291bnQgPSAwO1xuICAgICAgICAgICAgICAgIGNvbnN0IG9uZURheSA9IDEgKiAxMDAwICogNjAgKiA2MCAqIDI0O1xuICAgICAgICAgICAgICAgIGlmIChxQW5kQS5wcmV2RGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0bXBJbnRlcnZhbCA9IChub3cuZ2V0VGltZSgpIC0gcUFuZEEucHJldkRhdGUuZ2V0VGltZSgpKSAqIDIuMDtcbiAgICAgICAgICAgICAgICAgICAgcUFuZEEuaW50ZXJ2YWwgPSBNYXRoLm1heChxQW5kQS5pbnRlcnZhbCwgdG1wSW50ZXJ2YWwsIG9uZURheSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBxQW5kQS5pbnRlcnZhbCA9IG9uZURheTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcUFuZEEuc3RhdGUgPSBcImxlYXJuXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBxQW5kQS5mYWlsQ291bnQrKztcbiAgICAgICAgICAgICAgICBxQW5kQS5pbnRlcnZhbCA9IDA7XG4gICAgICAgICAgICAgICAgcUFuZEEuc3RhdGUgPSBxQW5kQS5zdGF0ZSA9PSBcInVuc2VlblwiID8gXCJsZWFyblwiIDogXCJyZWxlYXJuXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxQW5kQS5pbml0T3JkZXIgPSBNYXRoLnJhbmRvbSgpO1xuICAgICAgICAgICAgcUFuZEEucHJldkRhdGUgPSBub3c7XG4gICAgICAgICAgICBxQW5kQS5uZXh0RGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyBxQW5kQS5pbnRlcnZhbCk7XG4gICAgICAgICAgICBxQW5kQS5sb2cgKz0gRGF0ZVV0aWwuc3RyKG5vdykgKyAocmVzdWx0ID8gXCLinJNcIiA6IFwi4pyXXCIpICsgXCIgXCI7XG4gICAgICAgIH0pO1xuICAgICAgICBHU2hlZXQuc2F2ZVFBbmRBcyh0aGlzLnB2UUFuZEFzLCAoKSA9PiBjb25zb2xlLmxvZyhcIlNhdmUgc3VjY2Vzc2VkXCIpLCBlID0+IGNvbnNvbGUubG9nKFwiU2F2ZSBmYWlsZWRcIiwgZSkpO1xuICAgIH1cbiAgICBzb3J0KCkge1xuICAgICAgICB0aGlzLnFBbmRBcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBhU3RhdGUgPSBhLnN0YXRlID09IFwidW5zZWVuXCIgPyAwIDogYS5zdGF0ZSA9PSBcInJlbGVhcm5cIiA/IDEgOiAyO1xuICAgICAgICAgICAgY29uc3QgYlN0YXRlID0gYi5zdGF0ZSA9PSBcInVuc2VlblwiID8gMCA6IGIuc3RhdGUgPT0gXCJyZWxlYXJuXCIgPyAxIDogMjtcbiAgICAgICAgICAgIGlmIChhU3RhdGUgIT0gYlN0YXRlKVxuICAgICAgICAgICAgICAgIHJldHVybiBhU3RhdGUgLSBiU3RhdGU7XG4gICAgICAgICAgICBpZiAoYS5zdGF0ZSA9PSBcInVuc2VlblwiIHx8IGIuc3RhdGUgPT0gXCJ1bnNlZW5cIilcbiAgICAgICAgICAgICAgICByZXR1cm4gYS5pbml0T3JkZXIgLSBiLmluaXRPcmRlcjtcbiAgICAgICAgICAgIGNvbnN0IHRtcCA9IERhdGVVdGlsLmdldERhdGVOdW0oYS5uZXh0RGF0ZSkgLSBEYXRlVXRpbC5nZXREYXRlTnVtKGIubmV4dERhdGUpO1xuICAgICAgICAgICAgaWYgKHRtcCAhPSAwKVxuICAgICAgICAgICAgICAgIHJldHVybiB0bXA7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcmV0dXJuIGEuaW5pdE9yZGVyIC0gYi5pbml0T3JkZXI7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbm9uTG9hZCgoKSA9PiB7XG4gICAgY29uc3QgY2xpX2lkU3QgPSBuZXcgU3RyaW5nTGlzdFN0b3JhZ2UoXCJjbGllbnRpZFwiKTtcbiAgICBjb25zdCBzaWduaW5VSSA9IG5ldyBTaWduaW5VSSgpO1xuICAgIGNvbnN0IGZpbGVJRFN0ID0gbmV3IFN0cmluZ0xpc3RTdG9yYWdlKFwiZmlsZWlkXCIpO1xuICAgIGNvbnN0IGNsaV9pZFVJID0gbmV3IFNlbGVjdE9ySW5wdXRVSShcImNsaWVudGlkXCIsIGNsaV9pZFN0KTtcbiAgICBjb25zdCBmaWxlSURVSSA9IG5ldyBTZWxlY3RPcklucHV0VUkoXCJmaWxlaWRcIiwgZmlsZUlEU3QpO1xuICAgIGNvbnN0IHFsaXN0X1VJID0gbmV3IFFTZXRMaXN0VUkoKTtcbiAgICBjb25zdCBxYW5kYV9VSSA9IG5ldyBRQW5kQVVJKCk7XG4gICAgb25DbGljayhnZShcImNsZWFyX2FsbFwiKSwgKCkgPT4ge1xuICAgICAgICBpZiAoIWNvbmZpcm0oXCJEbyB5b3UgcmVhbGx5IHdhbnQgdG8gY2xlYXIgYWxsIHJlZ2lzdGVyZWQgQ2xpZW50SURzICYgRmlsZUlEcz9cIikpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNsaV9pZFN0LmNsZWFyKCk7XG4gICAgICAgIGZpbGVJRFN0LmNsZWFyKCk7XG4gICAgICAgIGFsZXJ0KFwiQ2xlYXJlZC5cIik7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9KTtcbiAgICBjbGlfaWRVSS5vbkVudGVyID0gdGV4dCA9PiB7XG4gICAgICAgIGNsaV9pZFVJLmhpZGUoKTtcbiAgICAgICAgR1NoZWV0LmluaXQodGV4dCwgKCkgPT4ge1xuICAgICAgICAgICAgY2xpX2lkU3QuYWRkSWZOb3RFeGlzdCh0ZXh0KTtcbiAgICAgICAgICAgIHNpZ25pblVJLnNob3coKTtcbiAgICAgICAgfSwgZSA9PiB7XG4gICAgICAgICAgICBhbGVydChKU09OLnN0cmluZ2lmeShlKSk7XG4gICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBzaWduaW5VSS5vbkNsaWNrID0gKCkgPT4ge1xuICAgICAgICBHU2hlZXQucHJvbXB0U2lnbkluKCk7XG4gICAgfTtcbiAgICBHU2hlZXQub25TaWduSW4gPSAoKSA9PiB7XG4gICAgICAgIHNpZ25pblVJLmhpZGUoKTtcbiAgICAgICAgZmlsZUlEVUkuc2hvdygpO1xuICAgIH07XG4gICAgR1NoZWV0Lm9uU2lnbk91dCA9ICgpID0+IHtcbiAgICAgICAgYWxlcnQoXCJTaWduZWQgb3V0LlwiKTtcbiAgICB9O1xuICAgIGxldCBwdlFMaXN0ID0gdW5kZWZpbmVkO1xuICAgIGZpbGVJRFVJLm9uRW50ZXIgPSB0ZXh0ID0+IHtcbiAgICAgICAgZmlsZUlEVUkuaGlkZSgpO1xuICAgICAgICBHU2hlZXQuZ2V0UUxpc3QodGV4dCwgcUxpc3QgPT4ge1xuICAgICAgICAgICAgZmlsZUlEU3QuYWRkSWZOb3RFeGlzdCh0ZXh0KTtcbiAgICAgICAgICAgIHFsaXN0X1VJLnNob3cocUxpc3QpO1xuICAgICAgICAgICAgcHZRTGlzdCA9IHFMaXN0O1xuICAgICAgICB9LCBlID0+IHtcbiAgICAgICAgICAgIGFsZXJ0KEpTT04uc3RyaW5naWZ5KGUpKTtcbiAgICAgICAgICAgIGZpbGVJRFVJLnNob3coKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBsZXQgc3RyYXRlZ3kgPSB1bmRlZmluZWQ7XG4gICAgcWxpc3RfVUkub25TZWxlY3QgPSBpdGVtID0+IHtcbiAgICAgICAgcWxpc3RfVUkuaGlkZSgpO1xuICAgICAgICBHU2hlZXQubG9hZFFBbmRBTGlzdChpdGVtLCBxQW5kQSA9PiB7XG4gICAgICAgICAgICBzdHJhdGVneSA9IG5ldyBTdHJhdGVneShxQW5kQSk7XG4gICAgICAgICAgICBjb25zdCBvbk5leHQgPSAocmVzdWx0cykgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghc3RyYXRlZ3kpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgXCJCVUdcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgeyBxQW5kQXMsIG1lc3NhZ2UgfSA9IHN0cmF0ZWd5Lm5leHQocmVzdWx0cyk7XG4gICAgICAgICAgICAgICAgcWFuZGFfVUkuc2hvdyhxQW5kQXMsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHFhbmRhX1VJLm9uTmV4dCA9IG9uTmV4dDtcbiAgICAgICAgICAgIG9uTmV4dCgpO1xuICAgICAgICB9LCBlID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZSA9PSBcInN0cmluZ1wiKVxuICAgICAgICAgICAgICAgIGFsZXJ0KGUpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIGFsZXJ0KEpTT04uc3RyaW5naWZ5KGUpKTtcbiAgICAgICAgICAgIGlmIChwdlFMaXN0KVxuICAgICAgICAgICAgICAgIHFsaXN0X1VJLnNob3cocHZRTGlzdCk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgdGhyb3cgXCJCVUdcIjtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBjbGlfaWRVSS5zaG93KCk7XG4gICAgR1NoZWV0LmxvYWQoKTtcbiAgICB3aW5kb3dbXCJnU2hlZXRcIl0gPSBHU2hlZXQ7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWFXNWtaWGd1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SXVMaTh1TGk5emNtTXZkSE12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUTBFc1UwRkJVeXhGUVVGRkxFTkJRVU1zUlVGQlZUdEpRVU55UWl4UFFVRlBMRkZCUVZFc1EwRkJReXhqUVVGakxFTkJRVU1zUlVGQlJTeERRVUZGTEVOQlFVTTdRVUZEY2tNc1EwRkJRenRCUVVORUxGTkJRVk1zUlVGQlJTeERRVUYzUXl4UFFVRlZPMGxCUXpWRUxFOUJRVThzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRCUVVONFF5eERRVUZETzBGQlEwUXNVMEZCVXl4SFFVRkhMRU5CUVVNc1UwRkJhVUlzUlVGQlJTeFBRVUZwUWl4RlFVRkZMRVZCUVZjc1JVRkJSU3hUUVVGeFFqdEpRVU53Uml4TlFVRk5MRVZCUVVVc1IwRkJSeXhGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEY0VJc1JVRkJSU3hEUVVGRExGTkJRVk1zUjBGQlJ5eFRRVUZUTEVOQlFVTTdTVUZEZWtJc1QwRkJUeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTnNReXhKUVVGSkxFVkJRVVU3VVVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkhMRVZCUVVVc1EwRkJRenRKUVVOdVFpeEpRVUZKTEZOQlFWTTdVVUZCUlN4UFFVRlBMRU5CUVVNc1JVRkJSU3hGUVVGRkxGTkJRVk1zUTBGQlF5eERRVUZETzBsQlEzUkRMRTlCUVU4c1JVRkJSU3hEUVVGRE8wRkJRMWdzUTBGQlF6dEJRVU5FTEZOQlFWTXNTVUZCU1N4RFFVRkRMRWRCUVdkQ0xFVkJRVVVzUjBGQlZ6dEpRVU14UXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0QlFVTXpRaXhEUVVGRE8wRkJRMFFzVTBGQlV5eEpRVUZKTEVOQlFVTXNSMEZCWjBJc1JVRkJSU3hIUVVGWE8wbEJRekZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzBGQlEzaENMRU5CUVVNN1FVRkRSQ3hUUVVGVExFMUJRVTBzUTBGQlF5eEhRVUZuUWp0SlFVTXZRaXhIUVVGSExFTkJRVU1zVTBGQlV5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTndRaXhEUVVGRE8wRkJRMFFzVTBGQlV5eFBRVUZQTEVOQlFVTXNSMEZCWjBJc1JVRkJSU3hGUVVGaE8wbEJReTlETEVkQlFVY3NRMEZCUXl4blFrRkJaMElzUTBGQlF5eFBRVUZQTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRia01zUTBGQlF6dEJRVU5FTEZOQlFWTXNUVUZCVFN4RFFVRkRMRVZCUVdFN1NVRkROVUlzVFVGQlRTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFMUJRVTBzUlVGQlJTeEZRVUZGTEVOQlFVTXNRMEZCUXp0QlFVTnlReXhEUVVGRE8wRkJSVVFzVFVGQlRTeHBRa0ZCYVVJN1NVRkZkRUlzV1VGQmNVSXNSMEZCVnp0UlFVRllMRkZCUVVjc1IwRkJTQ3hIUVVGSExFTkJRVkU3VVVGREwwSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhGUVVGRkxFTkJRVU03U1VGRGFrSXNRMEZCUXp0SlFVTkVMRWxCUVVrc1NVRkJTVHRSUVVOUUxFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0UlFVTmtMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXp0SlFVTXpRaXhEUVVGRE8wbEJRMFFzU1VGQlNTeEpRVUZKTEVOQlFVTXNTVUZCWXp0UlFVTjBRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJRenRSUVVNeFFpeEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNN1NVRkRkRUlzUTBGQlF6dEpRVU5FTEVsQlFWa3NWVUZCVlR0UlFVTnlRaXhQUVVGUExFbEJRVWtzUTBGQlF5eEhRVUZITEVkQlFVY3NiMEpCUVc5Q0xFTkJRVU03U1VGRGVFTXNRMEZCUXp0SlFVTkVMRWRCUVVjc1EwRkJReXhIUVVGWE8xRkJRMlFzVDBGQlR5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTVUZEY0VNc1EwRkJRenRKUVVORUxFZEJRVWNzUTBGQlF5eEhRVUZYTzFGQlEyUXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdVVUZEY2tJc1NVRkJTU3hEUVVGRExHRkJRV0VzUlVGQlJTeERRVUZETzBsQlEzUkNMRU5CUVVNN1NVRkRSQ3hoUVVGaExFTkJRVU1zUjBGQlZ6dFJRVU40UWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU03VVVGRFpDeEpRVUZKTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTTdXVUZET1VJc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0SlFVTm9RaXhEUVVGRE8wbEJSVVFzVFVGQlRTeERRVUZETEVkQlFWYzdVVUZEYWtJc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzFGQlEyUXNUVUZCVFN4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1VVRkRiRU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXp0WlFVRkZMRTlCUVU4c1MwRkJTeXhEUVVGRE8xRkJRM2hDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTjRRaXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVOQlFVTTdVVUZEY2tJc1QwRkJUeXhKUVVGSkxFTkJRVU03U1VGRFlpeERRVUZETzBsQlEwUXNTMEZCU3p0UlFVTktMRmxCUVZrc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMUZCUTNwRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0SlFVTm1MRU5CUVVNN1NVRkRUeXhOUVVGTk8xRkJRMklzVFVGQlRTeEpRVUZKTEVkQlFVY3NXVUZCV1N4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTTdVVUZEYmtRc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJUdFpRVU5XTEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSU3hEUVVGRE8xTkJRMmhDTzJGQlFVMDdXVUZEVGl4SlFVRkpPMmRDUVVOSUxFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03WjBKQlF6bENMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hSUVVGUkxFTkJRVU1zUlVGQlJUdHZRa0ZEYWtVc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdhVUpCUTJoQ08zRkNRVUZOTzI5Q1FVTk9MRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETzJsQ1FVTnNRanRoUVVORU8xbEJRVU1zVDBGQlR5eERRVUZETEVWQlFVVTdaMEpCUTFnc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdZVUZEYUVJN1UwRkRSRHRSUVVORUxFbEJRVWtzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXp0SlFVTjBRaXhEUVVGRE8wbEJRMDhzWVVGQllUdFJRVU53UWl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRSUVVONFF5eFpRVUZaTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGVkxFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdTVUZETjBNc1EwRkJRenREUVVORU8wRkJRMFFzVFVGQlRTeGxRVUZsTzBsQlQzQkNMRmxCUVZrc1VVRkJaMElzUlVGQlJTeFBRVUV3UWl4RlFVRkZMRlZCUVd0RExFZEJRVWNzUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXp0UlFVTjJSeXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UlFVRlJMRU5CUVcxQ0xFTkJRVU03VVVGRE0wTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1IwRkJSeXhGUVVGRkxFTkJRVU1zVVVGQlVTeEhRVUZITEV0QlFVc3NRMEZCY1VJc1EwRkJRenRSUVVOdVJDeEpRVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhMRVZCUVVVc1EwRkJReXhSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZ4UWl4RFFVRkRPMUZCUTNwRUxFbEJRVWtzUTBGQlF5eFJRVUZSTEVkQlFVY3NSVUZCUlN4RFFVRkRMRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRWE5DTEVOQlFVTTdVVUZETjBRc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTTdVVUZEZGtJc1NVRkJTU3hEUVVGRExFOUJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTTdVVUZEZGtJc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETzFGQlEyeENMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTEVkQlFVY3NSVUZCUlR0WlFVTXpRaXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03VVVGRGNFTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRTaXhEUVVGRE8wbEJRMFFzU1VGQlNUdFJRVU5JTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFMUJRVTBzUTBGQlF5eERRVUZETzFGQlEzaENMRTFCUVUwc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRPMUZCUTJoRExFMUJRVTBzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNN1VVRkRia0lzVFVGQlRTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRPMUZCUTFnc1RVRkJUU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETzFGQlEyeENMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVTdXVUZEY0VJc1RVRkJUU3hGUVVGRkxFZEJRVWNzUjBGQlJ5eERRVUZETEVsQlFVa3NSVUZCUlN4RlFVRkZMRVZCUVVVc1UwRkJVeXhGUVVGRkxFZEJRVWNzUlVGQlJUdG5Ra0ZEZUVNc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVTjRRaXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5JTEVWQlFVVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03VVVGRGNFSXNRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRTQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZMRU5CUVVNN1NVRkRka0lzUTBGQlF6dEpRVU5FTEVsQlFVazdVVUZEU0N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0SlFVTjZRaXhEUVVGRE8wbEJRMDhzVjBGQlZ5eERRVUZETEVsQlFWazdVVUZETDBJc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SlFVTndRaXhEUVVGRE8wTkJRMFE3UVVGRFJDeE5RVUZOTEZGQlFWRTdTVUZKWWl4WlFVRlpMRmxCUVhkQ0xFZEJRVWNzUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXp0UlFVTXZReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UlFVRlJMRU5CUVcxQ0xFTkJRVU03VVVGRE0wTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1IwRkJSeXhGUVVGRkxFTkJRVU1zV1VGQldTeERRVUZ6UWl4RFFVRkRPMUZCUTJwRUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NVMEZCVXl4RFFVRkJPMUZCUTNoQ0xFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXp0UlFVTnNRaXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVN1dVRkRkRUlzU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMUZCUTJoQ0xFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEwb3NRMEZCUXp0SlFVTkVMRWxCUVVrN1VVRkRTQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenRKUVVONlFpeERRVUZETzBsQlEwUXNTVUZCU1R0UlFVTklMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRPMGxCUTNwQ0xFTkJRVU03UTBGRFJEdEJRVTFFTEUxQlFVMHNWVUZCVlR0SlFVbG1PMUZCUkVFc1lVRkJVU3hIUVVGSExFTkJRVU1zU1VGQlZ5eEZRVUZGTEVWQlFVVXNSMEZCUnl4RFFVRkRMRU5CUVVFN1VVRkZPVUlzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4RlFVRkZMRU5CUVVNc1QwRkJUeXhEUVVGdFFpeERRVUZETzFGQlF6RkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCY1VJc1EwRkJRenRKUVVNNVF5eERRVUZETzBsQlEwUXNTVUZCU1N4RFFVRkRMRXRCUVdNN1VVRkRiRUlzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1RVRkJUU3hEUVVGRExFTkJRVU03VVVGRGVFSXNUVUZCVFN4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF6dFJRVU51UWl4TlFVRk5MRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03VVVGRFdDeE5RVUZOTEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVFN1VVRkRha0lzUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHRaUVVOcVFpeE5RVUZOTEVWQlFVVXNSMEZCUnl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExGVkJRVlVzUlVGQlJTeEZRVUZGTEVWQlFVVXNVMEZCVXl4RlFVRkZMRWRCUVVjc1JVRkJSVHRuUWtGRGFFUXNTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFpRVU5zUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRaUVVOSUxFVkJRVVVzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1VVRkRjRUlzUTBGQlF5eERRVUZETEVOQlFVRTdTVUZEU0N4RFFVRkRPMGxCUTBRc1NVRkJTVHRSUVVOSUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRE8wbEJRM3BDTEVOQlFVTTdRMEZEUkR0QlFYZENSQ3hOUVVGTkxFOUJRVTg3U1VGUFdqdFJRVVpSTEZWQlFVc3NSMEZCY1VJc1JVRkJSU3hEUVVGQk8xRkJRM0JETEZkQlFVMHNSMEZCUnl4RFFVRkRMRTlCUVd0Q0xFVkJRVVVzUlVGQlJTeEhRVUZITEVOQlFVTXNRMEZCUVR0UlFVVnVReXhKUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVcxQ0xFTkJRVU03VVVGRE1VTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhGUVVGRkxFTkJRVU1zWjBKQlFXZENMRU5CUVcxQ0xFTkJRVU03VVVGRGRrUXNTVUZCU1N4RFFVRkRMRTlCUVU4c1IwRkJSeXhGUVVGRkxFTkJRVU1zWVVGQllTeERRVUZ6UWl4RFFVRkRPMUZCUTNSRUxFbEJRVWtzUTBGQlF5eEhRVUZITEVkQlFVY3NSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJiMElzUTBGQlF6dFJRVU12UXl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03VVVGRGJFSXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVOQlFVTXNTVUZCU1N4RFFVRkRMRlZCUVZVc1JVRkJSU3hEUVVGRExFTkJRVU03U1VGRGFFUXNRMEZCUXp0SlFVTkVMRWxCUVVrc1EwRkJReXhOUVVGbExFVkJRVVVzUjBGQlZ6dFJRVU5vUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0UlFVTjRRaXhOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRPMUZCUXk5Q0xFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0UlFVTnFRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTm9RaXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdVVUZEYkVJc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTnNRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1dVRkRkRUlzVFVGQlRTeERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xbEJRM0JDTEUxQlFVMHNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dFpRVU53UWl4RFFVRkRMRU5CUVVNc1UwRkJVeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEYkVJc1EwRkJReXhEUVVGRExGTkJRVk1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTJ4Q0xFOUJRVThzUTBGQlF5eERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZPMmRDUVVObUxFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNN1owSkJRM0pDTEVsQlFVa3NRMEZCUXl4SFFVRkhMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03WjBKQlEyNUNMRWxCUVVrc1EwRkJReXhIUVVGSExFVkJRVVVzVTBGQlV5eERRVUZETEVOQlFVTTdXVUZEZEVJc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRFNDeFBRVUZQTEVOQlFVTXNRMEZCUXl4RlFVRkZMRWRCUVVjc1JVRkJSVHRuUWtGRFppeEpRVUZKTEVOQlFVTXNSMEZCUnl4RlFVRkZMRk5CUVZNc1EwRkJReXhEUVVGRE8yZENRVU55UWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhGUVVGRkxGTkJRVk1zUTBGQlF5eERRVUZETzJkQ1FVTnlRaXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMWxCUTNCQ0xFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEwZ3NTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF6dFpRVU55UWl4SlFVRkpMRU5CUVVNc1EwRkJReXhGUVVGRkxHTkJRV01zUTBGQlF5eERRVUZETzFsQlEzaENMRWxCUVVrc1EwRkJReXhEUVVGRExFVkJRVVVzWTBGQll5eERRVUZETEVOQlFVTTdXVUZEZUVJc1IwRkJSeXhEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnVRaXhIUVVGSExFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTI1Q0xFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNXVUZCV1N4RFFVRkRMRU5CUVVNN1dVRkRlRUlzVVVGQlVTeERRVUZETEZkQlFWY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVNeFFpeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF6dFJRVU4wUWl4RFFVRkRMRU5CUVVNc1EwRkJRenRSUVVOSUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1NVRkRia0lzUTBGQlF6dEpRVU5FTEVsQlFVazdVVUZEU0N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0SlFVTjZRaXhEUVVGRE8wbEJRMDhzVlVGQlZUdFJRVU5xUWl4TlFVRk5MRTlCUVU4c1IwRkJZeXhGUVVGRkxFTkJRVU03VVVGRE9VSXNUVUZCVFN4WlFVRlpMRWRCUVdFc1JVRkJSU3hEUVVGRE8xRkJRMnhETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMWxCUXpOQ0xFbEJRVWtzUTBGQlF5eERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRE8yZENRVUZGTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03YVVKQlEyNUVMRWxCUVVrc1EwRkJReXhEUVVGRExGTkJRVk1zUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RFFVRkRPMmRDUVVGRkxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN08yZENRVU4yUkN4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTXZRaXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU5JTEVsQlFVa3NXVUZCV1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFVkJRVVU3V1VGRE5VSXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXcwUWtGQk5FSXNSMEZCUnl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEY2tVc1QwRkJUenRUUVVOUU8xRkJRMFFzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRKUVVOMFFpeERRVUZETzBsQlEwOHNUMEZCVHl4RFFVRkRMRWRCUVZjN1VVRkRNVUlzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4VFFVRlRMRWRCUVVjc1IwRkJSeXhEUVVGRE8wbEJRekZDTEVOQlFVTTdRMEZEUkR0QlFWRkVMRTFCUVUwc1UwRkJVenRKUVVOa0xGbEJRWEZDTEUxQlFXTXNSVUZCVnl4SlFVRm5RanRSUVVGNlF5eFhRVUZOTEVkQlFVNHNUVUZCVFN4RFFVRlJPMUZCUVZjc1UwRkJTU3hIUVVGS0xFbEJRVWtzUTBGQldUdEpRVVU1UkN4RFFVRkRPMGxCUTBRc1QwRkJUenRSUVVOT0xFbEJRVWtzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc1RVRkJUVHRaUVVGRkxFOUJRVThzVTBGQlV5eERRVUZETzFGQlEzQkVMRTlCUVU4N1dVRkRUaXhOUVVGTkxFVkJRVVVzU1VGQlNTeERRVUZETEUxQlFVMDdXVUZEYmtJc1QwRkJUeXhGUVVGRkxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHp0WlFVTXhRaXhWUVVGVkxFVkJRVVVzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxPMU5CUXpOQ0xFTkJRVUU3U1VGRFJpeERRVUZETzBOQlEwUTdRVUZEUkN4SlFVRlZMRkZCUVZFc1EwRnRRbXBDTzBGQmJrSkVMRmRCUVZVc1VVRkJVVHRKUVVOcVFpeFRRVUZuUWl4TFFVRkxMRU5CUVVNc1EwRkJVenRSUVVNNVFpeE5RVUZOTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFGQlF6RkNMRWxCUVVrc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF6dFpRVUZGTEU5QlFVOHNVMEZCVXl4RFFVRkRPMUZCUTJwRExFOUJRVThzU1VGQlNTeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1NVRkRkRUlzUTBGQlF6dEpRVXBsTEdOQlFVc3NVVUZKY0VJc1EwRkJRVHRKUVVORUxGTkJRV2RDTEVkQlFVY3NRMEZCUXl4RFFVRnRRanRSUVVOMFF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0WlFVRkZMRTlCUVU4c1JVRkJSU3hEUVVGRE8xRkJRMnhDTEU5QlFVOHNRMEZCUXl4RFFVRkRMRmRCUVZjc1JVRkJSU3hEUVVGRE8wbEJRM2hDTEVOQlFVTTdTVUZJWlN4WlFVRkhMRTFCUjJ4Q0xFTkJRVUU3U1VGRFJDeFRRVUZuUWl4TFFVRkxPMUZCUTNCQ0xFOUJRVThzVVVGQlVTeERRVUZETEVsQlFVa3NTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJRenRKUVVNM1FpeERRVUZETzBsQlJtVXNZMEZCU3l4UlFVVndRaXhEUVVGQk8wbEJRMFFzVTBGQlowSXNVVUZCVVN4RFFVRkRMRWxCUVZVN1VVRkRiRU1zVDBGQlR5eEpRVUZKTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU51UXl4RFFVRkRPMGxCUm1Vc2FVSkJRVkVzVjBGRmRrSXNRMEZCUVR0SlFVTkVMRk5CUVdkQ0xGVkJRVlVzUTBGQlF5eEpRVUZWTzFGQlEzQkRMRTlCUVU4c1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRWRCUVVjc1JVRkJSU3hIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRPMGxCUXk5RkxFTkJRVU03U1VGR1pTeHRRa0ZCVlN4aFFVVjZRaXhEUVVGQk8wRkJRMFlzUTBGQlF5eEZRVzVDVXl4UlFVRlJMRXRCUVZJc1VVRkJVU3hSUVcxQ2FrSTdRVUZGUkN4VFFVRlRMRmRCUVZjc1EwRkJReXhMUVVGWkxFVkJRVVVzUjBGQlZ5eEZRVUZGTEV0QlFXVXNSVUZCUlN4SlFVRjVRanRKUVVONlJpeEpRVUZKTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hIUVVGSExFZEJRVWNzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUXk5RExFbEJRVWtzUzBGQlN5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOeVFpeEpRVUZKTEZGQlFWRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTNoRExFbEJRVWtzVVVGQlVTeEhRVUYxUWl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdTVUZEZEVRc1NVRkJTU3hSUVVGUkxFZEJRVWNzVVVGQlVTeERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU40UXl4SlFVRkpMRk5CUVZNc1IwRkJSeXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRia01zVFVGQlRTeFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8wbEJRMmhETEVsQlFVa3NTMEZCU3l4SlFVRkpMRVZCUVVVN1VVRkJSU3hMUVVGTExFZEJRVWNzVVVGQlVTeERRVUZETzBsQlEyeERMRWxCUVVrc1MwRkJTeXhKUVVGSkxGRkJRVkVzU1VGQlNTeExRVUZMTEVsQlFVa3NUMEZCVHl4SlFVRkpMRXRCUVVzc1NVRkJTU3hUUVVGVExFVkJRVVU3VVVGRGFFVXNTVUZCU1N4RFFVRkRMSGxFUVVGNVJDeERRVUZETEVOQlFVTTdVVUZEYUVVc1MwRkJTeXhIUVVGSExGRkJRVkVzUTBGQlF6dExRVU5xUWp0SlFVTkVMRWxCUVVrc1MwRkJTeXhKUVVGSkxFOUJRVThzU1VGQlNTeExRVUZMTEVsQlFVa3NVMEZCVXl4RlFVRkZPMUZCUXpORExFbEJRVWs3V1VGRFNDeEpRVUZKTEVOQlFVTXNVVUZCVVN4SlFVRkpMRU5CUVVNc1VVRkJVU3hKUVVGSkxFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4TFFVRkxMRU5CUVVNc1UwRkJVeXhEUVVGRExFVkJRVVU3WjBKQlEyeEZMRTFCUVUwc1JVRkJSU3hEUVVGRE8yRkJRMVE3V1VGRFJDeE5RVUZOTEVsQlFVa3NSMEZCVlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlJ5eEZRVUZGTEV0QlFVc3NSVUZCUlN4UlFVRlJMRVZCUVVVc1VVRkJVU3hGUVVGRkxGRkJRVkVzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRWRCUVVjc1JVRkJSU3hUUVVGVExFVkJRVVVzUTBGQlF6dFpRVU42Unl4UFFVRlBMRWxCUVVrc1EwRkJRenRUUVVOYU8xRkJRVU1zVjBGQlN6dFpRVU5PTEVsQlFVa3NRMEZCUXl4dlJVRkJiMFVzUTBGQlF5eERRVUZETzFsQlF6TkZMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU03V1VGRGFrSXNVMEZCVXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVOa0xGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTTdXVUZEY2tJc1VVRkJVU3hIUVVGSExFZEJRVWNzUTBGQlF6dFpRVU5tTEZGQlFWRXNSMEZCUnl4VFFVRlRMRU5CUVVNN1UwRkRja0k3UzBGRFJEdEpRVU5FTEVsQlFVa3NVMEZCVXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVOQlFVTTdVVUZEZEVNc1NVRkJTU3hEUVVGRExIZEVRVUYzUkN4RFFVRkRMRU5CUVVNN1NVRkRhRVVzU1VGQlNTeFJRVUZSTEVsQlFVa3NVMEZCVXp0UlFVTjRRaXhKUVVGSkxFTkJRVU1zZFVSQlFYVkVMRU5CUVVNc1EwRkJRenRKUVVNdlJDeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenRSUVVOdVFpeEpRVUZKTEVOQlFVTXNjMFJCUVhORUxFTkJRVU1zUTBGQlF6dEpRVU01UkN4SlFVRkpMRkZCUVZFc1NVRkJTU3hUUVVGVE8xRkJRM2hDTEVsQlFVa3NRMEZCUXl4MVJFRkJkVVFzUTBGQlF5eERRVUZETzBsQlF5OUVMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVU03U1VGRFpDeFJRVUZSTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUTNKQ0xGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTTdTVUZEY2tJc1VVRkJVU3hIUVVGSExGTkJRVk1zUTBGQlF6dEpRVU55UWl4TlFVRk5MRWxCUVVrc1IwRkJWU3hGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRXRCUVVzc1JVRkJSU3hSUVVGUkxFVkJRVVVzVVVGQlVTeEZRVUZGTEZGQlFWRXNSVUZCUlN4UlFVRlJMRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeEhRVUZITEVWQlFVVXNVMEZCVXl4RlFVRkZMRU5CUVVNN1NVRkRia2dzVDBGQlR5eEpRVUZKTEVOQlFVTTdRVUZEWWl4RFFVRkRPMEZCUTBRc1UwRkJVeXhsUVVGbExFTkJRVU1zUzBGQldUdEpRVU53UXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03U1VGRGFFSXNUVUZCVFN4SFFVRkhMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhWUVVGVkxFTkJRVU03U1VGRE9VTXNUVUZCVFN4WlFVRlpMRWRCUVVjc1EwRkJReXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRkZCUVZFc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4RFFVRkRPMGxCUnpsRUxFMUJRVTBzUzBGQlN5eEhRVUZITEV0QlFVc3NSMEZCUnl4SlFVRkpMRWRCUVVjc1IwRkJSeXhIUVVGSExFbEJRVWtzUjBGQlJ5eEhRVUZITEVOQlFVTTdTVUZET1VNc1RVRkJUU3hOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJReXhEUVVGRExFdEJRVXNzUlVGQlJTeFJRVUZSTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhSUVVGUkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNVVUZCVVN4SlFVRkpMRU5CUVVNc1JVRkJSU3hSUVVGUkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVVndTQ3hQUVVGUExFVkJRVVVzUzBGQlN5eEZRVUZGTEUxQlFVMHNSVUZCUlN4RFFVRkRPMEZCUXpGQ0xFTkJRVU03UVVGRFJDeEpRVUZWTEUxQlFVMHNRMEYzUjJZN1FVRjRSMFFzVjBGQlZTeE5RVUZOTzBsQlEyWXNTVUZCU1N4UlFVRlJMRWRCUVVjc1MwRkJTeXhEUVVGQk8wbEJRM0JDTEZOQlFXZENMRWxCUVVrN1VVRkRia0lzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4alFVRmpMRVZCUVVVc1IwRkJSeXhGUVVGRk8xbEJRemxDTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNN1VVRkRha0lzUTBGQlF5eERRVUZETEVOQlFVTTdTVUZEU2l4RFFVRkRPMGxCU21Vc1YwRkJTU3hQUVVsdVFpeERRVUZCTzBsQlEwUXNVMEZCWjBJc1NVRkJTU3hEUVVGRExGRkJRV2RDTEVWQlFVVXNUVUZCVFN4SFFVRkhMRWRCUVVjc1JVRkJSU3hIUVVGSExFTkJRVU1zUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRk5MRVZCUVVVc1JVRkJSU3hIUVVGSExFTkJRVU03VVVGRGFrWXNTVUZCU1N4RFFVRkRMRkZCUVZFN1dVRkJSU3hQUVVGUExFdEJRVXNzUTBGQlF6dFJRVU0xUWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF6dFpRVU5vUWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRaUVVOc1FpeExRVUZMTEVWQlFVVXNPRU5CUVRoRE8xbEJRM0pFTEdGQlFXRXNSVUZCUlN4RFFVRkRMREJFUVVFd1JDeERRVUZETzFOQlF6TkZMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVTdXVUZEV0N4TlFVRk5MRVZCUVVVc1EwRkJRenRaUVVOVUxFbEJRVWtzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4bFFVRmxMRVZCUVVVc1EwRkJReXhWUVVGVkxFTkJRVU1zUjBGQlJ5eEZRVUZGTzJkQ1FVTm9SQ3hQUVVGQkxGRkJRVkVzUlVGQlJTeERRVUZETzFsQlExb3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhsUVVGbExFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1ZVRkJWU3hGUVVGRkxFVkJRVVU3WjBKQlF6ZEVMRWxCUVVrc1ZVRkJWVHR2UWtGQlJTeFBRVUZCTEZGQlFWRXNSVUZCUlN4RFFVRkRPenR2UWtGRGRFSXNUMEZCUVN4VFFVRlRMRVZCUVVVc1EwRkJRenRaUVVOc1FpeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTktMRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTmFMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU5XTEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUTBnc1QwRkJUeXhKUVVGSkxFTkJRVU03U1VGRFlpeERRVUZETzBsQmJFSmxMRmRCUVVrc1QwRnJRbTVDTEVOQlFVRTdTVUZEUkN4VFFVRm5RaXhaUVVGWk8xRkJRek5DTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1pVRkJaU3hGUVVGRkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdTVUZEZGtNc1EwRkJRenRKUVVabExHMUNRVUZaTEdWQlJUTkNMRU5CUVVFN1NVRkRWU3hsUVVGUkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkJPMGxCUTNCQ0xHZENRVUZUTEVkQlFVY3NSMEZCUnl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGQk8wbEJRMmhETEZOQlFXZENMRkZCUVZFc1EwRkJReXhOUVVGakxFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNTMEZCWXl4RlFVRkZMRVZCUVVVc1IwRkJSeXhEUVVGRExFVkJRVVVzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCVFN4RlFVRkZMRVZCUVVVc1IwRkJSeXhEUVVGRE8xRkJRM0JITEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExGbEJRVmtzUTBGQlF5eEhRVUZITEVOQlFVTTdXVUZEYmtNc1lVRkJZU3hGUVVGRkxFMUJRVTA3VTBGRGNrSXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkRUaXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEZOQlFWTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlEzSkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zU1VGQlNTeFRRVUZUTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZEYkVRc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVOcVFpeEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRiRU1zUTBGQlF6dEpRVkpsTEdWQlFWRXNWMEZSZGtJc1EwRkJRVHRKUVVORUxGTkJRVk1zVjBGQlZ5eERRVUZETEUxQlFXTXNSVUZCUlN4TFFVRmhMRVZCUVVVc1UwRkJVeXhIUVVGSExFTkJRVU1zVFVGQmEwSXNSVUZCUlN4RlFVRkZMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVMHNSVUZCUlN4RlFVRkZMRWRCUVVjc1EwRkJRenRSUVVOdVNDeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhaUVVGWkxFTkJRVU1zVFVGQlRTeERRVUZETEVkQlFVY3NRMEZCUXp0WlFVTXhReXhoUVVGaExFVkJRVVVzVFVGQlRUdFpRVU55UWl4TFFVRkxMRVZCUVVVc1MwRkJTenRaUVVOYUxHbENRVUZwUWl4RlFVRkZMRk5CUVZNN1UwRkROVUlzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZEVGl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExGTkJRVk1zUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVOdVF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRiRU1zUTBGQlF6dEpRVU5FTEZOQlFWTXNVVUZCVVN4RFFVRkRMRTFCUVdNc1JVRkJSU3hMUVVGaExFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNUVUZCYTBJc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF5eEZRVUZGTEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVUwc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF6dFJRVU5vU0N4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFpRVUZaTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJRenRaUVVNeFF5eGhRVUZoTEVWQlFVVXNUVUZCVFR0WlFVTnlRaXhMUVVGTExFVkJRVVVzUzBGQlN6dFpRVU5hTEdsQ1FVRnBRaXhGUVVGRkxHMUNRVUZ0UWp0VFFVTjBReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVU5PTEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1UwRkJVeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUTI1RExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTnNReXhEUVVGRE8wbEJRMFFzVTBGQlowSXNZVUZCWVN4RFFVRkRMRXRCUVZrc1JVRkJSU3hUUVVGVExFZEJRVWNzUTBGQlF5eExRVUZqTEVWQlFVVXNSVUZCUlN4SFFVRkhMRU5CUVVNc1JVRkJSU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZOTEVWQlFVVXNSVUZCUlN4SFFVRkhMRU5CUVVNN1VVRkRka2NzVFVGQlRTeE5RVUZOTEVkQlFVY3NTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJRenRSUVVNMVFpeE5RVUZOTEZOQlFWTXNSMEZCUnl4SFFVRkhMRWRCUVVjc1MwRkJTeXhEUVVGRExGVkJRVlVzUjBGQlJ5eEhRVUZITEVOQlFVTTdVVUZETDBNc1RVRkJUU3hYUVVGWExFZEJRVWNzVTBGQlV5eEhRVUZITEV0QlFVc3NRMEZCUXp0UlFVTjBReXhSUVVGUkxFTkJRVU1zVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlN4TFFVRkxMRU5CUVVNc1JVRkJSVHRaUVVOeVF5eE5RVUZOTEUxQlFVMHNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRja01zU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVN1owSkJRMnhDTEV0QlFVc3NRMEZCUXl4elJrRkJjMFlzUTBGQlF5eERRVUZETzJkQ1FVTTVSaXhQUVVGUE8yRkJRMUE3V1VGRFJDeE5RVUZOTEZWQlFWVXNSMEZCUnl4VFFVRlRMRWRCUVVjc1QwRkJUeXhIUVVGSExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNSRUxGZEJRVmNzUTBGQlF5eE5RVUZOTEVWQlFVVXNWVUZCVlN4RlFVRkZMRXRCUVVzc1EwRkJReXhGUVVGRk8yZENRVU4yUXl4SlFVRkpMRkZCUVZFc1IwRkJZU3hGUVVGRkxFTkJRVU03WjBKQlF6VkNMRTFCUVUwc1MwRkJTeXhIUVVGWkxFdEJRVXNzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVU3YjBKQlF6ZERMRXRCUVVzc1NVRkJTU3hEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJUdDNRa0ZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzI5Q1FVTnlSQ3hKUVVGSkxFbEJRVWtzUjBGQlJ5eERRVUZETEVOQlFWTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dHZRa0ZET1VRc1QwRkJUeXhYUVVGWExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTXZReXhEUVVGRExFTkJRVU1zUTBGQlF6dG5Ra0ZEU0N4SlFVRkpMRkZCUVZFc1EwRkJReXhOUVVGTkxFZEJRVWNzUTBGQlF6dHZRa0ZCUlN4TFFVRkxMRU5CUVVNc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRPenR2UWtGREwwTXNVMEZCVXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xbEJRM1pDTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMUZCUTI1Q0xFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEyNUNMRU5CUVVNN1NVRjBRbVVzYjBKQlFXRXNaMEpCYzBJMVFpeERRVUZCTzBsQlEwUXNVMEZCWjBJc1ZVRkJWU3hEUVVGRExFdEJRV01zUlVGQlJTeFRRVUZUTEVkQlFVY3NSMEZCUnl4RlFVRkZMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVMHNSVUZCUlN4RlFVRkZMRWRCUVVjc1EwRkJRenRSUVVONFJpeEpRVUZKTEVkQlFVY3NSMEZCUnl4SlFVRkpMRWRCUVVjc1JVRkJiVUlzUTBGQlF6dFJRVU55UXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTzFsQlEycENMRTFCUVUwc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRPMWxCUXpsQ0xFbEJRVWtzUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4TlFVRk5MRU5CUVVNN1owSkJRVVVzUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4TlFVRk5MRU5CUVVVc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdPMmRDUVVONlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVVUZETTBJc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRFNDeEhRVUZITEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFMUJRVTBzUlVGQlJTeEZRVUZGTzFsQlF6ZENMRzFDUVVGdFFpeERRVUZETEUxQlFVMHNSVUZCUlN4TFFVRkxMRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUTBGQlF5eERRVUZETzFGQlEzUkVMRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRMG9zUTBGQlF6dEpRVlpsTEdsQ1FVRlZMR0ZCVlhwQ0xFTkJRVUU3U1VGRFJDeFRRVUZUTEcxQ1FVRnRRaXhEUVVGRExFMUJRV01zUlVGQlJTeExRVUZqTEVWQlFVVXNVMEZCVXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hIUVVGSExFTkJRVU1zUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRk5MRVZCUVVVc1JVRkJSU3hIUVVGSExFTkJRVU03VVVGRE1VY3NTVUZCU1N4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFbEJRVWtzVFVGQlRTeERRVUZETzFsQlFVVXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRNMFFzU1VGQlNTeE5RVUZOTEVkQlFVY3NSVUZCUlN4aFFVRmhMRVZCUVVVc1RVRkJUU3hGUVVGRkxFTkJRVU03VVVGRGRrTXNTVUZCU1N4SlFVRkpMRWRCUVVjN1dVRkRWaXhuUWtGQlowSXNSVUZCUlN4TFFVRkxPMWxCUTNaQ0xFbEJRVWtzUlVGQlJTeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zWlVGQlpTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTNoRExFTkJRVU03VVVGRFJpeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhaUVVGWkxFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4TlFVRk5MRVZCUVVVc1NVRkJTU3hEUVVGRE8yRkJRemxFTEVsQlFVa3NRMEZEU2l4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExGTkJRVk1zUlVGQlJTeEZRVU5vUWl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTJ4Q0xFTkJRVU03UVVGRFJpeERRVUZETEVWQmVFZFRMRTFCUVUwc1MwRkJUaXhOUVVGTkxGRkJkMGRtTzBGQlEwUXNUVUZCVFN4VlFVRlZMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJRM1JDTEUxQlFVMHNVVUZCVVR0SlFVZGlMRmxCUVZrc1RVRkJaVHRSUVVSdVFpeGhRVUZSTEVkQlFYZENMRk5CUVZNc1EwRkJRenRSUVVWcVJDeEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRTFCUVUwc1EwRkJRenRSUVVOeVFpeEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1NVRkRZaXhEUVVGRE8wbEJRMFFzU1VGQlNTeERRVUZETEU5QlFXMUNPMUZCUTNaQ0xFbEJRVWtzVDBGQlR6dFpRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03VVVGRGJFTXNTVUZCU1N4RFFVRkRMRTlCUVU4N1dVRkJSU3hKUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTzJkQ1FVRkZMRTFCUVUwc1MwRkJTeXhEUVVGRE8xRkJRemRETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRSUVVOYUxFbEJRVWtzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRWxCUVVrc1EwRkJRenRaUVVGRkxFOUJRVThzUlVGQlJTeE5RVUZOTEVWQlFVVXNSVUZCUlN4RlFVRkZMRTlCUVU4c1JVRkJSU3huUWtGQlowSXNSVUZCUlN4RFFVRkRPMUZCUlRsRkxFbEJRVWtzVDBGQlR5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTnFRaXhOUVVGTkxHTkJRV01zUjBGQlJ5eERRVUZETEVsQlFWY3NSVUZCUlN4RlFVRkZMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzU1VGQlNTeFJRVUZSTzFsQlF6ZEVMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4SFFVRkhMRkZCUVZFc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeEpRVUZKTEVWQlFVVXNRMEZCUXl4RFFVRkRPMUZCUTNSRkxFbEJRVWtzWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdFpRVU51UXl4TlFVRk5MRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRVZCUVVVc1ZVRkJWU3hEUVVGRExFTkJRVU03V1VGRGFFUXNUVUZCVFN4UFFVRlBMRWRCUVVjc2FVSkJRV2xDTEVOQlFVTTdXVUZEYkVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF5eFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRE8xbEJRMnBFTEVsQlFVa3NRMEZCUXl4UlFVRlJMRWRCUVVjc1RVRkJUU3hEUVVGRE8xbEJRM1pDTEU5QlFVOHNSVUZCUlN4TlFVRk5MRVZCUVVVc1QwRkJUeXhGUVVGRkxFTkJRVU03VTBGRE0wSTdZVUZCVFR0WlFVTk9MRTFCUVUwc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1JVRkJSU3hWUVVGVkxFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExHTkJRV01zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTJoR0xFMUJRVTBzVDBGQlR5eEhRVUZITEZsQlFWa3NRMEZCUXp0WlFVTTNRaXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEZOQlFWTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU03V1VGRGFrUXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhOUVVGTkxFTkJRVU03V1VGRGRrSXNUMEZCVHl4RlFVRkZMRTFCUVUwc1JVRkJSU3hQUVVGUExFVkJRVVVzUTBGQlF6dFRRVU16UWp0SlFVTkdMRU5CUVVNN1NVRkRUeXhOUVVGTkxFTkJRVU1zVDBGQmEwSTdVVUZEYUVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTzFsQlFVVXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRhRU1zU1VGQlNTeFBRVUZQTEVOQlFVTXNUVUZCVFN4SlFVRkpMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zVFVGQlRUdFpRVUZGTEUxQlFVMHNTMEZCU3l4RFFVRkRPMUZCUTNoRUxFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZGTzFsQlEyeERMRTFCUVUwc1RVRkJUU3hIUVVGSExFOUJRVThzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTXhRaXhOUVVGTkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVsQlFVa3NSVUZCUlN4RFFVRkRPMWxCUTNaQ0xFbEJRVWtzVFVGQlRTeEZRVUZGTzJkQ1FVTllMRXRCUVVzc1EwRkJReXhUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETzJkQ1FVTndRaXhOUVVGTkxFMUJRVTBzUjBGQlJ5eERRVUZETEVkQlFVY3NTVUZCU1N4SFFVRkhMRVZCUVVVc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETzJkQ1FVTjJReXhKUVVGSkxFdEJRVXNzUTBGQlF5eFJRVUZSTEVWQlFVVTdiMEpCUTI1Q0xFMUJRVTBzVjBGQlZ5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRTlCUVU4c1JVRkJSU3hIUVVGSExFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNUMEZCVHl4RlFVRkZMRU5CUVVNc1IwRkJSeXhIUVVGSExFTkJRVU03YjBKQlEzSkZMRXRCUVVzc1EwRkJReXhSUVVGUkxFZEJRVWNzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVU3hGUVVGRkxGZEJRVmNzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0cFFrRkRMMFE3Y1VKQlFVMDdiMEpCUlU0c1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ5eE5RVUZOTEVOQlFVTTdhVUpCUTNoQ08yZENRVU5FTEV0QlFVc3NRMEZCUXl4TFFVRkxMRWRCUVVjc1QwRkJUeXhEUVVGRE8yRkJRM1JDTzJsQ1FVRk5PMmRDUVVOT0xFdEJRVXNzUTBGQlF5eFRRVUZUTEVWQlFVVXNRMEZCUXp0blFrRkRiRUlzUzBGQlN5eERRVUZETEZGQlFWRXNSMEZCUnl4RFFVRkRMRU5CUVVNN1owSkJRMjVDTEV0QlFVc3NRMEZCUXl4TFFVRkxMRWRCUVVjc1MwRkJTeXhEUVVGRExFdEJRVXNzU1VGQlNTeFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zVTBGQlV5eERRVUZETzJGQlF6VkVPMWxCUTBRc1MwRkJTeXhEUVVGRExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1dVRkRhRU1zUzBGQlN5eERRVUZETEZGQlFWRXNSMEZCUnl4SFFVRkhMRU5CUVVNN1dVRkRja0lzUzBGQlN5eERRVUZETEZGQlFWRXNSMEZCUnl4SlFVRkpMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zVDBGQlR5eEZRVUZGTEVkQlFVY3NTMEZCU3l4RFFVRkRMRkZCUVZNc1EwRkJReXhEUVVGRE8xbEJRek5FTEV0QlFVc3NRMEZCUXl4SFFVRkhMRWxCUVVrc1VVRkJVU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhIUVVGSExFTkJRVU03VVVGRE4wUXNRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRTQ3hOUVVGTkxFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUXpsQ0xFZEJRVWNzUlVGQlJTeERRVUZETEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNSVUZEYmtNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMR0ZCUVdFc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGRGJFTXNRMEZCUXp0SlFVTklMRU5CUVVNN1NVRkRUeXhKUVVGSk8xRkJRMWdzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVWQlFVVTdXVUZEZWtJc1RVRkJUU3hOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NTVUZCU1N4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1NVRkJTU3hUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM1JGTEUxQlFVMHNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFbEJRVWtzVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eExRVUZMTEVsQlFVa3NVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTjBSU3hKUVVGSkxFMUJRVTBzU1VGQlNTeE5RVUZOTzJkQ1FVRkZMRTlCUVU4c1RVRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF6dFpRVU0zUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhMUVVGTExFbEJRVWtzVVVGQlVTeEpRVUZKTEVOQlFVTXNRMEZCUXl4TFFVRkxMRWxCUVVrc1VVRkJVVHRuUWtGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXl4VFFVRlRMRWRCUVVjc1EwRkJReXhEUVVGRExGTkJRVk1zUTBGQlF6dFpRVU5xUml4TlFVRk5MRWRCUVVjc1IwRkJSeXhSUVVGUkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1IwRkJSeXhSUVVGUkxFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRaUVVNNVJTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRPMmRDUVVGRkxFOUJRVThzUjBGQlJ5eERRVUZET3p0blFrRkRjRUlzVDBGQlR5eERRVUZETEVOQlFVTXNVMEZCVXl4SFFVRkhMRU5CUVVNc1EwRkJReXhUUVVGVExFTkJRVU03VVVGRGRrTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1NVRkRTaXhEUVVGRE8wTkJRMFE3UVVGRFJDeE5RVUZOTEVOQlFVTXNSMEZCUnl4RlFVRkZPMGxCUTFnc1RVRkJUU3hSUVVGUkxFZEJRVWNzU1VGQlNTeHBRa0ZCYVVJc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF6dEpRVU51UkN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGRkJRVkVzUlVGQlJTeERRVUZETzBsQlEyaERMRTFCUVUwc1VVRkJVU3hIUVVGSExFbEJRVWtzYVVKQlFXbENMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03U1VGRGFrUXNUVUZCVFN4UlFVRlJMRWRCUVVjc1NVRkJTU3hsUVVGbExFTkJRVU1zVlVGQlZTeEZRVUZGTEZGQlFWRXNRMEZCUXl4RFFVRkRPMGxCUXpORUxFMUJRVTBzVVVGQlVTeEhRVUZITEVsQlFVa3NaVUZCWlN4RFFVRkRMRkZCUVZFc1JVRkJSU3hSUVVGUkxFTkJRVU1zUTBGQlF6dEpRVU42UkN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxGVkJRVlVzUlVGQlJTeERRVUZETzBsQlEyeERMRTFCUVUwc1VVRkJVU3hIUVVGSExFbEJRVWtzVDBGQlR5eEZRVUZGTEVOQlFVTTdTVUZETDBJc1QwRkJUeXhEUVVGRExFVkJRVVVzUTBGQlF5eFhRVUZYTEVOQlFVTXNSVUZCUlN4SFFVRkhMRVZCUVVVN1VVRkROMElzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4cFJVRkJhVVVzUTBGQlF6dFpRVUZGTEU5QlFVODdVVUZEZUVZc1VVRkJVU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzFGQlEycENMRkZCUVZFc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dFJRVU5xUWl4TFFVRkxMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU03VVVGRGJFSXNUVUZCVFN4RFFVRkRMRkZCUVZFc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF6dEpRVU14UWl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOSUxGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRVZCUVVVN1VVRkRla0lzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTJoQ0xFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRWRCUVVjc1JVRkJSVHRaUVVOMFFpeFJRVUZSTEVOQlFVTXNZVUZCWVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8xbEJRemRDTEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRSUVVOcVFpeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRVZCUVVVN1dVRkRUaXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRM3BDTEZGQlFWRXNRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJRenRSUVVOdVFpeERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTktMRU5CUVVNc1EwRkJRenRKUVVOR0xGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NSMEZCUnl4RlFVRkZPMUZCUTNaQ0xFMUJRVTBzUTBGQlF5eFpRVUZaTEVWQlFVVXNRMEZCUXp0SlFVTjJRaXhEUVVGRExFTkJRVUU3U1VGRFJDeE5RVUZOTEVOQlFVTXNVVUZCVVN4SFFVRkhMRWRCUVVjc1JVRkJSVHRSUVVOMFFpeFJRVUZSTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1VVRkRhRUlzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMGxCUTJwQ0xFTkJRVU1zUTBGQlFUdEpRVU5FTEUxQlFVMHNRMEZCUXl4VFFVRlRMRWRCUVVjc1IwRkJSeXhGUVVGRk8xRkJRM1pDTEV0QlFVc3NRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRKUVVOMFFpeERRVUZETEVOQlFVRTdTVUZEUkN4SlFVRkpMRTlCUVU4c1IwRkJkMElzVTBGQlV5eERRVUZETzBsQlF6ZERMRkZCUVZFc1EwRkJReXhQUVVGUExFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVTdVVUZEZWtJc1VVRkJVU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETzFGQlEyaENMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVc3NRMEZCUXl4RlFVRkZPMWxCUXpkQ0xGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1dVRkROMElzVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVOeVFpeFBRVUZQTEVkQlFVY3NTMEZCU3l4RFFVRkRPMUZCUTJwQ0xFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTk9MRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRla0lzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTJwQ0xFTkJRVU1zUTBGQlF5eERRVUZETzBsQlEwb3NRMEZCUXl4RFFVRkRPMGxCUTBZc1NVRkJTU3hSUVVGUkxFZEJRWGxDTEZOQlFWTXNRMEZCUXp0SlFVTXZReXhSUVVGUkxFTkJRVU1zVVVGQlVTeEhRVUZITEVsQlFVa3NRMEZCUXl4RlFVRkZPMUZCUXpGQ0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTm9RaXhOUVVGTkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1JVRkJSVHRaUVVOc1F5eFJRVUZSTEVkQlFVY3NTVUZCU1N4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03V1VGREwwSXNUVUZCVFN4TlFVRk5MRWRCUVVjc1EwRkJReXhQUVVGdFFpeEZRVUZGTEVWQlFVVTdaMEpCUTNSRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVTdiMEpCUTJRc1RVRkJUU3hMUVVGTExFTkJRVU03YVVKQlExbzdaMEpCUTBRc1RVRkJUU3hGUVVGRkxFMUJRVTBzUlVGQlJTeFBRVUZQTEVWQlFVVXNSMEZCUnl4UlFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETzJkQ1FVTnVSQ3hSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEUxQlFVMHNSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRaUVVOb1F5eERRVUZETEVOQlFVRTdXVUZEUkN4UlFVRlJMRU5CUVVNc1RVRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF6dFpRVU42UWl4TlFVRk5MRVZCUVVVc1EwRkJRenRSUVVOV0xFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSVUZCUlR0WlFVTk9MRWxCUVVrc1QwRkJUeXhEUVVGRExFbEJRVWtzVVVGQlVUdG5Ra0ZEZGtJc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZET3p0blFrRkZWQ3hMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRekZDTEVsQlFVa3NUMEZCVHp0blFrRkRWaXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPenRuUWtGRmRrSXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRaQ3hEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5LTEVOQlFVTXNRMEZCUVR0SlFVVkVMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dEpRVVZvUWl4TlFVRk5MRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU03U1VGRFpDeE5RVUZOTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWRCUVVjc1RVRkJUU3hEUVVGRE8wRkJRek5DTEVOQlFVTXNRMEZC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QUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3QixJQUFJLE9BQU87Z0JBQ1AsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzs7Z0JBRXZCLE1BQU0sS0FBSyxDQUFDO1NBQ25CLENBQUMsQ0FBQztLQUNOLENBQUM7SUFDRixRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEIsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLE1BQU0sQ0FBQztDQUM3QixDQUFDLENBQUMiLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpwdWRXeHNMQ0p6YjNWeVkyVnpJanBiSWk5b2IyMWxMMjF6ZVM5RVpYTnJkRzl3TDFkbFlrRndjQzl0WlcxdmNtbDZaUzF6YUdWbGRDOWtiMk56TDJwekwybHVaR1Y0TG1weklsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbVoxYm1OMGFXOXVJR2RsS0dsa0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLR2xrS1R0Y2JuMWNibVoxYm1OMGFXOXVJR05sS0hSaFowNWhiV1VwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENoMFlXZE9ZVzFsS1R0Y2JuMWNibVoxYm1OMGFXOXVJR05NU1NocGJtNWxjbFJsZUhRc0lHTnNZWE56WlhNc0lHbGtMQ0J2YmtOc2FXTnJSbTRwSUh0Y2JpQWdJQ0JqYjI1emRDQnNhU0E5SUdObEtGd2liR2xjSWlrN1hHNGdJQ0FnYkdrdWFXNXVaWEpVWlhoMElEMGdhVzV1WlhKVVpYaDBPMXh1SUNBZ0lHTnNZWE56WlhNdVptOXlSV0ZqYUNoZklEMCtJR0ZrWkVNb2JHa3NJRjhwS1R0Y2JpQWdJQ0JwWmlBb2FXUXBYRzRnSUNBZ0lDQWdJR3hwTG1sa0lEMGdhV1E3WEc0Z0lDQWdhV1lnS0c5dVEyeHBZMnRHYmlsY2JpQWdJQ0FnSUNBZ2IyNURiR2xqYXloc2FTd2diMjVEYkdsamEwWnVLVHRjYmlBZ0lDQnlaWFIxY200Z2JHazdYRzU5WEc1bWRXNWpkR2x2YmlCeVpXMURLR1ZzYlN3Z1kyeHpLU0I3WEc0Z0lDQWdaV3h0TG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvWTJ4ektUdGNibjFjYm1aMWJtTjBhVzl1SUdGa1pFTW9aV3h0TENCamJITXBJSHRjYmlBZ0lDQmxiRzB1WTJ4aGMzTk1hWE4wTG1Ga1pDaGpiSE1wTzF4dWZWeHVablZ1WTNScGIyNGdjbVZ0UVd4c0tHVnNiU2tnZTF4dUlDQWdJR1ZzYlM1cGJtNWxja2hVVFV3Z1BTQmNJbHdpTzF4dWZWeHVablZ1WTNScGIyNGdiMjVEYkdsamF5aGxiRzBzSUdadUtTQjdYRzRnSUNBZ1pXeHRMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9YQ0pqYkdsamExd2lMQ0JtYmlrN1hHNTlYRzVtZFc1amRHbHZiaUJ2Ymt4dllXUW9abTRwSUh0Y2JpQWdJQ0IzYVc1a2IzY3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpaGNJbXh2WVdSY0lpd2dabTRwTzF4dWZWeHVZMnhoYzNNZ1UzUnlhVzVuVEdsemRGTjBiM0poWjJVZ2UxeHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtHdGxlU2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbXRsZVNBOUlHdGxlVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWZhMlY1Y3lBOUlGdGRPMXh1SUNBZ0lIMWNiaUFnSUNCblpYUWdhMlY1Y3lncElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1VvS1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMnRsZVhNdWMyeHBZMlVvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjMlYwSUd0bGVYTW9hMlY1Y3lrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5clpYbHpJRDBnYTJWNWN5NXpiR2xqWlNncE8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG5Wd1pHRjBaVk4wYjNKaFoyVW9LVHRjYmlBZ0lDQjlYRzRnSUNBZ1oyVjBJSE4wYjNKaFoyVkxaWGtvS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbXRsZVNBcklGd2lMWE4wY21sdVoweHBjM1JUZEc5eVlXZGxYQ0k3WEc0Z0lDQWdmVnh1SUNBZ0lHaGhjeWhyWlhrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YTJWNWN5NXBibVJsZUU5bUtHdGxlU2tnUGowZ01EdGNiaUFnSUNCOVhHNGdJQ0FnWVdSa0tHdGxlU2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDlyWlhsekxuQjFjMmdvYTJWNUtUdGNiaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1ZUZEc5eVlXZGxLQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lHRmtaRWxtVG05MFJYaHBjM1FvYTJWNUtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsS0NrN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxsOXJaWGx6TG1sdVpHVjRUMllvYTJWNUtTQThJREFwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1Ga1pDaHJaWGtwTzF4dUlDQWdJSDFjYmlBZ0lDQnlaVzF2ZG1Vb2EyVjVLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkWEJrWVhSbEtDazdYRzRnSUNBZ0lDQWdJR052Ym5OMElHa2dQU0IwYUdsekxsOXJaWGx6TG1sdVpHVjRUMllvYTJWNUtUdGNiaUFnSUNBZ0lDQWdhV1lnS0drZ1BDQXdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXJaWGx6TG5Od2JHbGpaU2hwTENBeEtUdGNiaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1ZUZEc5eVlXZGxLQ2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwY25WbE8xeHVJQ0FnSUgxY2JpQWdJQ0JqYkdWaGNpZ3BJSHRjYmlBZ0lDQWdJQ0FnYkc5allXeFRkRzl5WVdkbExuSmxiVzkyWlVsMFpXMG9kR2hwY3k1emRHOXlZV2RsUzJWNUtUdGNiaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1VvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdkWEJrWVhSbEtDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmtZWFJoSUQwZ2JHOWpZV3hUZEc5eVlXZGxMbWRsZEVsMFpXMG9kR2hwY3k1emRHOXlZV2RsUzJWNUtUdGNiaUFnSUNBZ0lDQWdhV1lnS0NGa1lYUmhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5clpYbHpJRDBnVzEwN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUd4cGMzUWdQU0JLVTA5T0xuQmhjbk5sS0dSaGRHRXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFFYSnlZWGt1YVhOQmNuSmhlU2hzYVhOMEtTQjhmQ0JzYVhOMExuTnZiV1VvWHlBOVBpQjBlWEJsYjJZZ1h5QWhQU0JjSW5OMGNtbHVaMXdpS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXJaWGx6SUQwZ1cxMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXJaWGx6SUQwZ2JHbHpkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCallYUmphQ0FvWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJ0bGVYTWdQU0JiWFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCMGFHbHpMblZ3WkdGMFpWTjBiM0poWjJVb0tUdGNiaUFnSUNCOVhHNGdJQ0FnZFhCa1lYUmxVM1J2Y21GblpTZ3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhWFJsYlNBOUlFcFRUMDR1YzNSeWFXNW5hV1o1S0hSb2FYTXVYMnRsZVhNcE8xeHVJQ0FnSUNBZ0lDQnNiMk5oYkZOMGIzSmhaMlV1YzJWMFNYUmxiU2gwYUdsekxuTjBiM0poWjJWTFpYa3NJR2wwWlcwcE8xeHVJQ0FnSUgxY2JuMWNibU5zWVhOeklGTmxiR1ZqZEU5eVNXNXdkWFJWU1NCN1hHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb2FXUlFjbVZtYVhnc0lITjBiM0poWjJVc0lHOXVSVzUwWlhJZ1BTQW9LU0E5UGlCMmIybGtJREFwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV5YjI5MElEMGdaMlVvYVdSUWNtVm1hWGdwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMblZzSUQwZ1oyVW9hV1JRY21WbWFYZ2dLeUJjSWw5MWJGd2lLVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXBibkIxZENBOUlHZGxLR2xrVUhKbFptbDRJQ3NnWENKZmFXNXdkWFJjSWlrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YVc1d2RYUkNkRzRnUFNCblpTaHBaRkJ5WldacGVDQXJJRndpWDJWdWRHVnlYQ0lwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbk4wYjNKaFoyVWdQU0J6ZEc5eVlXZGxPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtOXVSVzUwWlhJZ1BTQnZia1Z1ZEdWeU8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCelpXeG1JRDBnZEdocGN6dGNiaUFnSUNBZ0lDQWdiMjVEYkdsamF5aDBhR2x6TG1sdWNIVjBRblJ1TENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1OaGJHeFBia1Z1ZEdWeUtIUm9hWE11YVc1d2RYUXVkbUZzZFdVcE8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzRnSUNBZ2MyaHZkeWdwSUh0Y2JpQWdJQ0FnSUNBZ2NtVnRReWgwYUdsekxuSnZiM1FzSUZ3aWFHbGtaVndpS1R0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYVhSbGJYTWdQU0IwYUdsekxuTjBiM0poWjJVdWEyVjVjenRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkV3dnUFNCMGFHbHpMblZzTzF4dUlDQWdJQ0FnSUNCeVpXMUJiR3dvZFd3cE8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCelpXeG1JRDBnZEdocGN6dGNiaUFnSUNBZ0lDQWdhWFJsYlhNdVptOXlSV0ZqYUNoMFpYaDBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHeHBJRDBnWTB4SktIUmxlSFFzSUZ0ZExDQjFibVJsWm1sdVpXUXNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1OaGJHeFBia1Z1ZEdWeUtIUmxlSFFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjFiQzVoY0hCbGJtUkRhR2xzWkNoc2FTazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbWx1Y0hWMExuWmhiSFZsSUQwZ1hDSmNJanRjYmlBZ0lDQjlYRzRnSUNBZ2FHbGtaU2dwSUh0Y2JpQWdJQ0FnSUNBZ1lXUmtReWgwYUdsekxuSnZiM1FzSUZ3aWFHbGtaVndpS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdZMkZzYkU5dVJXNTBaWElvZEdWNGRDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtOXVSVzUwWlhJb2RHVjRkQ2s3WEc0Z0lDQWdmVnh1ZlZ4dVkyeGhjM01nVTJsbmJtbHVWVWtnZTF4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0c5dVEyeHBZMnRHYmlBOUlDZ3BJRDArSUhadmFXUWdNQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbkp2YjNRZ1BTQm5aU2hjSW5OcFoyNXBibHdpS1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVpZEc0Z1BTQm5aU2hjSW5OcFoyNXBibDlpZEc1Y0lpazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWIyNURiR2xqYXlBOUlHOXVRMnhwWTJ0R2JqdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MyVnNaaUE5SUhSb2FYTTdYRzRnSUNBZ0lDQWdJRzl1UTJ4cFkyc29kR2hwY3k1aWRHNHNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhObGJHWXViMjVEYkdsamF5Z3BPMXh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjMmh2ZHlncElIdGNiaUFnSUNBZ0lDQWdjbVZ0UXloMGFHbHpMbkp2YjNRc0lGd2lhR2xrWlZ3aUtUdGNiaUFnSUNCOVhHNGdJQ0FnYUdsa1pTZ3BJSHRjYmlBZ0lDQWdJQ0FnWVdSa1F5aDBhR2x6TG5KdmIzUXNJRndpYUdsa1pWd2lLVHRjYmlBZ0lDQjlYRzU5WEc1amJHRnpjeUJSVTJWMFRHbHpkRlZKSUh0Y2JpQWdJQ0JqYjI1emRISjFZM1J2Y2lncElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1dmJsTmxiR1ZqZENBOUlDaHBkR1Z0S1NBOVBpQjdJSDA3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjbTl2ZENBOUlHZGxLRndpY1d4cGMzUmNJaWs3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkV3dnUFNCblpTaGNJbkZzYVhOMFgzVnNYQ0lwTzF4dUlDQWdJSDFjYmlBZ0lDQnphRzkzS0hGTWFYTjBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGJVTW9kR2hwY3k1eWIyOTBMQ0JjSW1ocFpHVmNJaWs3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSFZzSUQwZ2RHaHBjeTUxYkR0Y2JpQWdJQ0FnSUNBZ2NtVnRRV3hzS0hWc0tUdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MyVnNaaUE5SUhSb2FYTTdYRzRnSUNBZ0lDQWdJSEZNYVhOMExtWnZja1ZoWTJnb1h5QTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCc2FTQTlJR05NU1NoZkxuTm9aV1YwVkdsMGJHVXNJRnRkTENCMWJtUmxabWx1WldRc0lDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbTl1VTJWc1pXTjBLRjhwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjFiQzVoY0hCbGJtUkRhR2xzWkNoc2FTazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmlBZ0lDQm9hV1JsS0NrZ2UxeHVJQ0FnSUNBZ0lDQmhaR1JES0hSb2FYTXVjbTl2ZEN3Z1hDSm9hV1JsWENJcE8xeHVJQ0FnSUgxY2JuMWNibU5zWVhOeklGRkJibVJCVlVrZ2UxeHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtbDBaVzF6SUQwZ1cxMDdYRzRnSUNBZ0lDQWdJSFJvYVhNdWIyNU9aWGgwSUQwZ0tISmxjM1ZzZEhNcElEMCtJSHNnZlR0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTV5YjI5MElEMGdaMlVvWENKeFlXNWtZVndpS1R0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVwZEdWdFVtOXZkQ0E5SUdkbEtGd2ljV0Z1WkdGZmFYUmxiWEp2YjNSY0lpazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWJtVjRkRUowYmlBOUlHZGxLRndpY1hWaGJtUmhYMjVsZUhSY0lpazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHOW5JRDBnWjJVb1hDSnhkV0Z1WkdGZmJHOW5YQ0lwTzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6Wld4bUlEMGdkR2hwY3p0Y2JpQWdJQ0FnSUNBZ2IyNURiR2xqYXloMGFHbHpMbTVsZUhSQ2RHNHNJQ2dwSUQwK0lITmxiR1l1WTJGc2JFOXVUbVY0ZENncEtUdGNiaUFnSUNCOVhHNGdJQ0FnYzJodmR5aHhRVzVrUVhNc0lHeHZaeWtnZTF4dUlDQWdJQ0FnSUNCeVpXMURLSFJvYVhNdWNtOXZkQ3dnWENKb2FXUmxYQ0lwTzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwZEdWdFVtOXZkQ0E5SUhSb2FYTXVhWFJsYlZKdmIzUTdYRzRnSUNBZ0lDQWdJSEpsYlVGc2JDaHBkR1Z0VW05dmRDazdYRzRnSUNBZ0lDQWdJSFJvYVhNdWFYUmxiWE1nUFNCYlhUdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MyVnNaaUE5SUhSb2FYTTdYRzRnSUNBZ0lDQWdJSEZCYm1SQmN5NW1iM0pGWVdOb0tGOGdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1pHbDJJRDBnWTJVb1hDSmthWFpjSWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnhJRDBnWTJVb1hDSmthWFpjSWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmhJRDBnWTJVb1hDSmthWFpjSWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J4TG1sdWJtVnlWR1Y0ZENBOUlGOHVjVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRXVhVzV1WlhKVVpYaDBJRDBnWHk1aE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYjI1RGJHbGpheWh4TENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WdFF5aGthWFlzSUZ3aWRISmhibk10WVZ3aUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaVzFES0dScGRpd2dYQ0ozY205dVoxd2lLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWkdSREtHUnBkaXdnWENKamIzSnlaV04wWENJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2YmtOc2FXTnJLR0VzSUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlcxREtHUnBkaXdnWENKMGNtRnVjeTFoWENJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxiVU1vWkdsMkxDQmNJbU52Y25KbFkzUmNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdSa1F5aGthWFlzSUZ3aWQzSnZibWRjSWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0ZrWkVNb1pHbDJMQ0JjSW5SeVlXNXpMV0ZjSWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoWkdSREtIRXNJRndpY1dGdVpHRmZhWFJsYlY5eFhDSXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lXUmtReWhoTENCY0luRmhibVJoWDJsMFpXMWZZVndpS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwZGk1aGNIQmxibVJEYUdsc1pDaHhLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBkaTVoY0hCbGJtUkRhR2xzWkNoaEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdGa1pFTW9aR2wyTENCY0luRmhibVJoWDJsMFpXMWNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0VW05dmRDNWhjSEJsYm1SRGFHbHNaQ2hrYVhZcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNXBkR1Z0Y3k1d2RYTm9LR1JwZGlrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0IwYUdsekxuTm9iM2RNYjJjb2JHOW5LVHRjYmlBZ0lDQjlYRzRnSUNBZ2FHbGtaU2dwSUh0Y2JpQWdJQ0FnSUNBZ1lXUmtReWgwYUdsekxuSnZiM1FzSUZ3aWFHbGtaVndpS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdZMkZzYkU5dVRtVjRkQ2dwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnY21WemRXeDBjeUE5SUZ0ZE8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCdWIzUkJibk4zWlhKbFpITWdQU0JiWFR0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVwZEdWdGN5NW1iM0pGWVdOb0tDaGZMQ0JwS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9YeTVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vWENKamIzSnlaV04wWENJcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxjM1ZzZEhNdWNIVnphQ2gwY25WbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0Y4dVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektGd2lkM0p2Ym1kY0lpa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZFd4MGN5NXdkWE5vS0daaGJITmxLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlZjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1YjNSQmJuTjNaWEpsWkhNdWNIVnphQ2hwSUNzZ01TazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNCcFppQW9ibTkwUVc1emQyVnlaV1J6TG14bGJtZDBhQ0ErSURBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMmh2ZDB4dlp5aGNJbGx2ZFNCb1lYWmxiaWQwSUdGdWMzZGxjbVZrSUhSdklGRXVYQ0lnS3lCdWIzUkJibk4zWlhKbFpITXVhbTlwYmloY0lpd2dYQ0lwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0IwYUdsekxtOXVUbVY0ZENoeVpYTjFiSFJ6S1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjMmh2ZDB4dlp5aHNiMmNwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVzYjJjdWFXNXVaWEpVWlhoMElEMGdiRzluTzF4dUlDQWdJSDFjYm4xY2JtTnNZWE56SUZOb1pXVjBVSEp2Y0NCN1hHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb1ptbHNaVWxFTENCcGRHVnRLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVabWxzWlVsRUlEMGdabWxzWlVsRU8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG1sMFpXMGdQU0JwZEdWdE8xeHVJQ0FnSUgxY2JpQWdJQ0IwYjFGSmRHVnRLQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1cGRHVnRMbk5vWldWMFZIbHdaU0FoUFNCY0lrZFNTVVJjSWlsY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjFibVJsWm1sdVpXUTdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWFXeGxTVVE2SUhSb2FYTXVabWxzWlVsRUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpYUkpSRG9nZEdocGN5NXBkR1Z0TG5Ob1pXVjBTV1FzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnphR1ZsZEZScGRHeGxPaUIwYUdsekxtbDBaVzB1ZEdsMGJHVmNiaUFnSUNBZ0lDQWdmVHRjYmlBZ0lDQjlYRzU5WEc1MllYSWdSR0YwWlZWMGFXdzdYRzRvWm5WdVkzUnBiMjRnS0VSaGRHVlZkR2xzS1NCN1hHNGdJQ0FnWm5WdVkzUnBiMjRnY0dGeWMyVW9jeWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0IwYlhBZ1BTQkVZWFJsTG5CaGNuTmxLSE1wTzF4dUlDQWdJQ0FnSUNCcFppQW9hWE5PWVU0b2RHMXdLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMWJtUmxabWx1WldRN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dSR0YwWlNoMGJYQXBPMXh1SUNBZ0lIMWNiaUFnSUNCRVlYUmxWWFJwYkM1d1lYSnpaU0E5SUhCaGNuTmxPMXh1SUNBZ0lHWjFibU4wYVc5dUlITjBjaWhrS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doWkNsY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmNJbHdpTzF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWkM1MGIwbFRUMU4wY21sdVp5Z3BPMXh1SUNBZ0lIMWNiaUFnSUNCRVlYUmxWWFJwYkM1emRISWdQU0J6ZEhJN1hHNGdJQ0FnWm5WdVkzUnBiMjRnZEc5a1lYa29LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ2Ym14NVJHRjBaU2h1WlhjZ1JHRjBaU2dwS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdSR0YwWlZWMGFXd3VkRzlrWVhrZ1BTQjBiMlJoZVR0Y2JpQWdJQ0JtZFc1amRHbHZiaUJ2Ym14NVJHRjBaU2hrWVhSbEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnUkdGMFpTaG5aWFJFWVhSbFRuVnRLR1JoZEdVcEtUdGNiaUFnSUNCOVhHNGdJQ0FnUkdGMFpWVjBhV3d1YjI1c2VVUmhkR1VnUFNCdmJteDVSR0YwWlR0Y2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhSRVlYUmxUblZ0S0dSaGRHVXBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVpteHZiM0lvWkdGMFpTNW5aWFJVYVcxbEtDa2dMeUEyTUNBdklEWXdJQzhnTWpRZ0x5QXhNREF3S1NBcUlEWXdJQ29nTmpBZ0tpQXlOQ0FxSURFd01EQTdYRzRnSUNBZ2ZWeHVJQ0FnSUVSaGRHVlZkR2xzTG1kbGRFUmhkR1ZPZFcwZ1BTQm5aWFJFWVhSbFRuVnRPMXh1ZlNrb1JHRjBaVlYwYVd3Z2ZId2dLRVJoZEdWVmRHbHNJRDBnZTMwcEtUdGNibVoxYm1OMGFXOXVJR05sYkd4ek1sRkJibVJCS0hGSmRHVnRMQ0J5YjNjc0lHTmxiR3h6TENCM1lYSnVLU0I3WEc0Z0lDQWdiR1YwSUhFZ1BTQmpaV3hzYzFzd1hTd2dZU0E5SUdObGJHeHpXekZkTENCc2IyY2dQU0JqWld4c2Mxc3lYVHRjYmlBZ0lDQnNaWFFnYzNSaGRHVWdQU0JqWld4c2Mxc3pYVHRjYmlBZ0lDQnNaWFFnY0hKbGRrUmhkR1VnUFNCRVlYUmxWWFJwYkM1d1lYSnpaU2hqWld4c2MxczBYU2s3WEc0Z0lDQWdiR1YwSUdsdWRHVnlkbUZzSUQwZ2NHRnljMlZKYm5Rb1kyVnNiSE5iTlYwcE8xeHVJQ0FnSUd4bGRDQnVaWGgwUkdGMFpTQTlJRVJoZEdWVmRHbHNMbkJoY25ObEtHTmxiR3h6V3paZEtUdGNiaUFnSUNCc1pYUWdabUZwYkVOdmRXNTBJRDBnY0dGeWMyVkpiblFvWTJWc2JITmJOMTBwTzF4dUlDQWdJR052Ym5OMElHbHVhWFJQY21SbGNpQTlJRTFoZEdndWNtRnVaRzl0S0NrN1hHNGdJQ0FnYVdZZ0tITjBZWFJsSUQwOUlGd2lYQ0lwWEc0Z0lDQWdJQ0FnSUhOMFlYUmxJRDBnWENKMWJuTmxaVzVjSWp0Y2JpQWdJQ0JwWmlBb2MzUmhkR1VnSVQwZ1hDSjFibk5sWlc1Y0lpQW1KaUJ6ZEdGMFpTQWhQU0JjSW14bFlYSnVYQ0lnSmlZZ2MzUmhkR1VnSVQwZ1hDSnlaV3hsWVhKdVhDSXBJSHRjYmlBZ0lDQWdJQ0FnZDJGeWJpZ25YQ0pUZEdGMFpWd2lJSE5vYjNWc1pDQmlaU0J6WlhRZ2RHOGdYQ0oxYm5ObFpXNWNJaXdnWENKc1pXRnlibHdpSUc5eUlGd2ljbVZzWldGeWJsd2lKeWs3WEc0Z0lDQWdJQ0FnSUhOMFlYUmxJRDBnWENKMWJuTmxaVzVjSWp0Y2JpQWdJQ0I5WEc0Z0lDQWdhV1lnS0hOMFlYUmxJRDA5SUZ3aWJHVmhjbTVjSWlCOGZDQnpkR0YwWlNBOVBTQmNJbkpsYkdWaGNtNWNJaWtnZTF4dUlDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0Z3Y21WMlJHRjBaU0I4ZkNBaGJtVjRkRVJoZEdVZ2ZId2dhWE5PWVU0b2FXNTBaWEoyWVd3cElIeDhJR2x6VG1GT0tHWmhhV3hEYjNWdWRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QmNJbHdpTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYVhSbGJTQTlJSHNnY1N3Z1lTd2diRzluTENCemRHRjBaU3dnY0hKbGRrUmhkR1VzSUdsdWRHVnlkbUZzTENCdVpYaDBSR0YwWlN3Z1ptRnBiRU52ZFc1MExDQnhTWFJsYlN3Z2NtOTNMQ0JwYm1sMFQzSmtaWElnZlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnBkR1Z0TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHTmhkR05vSUNoZllTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2QyRnliaWduWENKVGRHRjBaVndpSUhOb2IzVnNaQ0JpWlNCelpYUWdkRzhnWENKMWJuTmxaVzVjSWlCaVpXTmhkWE5sSUhOdmJXVWdaR0YwWVNCaGNtVWdhVzVqYjNKeVpXTjBMaWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjM1JoZEdVZ1BTQmNJblZ1YzJWbGJsd2lPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptRnBiRU52ZFc1MElEMGdNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnlaWFpFWVhSbElEMGdkVzVrWldacGJtVmtPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEoyWVd3Z1BTQk9ZVTQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVaWGgwUkdGMFpTQTlJSFZ1WkdWbWFXNWxaRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQnBaaUFvWm1GcGJFTnZkVzUwSUNFOUlEQWdKaVlnSVdselRtRk9LR1poYVd4RGIzVnVkQ2twWEc0Z0lDQWdJQ0FnSUhkaGNtNG9KMXdpUm1GcGJDQkRiM1Z1ZEZ3aUlITm9iM1ZzWkNCaVpTQmNJbHdpSUdKbFkyRjFjMlVnZEdobElHbDBaVzBnYVhNZ1hDSjFibk5sWlc1Y0lpY3BPMXh1SUNBZ0lHbG1JQ2h3Y21WMlJHRjBaU0FoUFNCMWJtUmxabWx1WldRcFhHNGdJQ0FnSUNBZ0lIZGhjbTRvSjF3aVVISmxkaUJFWVhSbFhDSWdjMmh2ZFd4a0lHSmxJRndpWENJZ1ltVmpZWFZ6WlNCMGFHVWdhWFJsYlNCcGN5QmNJblZ1YzJWbGJsd2lKeWs3WEc0Z0lDQWdhV1lnS0NGcGMwNWhUaWhwYm5SbGNuWmhiQ2twWEc0Z0lDQWdJQ0FnSUhkaGNtNG9KMXdpU1c1MFpYSjJZV3hjSWlCemFHOTFiR1FnWW1VZ1hDSmNJaUJpWldOaGRYTmxJSFJvWlNCcGRHVnRJR2x6SUZ3aWRXNXpaV1Z1WENJbktUdGNiaUFnSUNCcFppQW9ibVY0ZEVSaGRHVWdJVDBnZFc1a1pXWnBibVZrS1Z4dUlDQWdJQ0FnSUNCM1lYSnVLQ2RjSWs1bGVIUWdSR0YwWlZ3aUlITm9iM1ZzWkNCaVpTQmNJbHdpSUdKbFkyRjFjMlVnZEdobElHbDBaVzBnYVhNZ1hDSjFibk5sWlc1Y0lpY3BPMXh1SUNBZ0lHWmhhV3hEYjNWdWRDQTlJREE3WEc0Z0lDQWdjSEpsZGtSaGRHVWdQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdhVzUwWlhKMllXd2dQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdibVY0ZEVSaGRHVWdQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdZMjl1YzNRZ2FYUmxiU0E5SUhzZ2NTd2dZU3dnYkc5bkxDQnpkR0YwWlRvZ1hDSjFibk5sWlc1Y0lpd2djSEpsZGtSaGRHVXNJR2x1ZEdWeWRtRnNMQ0J1WlhoMFJHRjBaU3dnWm1GcGJFTnZkVzUwTENCeFNYUmxiU3dnY205M0xDQnBibWwwVDNKa1pYSWdmVHRjYmlBZ0lDQnlaWFIxY200Z2FYUmxiVHRjYm4xY2JtWjFibU4wYVc5dUlIRkJibVJCTWxWd1pHRjBaVkpsY1NoeFFXNWtRU2tnZTF4dUlDQWdJR052Ym5OMElGOGdQU0J4UVc1a1FUdGNiaUFnSUNCamIyNXpkQ0J5YjNjZ1BTQmZMbkp2ZHl3Z2MyaGxaWFFnUFNCZkxuRkpkR1Z0TG5Ob1pXVjBWR2wwYkdVN1hHNGdJQ0FnWTI5dWMzUWdhVzUwWlhKMllXeFVaWGgwSUQwZ1h5NXBiblJsY25aaGJDQS9JRjh1YVc1MFpYSjJZV3d1ZEc5VGRISnBibWNvS1NBNklGd2lNRndpTzF4dUlDQWdJR052Ym5OMElISmhibWRsSUQwZ2MyaGxaWFFnS3lCY0lpRkRYQ0lnS3lCeWIzY2dLeUJjSWpwSVhDSWdLeUJ5YjNjN1hHNGdJQ0FnWTI5dWMzUWdkbUZzZFdWeklEMGdXMXRmTG14dlp5d2dYeTV6ZEdGMFpTd2dSR0YwWlZWMGFXd3VjM1J5S0Y4dWNISmxka1JoZEdVcExDQmZMbWx1ZEdWeWRtRnNJSHg4SURBc0lFUmhkR1ZWZEdsc0xuTjBjaWhmTG01bGVIUkVZWFJsS1N3Z1h5NW1ZV2xzUTI5MWJuUmRYVHRjYmlBZ0lDQnlaWFIxY200Z2V5QnlZVzVuWlN3Z2RtRnNkV1Z6SUgwN1hHNTlYRzUyWVhJZ1IxTm9aV1YwTzF4dUtHWjFibU4wYVc5dUlDaEhVMmhsWlhRcElIdGNiaUFnSUNCMllYSWdhWE5NYjJGa1pXUWdQU0JtWVd4elpUdGNiaUFnSUNCbWRXNWpkR2x2YmlCc2IyRmtLQ2tnZTF4dUlDQWdJQ0FnSUNCbllYQnBMbXh2WVdRb0oyTnNhV1Z1ZERwaGRYUm9NaWNzSUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbHpURzloWkdWa0lEMGdkSEoxWlR0Y2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZWeHVJQ0FnSUVkVGFHVmxkQzVzYjJGa0lEMGdiRzloWkR0Y2JpQWdJQ0JtZFc1amRHbHZiaUJwYm1sMEtHTnNhV1Z1ZEVsRUxDQnZia1J2Ym1VZ1BTQW9LU0E5UGlCN0lIMHNJRzl1UlhKeUlEMGdLR1VwSUQwK0lIc2dmU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9JV2x6VEc5aFpHVmtLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0JuWVhCcExtTnNhV1Z1ZEM1cGJtbDBLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnNhV1Z1ZEVsa09pQmpiR2xsYm5SSlJDeGNiaUFnSUNBZ0lDQWdJQ0FnSUhOamIzQmxPaUFuYUhSMGNITTZMeTkzZDNjdVoyOXZaMnhsWVhCcGN5NWpiMjB2WVhWMGFDOXpjSEpsWVdSemFHVmxkSE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6WTI5MlpYSjVSRzlqY3pvZ1d5ZG9kSFJ3Y3pvdkwzTm9aV1YwY3k1bmIyOW5iR1ZoY0dsekxtTnZiUzhrWkdselkyOTJaWEo1TDNKbGMzUS9kbVZ5YzJsdmJqMTJOQ2RkWEc0Z0lDQWdJQ0FnSUgwcExuUm9aVzRvWHlBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmJrUnZibVVvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobllYQnBMbUYxZEdneUxtZGxkRUYxZEdoSmJuTjBZVzVqWlNncExtbHpVMmxuYm1Wa1NXNHVaMlYwS0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1IxTm9aV1YwTG05dVUybG5ia2x1S0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JuWVhCcExtRjFkR2d5TG1kbGRFRjFkR2hKYm5OMFlXNWpaU2dwTG1selUybG5ibVZrU1c0dWJHbHpkR1Z1S0NocGMxTnBaMjVsWkVsdUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbHpVMmxuYm1Wa1NXNHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVkVGFHVmxkQzV2YmxOcFoyNUpiaWdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUjFOb1pXVjBMbTl1VTJsbmJrOTFkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUgwcExtTmhkR05vS0dVZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IyNUZjbklvWlNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2JpQWdJQ0I5WEc0Z0lDQWdSMU5vWldWMExtbHVhWFFnUFNCcGJtbDBPMXh1SUNBZ0lHWjFibU4wYVc5dUlIQnliMjF3ZEZOcFoyNUpiaWdwSUh0Y2JpQWdJQ0FnSUNBZ1oyRndhUzVoZFhSb01pNW5aWFJCZFhSb1NXNXpkR0Z1WTJVb0tTNXphV2R1U1c0b0tUdGNiaUFnSUNCOVhHNGdJQ0FnUjFOb1pXVjBMbkJ5YjIxd2RGTnBaMjVKYmlBOUlIQnliMjF3ZEZOcFoyNUpianRjYmlBZ0lDQkhVMmhsWlhRdWIyNVRhV2R1U1c0Z1BTQW9LU0E5UGlCN0lIMDdYRzRnSUNBZ1IxTm9aV1YwTG05dVUybG5iazkxZENBOUlDZ3BJRDArSUhzZ2ZUdGNiaUFnSUNCbWRXNWpkR2x2YmlCblpYUlJUR2x6ZENobWFXeGxTVVFzSUc5dVUzVmpZMlZ6Y3lBOUlDaHhUR2x6ZENrZ1BUNGdleUI5TENCdmJrVnljaUE5SUNobEtTQTlQaUI3SUgwcElIdGNiaUFnSUNBZ0lDQWdaMkZ3YVM1amJHbGxiblF1YzJobFpYUnpMbk53Y21WaFpITm9aV1YwY3k1blpYUW9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzQnlaV0ZrYzJobFpYUkpaRG9nWm1sc1pVbEVYRzRnSUNBZ0lDQWdJSDBwTG5Sb1pXNG9jbVZ6SUQwK0lHOXVVM1ZqWTJWemN5aHlaWE11Y21WemRXeDBMbk5vWldWMGN5NXRZWEFvWHlBOVBpQnVaWGNnVTJobFpYUlFjbTl3S0dacGJHVkpSQ3dnWHk1d2NtOXdaWEowYVdWektTNTBiMUZKZEdWdEtDa3BMbVpwYkhSbGNpaGZJRDArSUY4cEtTd2djbVZ6SUQwK0lHOXVSWEp5S0hKbGN5NXlaWE4xYkhRdVpYSnliM0lwS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdSMU5vWldWMExtZGxkRkZNYVhOMElEMGdaMlYwVVV4cGMzUTdYRzRnSUNBZ1puVnVZM1JwYjI0Z1oyVjBVbUZ1WjJWU1lYY29abWxzWlVsRUxDQnlZVzVuWlN3Z2IyNVRkV05qWlhOeklEMGdLSE5vWldWMGN5a2dQVDRnZXlCOUxDQnZia1Z5Y2lBOUlDaGxLU0E5UGlCN0lIMHBJSHRjYmlBZ0lDQWdJQ0FnWjJGd2FTNWpiR2xsYm5RdWMyaGxaWFJ6TG5Od2NtVmhaSE5vWldWMGN5NTJZV3gxWlhNdVoyVjBLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITndjbVZoWkhOb1pXVjBTV1E2SUdacGJHVkpSQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lISmhibWRsT2lCeVlXNW5aU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsVW1WdVpHVnlUM0IwYVc5dU9pQmNJa1pQVWsxVlRFRmNJbHh1SUNBZ0lDQWdJQ0I5S1M1MGFHVnVLSEpsY3lBOVBpQnZibE4xWTJObGMzTW9jbVZ6TG5KbGMzVnNkQzUyWVd4MVpYTXBMQ0J5WlhNZ1BUNGdiMjVGY25Jb2NtVnpMbkpsYzNWc2RDNWxjbkp2Y2lrcE8xeHVJQ0FnSUgxY2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhSU1lXNW5aU2htYVd4bFNVUXNJSEpoYm1kbExDQnZibE4xWTJObGMzTWdQU0FvYzJobFpYUnpLU0E5UGlCN0lIMHNJRzl1UlhKeUlEMGdLR1VwSUQwK0lIc2dmU2tnZTF4dUlDQWdJQ0FnSUNCbllYQnBMbU5zYVdWdWRDNXphR1ZsZEhNdWMzQnlaV0ZrYzJobFpYUnpMblpoYkhWbGN5NW5aWFFvZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjM0J5WldGa2MyaGxaWFJKWkRvZ1ptbHNaVWxFTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjbUZ1WjJVNklISmhibWRsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdWU1pXNWtaWEpQY0hScGIyNDZJRndpVlU1R1QxSk5RVlJVUlVSZlZrRk1WVVZjSWx4dUlDQWdJQ0FnSUNCOUtTNTBhR1Z1S0hKbGN5QTlQaUJ2YmxOMVkyTmxjM01vY21WekxuSmxjM1ZzZEM1MllXeDFaWE1wTENCeVpYTWdQVDRnYjI1RmNuSW9jbVZ6TG5KbGMzVnNkQzVsY25KdmNpa3BPMXh1SUNBZ0lIMWNiaUFnSUNCbWRXNWpkR2x2YmlCc2IyRmtVVUZ1WkVGTWFYTjBLSEZKZEdWdExDQnZibE4xWTJObGMzTWdQU0FvY1VGdVpFRXBJRDArSUhzZ2ZTd2diMjVGY25JZ1BTQW9aU2tnUFQ0Z2V5QjlLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1pwYkdWSlpDQTlJSEZKZEdWdExtWnBiR1ZKUkR0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJobFpYUk9ZVzFsSUQwZ1hDSW5YQ0lnS3lCeFNYUmxiUzV6YUdWbGRGUnBkR3hsSUNzZ1hDSW5YQ0k3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRkZEYjNWdWRGSmhibWRsSUQwZ2MyaGxaWFJPWVcxbElDc2dYQ0loU2pGY0lqdGNiaUFnSUNBZ0lDQWdaMlYwVW1GdVoyVW9abWxzWlVsa0xDQlJRMjkxYm5SU1lXNW5aU3dnWTJWc2JITWdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1VVTnZkVzUwSUQwZ2NHRnljMlZKYm5Rb1kyVnNiSE5iTUYxYk1GMHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2x6VG1GT0tGRkRiM1Z1ZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZia1Z5Y2loY0lrbHVkbUZzYVdRZ2MyaGxaWFFnWVhNZ1lTQmtZWFJoWW1GelpTNGdWR2hsSUhaaGJIVmxJRzltSUVveElHTmxiR3dnYzJodmRXeGtJR0psSUhSb1pTQnVkVzFpWlhJZ2IyWWdjWFZsYzNScGIyNXpMbHdpS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JSUVc1a1FWSmhibWRsSUQwZ2MyaGxaWFJPWVcxbElDc2dYQ0loUVRJNlNGd2lJQ3NnS0ZGRGIzVnVkQ0FySURFcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWjJWMFVtRnVaMlZTWVhjb1ptbHNaVWxrTENCUlFXNWtRVkpoYm1kbExDQmpaV3hzY3lBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhkaGNtNU5jMmR6SUQwZ1cxMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2FYUmxiWE1nUFNCalpXeHNjeTV0WVhBb0tHTmxiR3h6TENCcEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvYkdWMElHa2dQU0JqWld4c2N5NXNaVzVuZEdnN0lHa2dQQ0E0T3lCcEt5c3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpaV3hzY3k1d2RYTm9LRndpWENJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2QyRnliaUE5SUNoektTQTlQaUIzWVhKdVRYTm5jeTV3ZFhOb0tHQnliM2NnSkh0cElDc2dNbjA2SUNSN2MzMWdLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdObGJHeHpNbEZCYm1SQktIRkpkR1Z0TENCcElDc2dNaXdnWTJWc2JITXNJSGRoY200cE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoM1lYSnVUWE5uY3k1c1pXNW5kR2dnUGlBd0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2YmtWeWNpaDNZWEp1VFhObmN5NXFiMmx1S0Z3aVhGeHVYQ0lwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5dVUzVmpZMlZ6Y3locGRHVnRjeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlMQ0JsSUQwK0lHOXVSWEp5S0dVcEtUdGNiaUFnSUNBZ0lDQWdmU3dnWlNBOVBpQnZia1Z5Y2lobEtTazdYRzRnSUNBZ2ZWeHVJQ0FnSUVkVGFHVmxkQzVzYjJGa1VVRnVaRUZNYVhOMElEMGdiRzloWkZGQmJtUkJUR2x6ZER0Y2JpQWdJQ0JtZFc1amRHbHZiaUJ6WVhabFVVRnVaRUZ6S0hGQmJtUkJMQ0J2YmxOMVkyTmxjM01nUFNBb0tTQTlQaUI3SUgwc0lHOXVSWEp5SUQwZ0tHVXBJRDArSUhzZ2ZTa2dlMXh1SUNBZ0lDQWdJQ0JzWlhRZ2JXRndJRDBnYm1WM0lFMWhjQ2dwTzF4dUlDQWdJQ0FnSUNCeFFXNWtRUzVtYjNKRllXTm9LRjhnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdabWxzWlVsa0lEMGdYeTV4U1hSbGJTNW1hV3hsU1VRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JXRndMbWhoY3lobWFXeGxTV1FwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNDNW5aWFFvWm1sc1pVbGtLUzV3ZFhOb0tGOHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoY0M1elpYUW9abWxzWlVsa0xDQmJYMTBwTzF4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdiV0Z3TG1admNrVmhZMmdvS0dsMFpXMXpMQ0JtYVd4bFNXUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE5oZG1WUlFXNWtRVk5wYm1kc1pVWnBiR1VvWm1sc1pVbGtMQ0JwZEdWdGN5d2diMjVUZFdOalpYTnpMQ0J2YmtWeWNpazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmlBZ0lDQkhVMmhsWlhRdWMyRjJaVkZCYm1SQmN5QTlJSE5oZG1WUlFXNWtRWE03WEc0Z0lDQWdablZ1WTNScGIyNGdjMkYyWlZGQmJtUkJVMmx1WjJ4bFJtbHNaU2htYVd4bFNXUXNJSEZCYm1SQkxDQnZibE4xWTJObGMzTWdQU0FvS1NBOVBpQjdJSDBzSUc5dVJYSnlJRDBnS0dVcElEMCtJSHNnZlNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvY1VGdVpFRXVjMjl0WlNoZklEMCtJRjh1Y1VsMFpXMHVabWxzWlVsRUlDRTlJR1pwYkdWSlpDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJjSWtKVlIxd2lPMXh1SUNBZ0lDQWdJQ0JzWlhRZ2NHRnlZVzF6SUQwZ2V5QnpjSEpsWVdSemFHVmxkRWxrT2lCbWFXeGxTV1FnZlR0Y2JpQWdJQ0FnSUNBZ2RtRnlJR0p2WkhrZ1BTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVWx1Y0hWMFQzQjBhVzl1T2lCY0lsSkJWMXdpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ2NVRnVaRUV1YldGd0tGOGdQVDRnY1VGdVpFRXlWWEJrWVhSbFVtVnhLRjhwS1Z4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQm5ZWEJwTG1Oc2FXVnVkQzV6YUdWbGRITXVjM0J5WldGa2MyaGxaWFJ6TG5aaGJIVmxjeTVpWVhSamFGVndaR0YwWlNod1lYSmhiWE1zSUdKdlpIa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBdWRHaGxiaWhmSUQwK0lHOXVVM1ZqWTJWemN5Z3BMQ0JsSUQwK0lHOXVSWEp5S0dVcEtUdGNiaUFnSUNCOVhHNTlLU2hIVTJobFpYUWdmSHdnS0VkVGFHVmxkQ0E5SUh0OUtTazdYRzVqYjI1emRDQlJVR1Z5VTJOeVpXVnVJRDBnTVRBN1hHNWpiR0Z6Y3lCVGRISmhkR1ZuZVNCN1hHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb2NVRnVaRUZ6S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11Y0haUlFXNWtRWE1nUFNCMWJtUmxabWx1WldRN1hHNGdJQ0FnSUNBZ0lIUm9hWE11Y1VGdVpFRnpJRDBnY1VGdVpFRnpPMXh1SUNBZ0lDQWdJQ0IwYUdsekxuTnZjblFvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdibVY0ZENoeVpYTjFiSFJ6S1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2h5WlhOMWJIUnpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVW9jbVZ6ZFd4MGN5azdYRzRnSUNBZ0lDQWdJR2xtSUNnaGNtVnpkV3gwY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbkIyVVVGdVpFRnpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lGd2lRbFZIWENJN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YzI5eWRDZ3BPMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV4UVc1a1FYTXViR1Z1WjNSb0lEMDlJREFwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2V5QnhRVzVrUVhNNklGdGRMQ0J0WlhOellXZGxPaUJjSWs1dklHbDBaVzBnWm05MWJtUXVYQ0lnZlR0Y2JpQWdJQ0FnSUNBZ2JHVjBJRzFsYzNOaFoyVWdQU0JjSWx3aU8xeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCcGMwOTJaWEpNWldGeWJtbHVaeUE5SUNocGRHVnRLU0E5UGlCcGRHVnRMbk4wWVhSbElDRTlJRndpZFc1elpXVnVYQ0lnSmlaY2JpQWdJQ0FnSUNBZ0lDQWdJRVJoZEdWVmRHbHNMbWRsZEVSaGRHVk9kVzBvYVhSbGJTNXVaWGgwUkdGMFpTa2dQaUJFWVhSbFZYUnBiQzVuWlhSRVlYUmxUblZ0S0c1bGR5QkVZWFJsS0NrcE8xeHVJQ0FnSUNBZ0lDQnBaaUFvYVhOUGRtVnlUR1ZoY201cGJtY29kR2hwY3k1eFFXNWtRWE5iTUYwcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J4UVc1a1FYTWdQU0IwYUdsekxuRkJibVJCY3k1emJHbGpaU2d3TENCUlVHVnlVMk55WldWdUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRzFsYzNOaFoyVWdQU0JjSWx0dmRtVnlJR3hsWVhKdWFXNW5YVndpTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjVUZ1WkVGekxuTnZjblFvS0dFc0lHSXBJRDArSUdFdWFXNXBkRTl5WkdWeUlDMGdZaTVwYm1sMFQzSmtaWElwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2RsRkJibVJCY3lBOUlIRkJibVJCY3p0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjdJSEZCYm1SQmN5d2diV1Z6YzJGblpTQjlPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnY1VGdVpFRnpJRDBnZEdocGN5NXhRVzVrUVhNdWMyeHBZMlVvTUN3Z1VWQmxjbE5qY21WbGJpa3VabWxzZEdWeUtGOGdQVDRnSVdselQzWmxja3hsWVhKdWFXNW5LRjhwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHMWxjM05oWjJVZ1BTQmNJbHRzWldGeWJtbHVaMTFjSWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEZCYm1SQmN5NXpiM0owS0NoaExDQmlLU0E5UGlCaExtbHVhWFJQY21SbGNpQXRJR0l1YVc1cGRFOXlaR1Z5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNIWlJRVzVrUVhNZ1BTQnhRVzVrUVhNN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdleUJ4UVc1a1FYTXNJRzFsYzNOaFoyVWdmVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQjFjR1JoZEdVb2NtVnpkV3gwY3lrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVjSFpSUVc1a1FYTXBYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJjSWtKVlIxd2lPMXh1SUNBZ0lDQWdJQ0JwWmlBb2NtVnpkV3gwY3k1c1pXNW5kR2dnSVQwZ2RHaHBjeTV3ZGxGQmJtUkJjeTVzWlc1bmRHZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJjSWtKVlIxd2lPMXh1SUNBZ0lDQWdJQ0IwYUdsekxuQjJVVUZ1WkVGekxtWnZja1ZoWTJnb0tIRkJibVJCTENCcEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCeVpYTjFiSFFnUFNCeVpYTjFiSFJ6VzJsZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdibTkzSUQwZ2JtVjNJRVJoZEdVb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlaWE4xYkhRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnhRVzVrUVM1bVlXbHNRMjkxYm5RZ1BTQXdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHOXVaVVJoZVNBOUlERWdLaUF4TURBd0lDb2dOakFnS2lBMk1DQXFJREkwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHhRVzVrUVM1d2NtVjJSR0YwWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjBiWEJKYm5SbGNuWmhiQ0E5SUNodWIzY3VaMlYwVkdsdFpTZ3BJQzBnY1VGdVpFRXVjSEpsZGtSaGRHVXVaMlYwVkdsdFpTZ3BLU0FxSURJdU1EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY1VGdVpFRXVhVzUwWlhKMllXd2dQU0JOWVhSb0xtMWhlQ2h4UVc1a1FTNXBiblJsY25aaGJDd2dkRzF3U1c1MFpYSjJZV3dzSUc5dVpVUmhlU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeFFXNWtRUzVwYm5SbGNuWmhiQ0E5SUc5dVpVUmhlVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY1VGdVpFRXVjM1JoZEdVZ1BTQmNJbXhsWVhKdVhDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnhRVzVrUVM1bVlXbHNRMjkxYm5Rckt6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnhRVzVrUVM1cGJuUmxjblpoYkNBOUlEQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjVUZ1WkVFdWMzUmhkR1VnUFNCeFFXNWtRUzV6ZEdGMFpTQTlQU0JjSW5WdWMyVmxibHdpSUQ4Z1hDSnNaV0Z5Ymx3aUlEb2dYQ0p5Wld4bFlYSnVYQ0k3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCeFFXNWtRUzVwYm1sMFQzSmtaWElnUFNCTllYUm9MbkpoYm1SdmJTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NVRnVaRUV1Y0hKbGRrUmhkR1VnUFNCdWIzYzdYRzRnSUNBZ0lDQWdJQ0FnSUNCeFFXNWtRUzV1WlhoMFJHRjBaU0E5SUc1bGR5QkVZWFJsS0c1dmR5NW5aWFJVYVcxbEtDa2dLeUJ4UVc1a1FTNXBiblJsY25aaGJDazdYRzRnSUNBZ0lDQWdJQ0FnSUNCeFFXNWtRUzVzYjJjZ0t6MGdSR0YwWlZWMGFXd3VjM1J5S0c1dmR5a2dLeUFvY21WemRXeDBJRDhnWENMaW5KTmNJaUE2SUZ3aTRweVhYQ0lwSUNzZ1hDSWdYQ0k3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQkhVMmhsWlhRdWMyRjJaVkZCYm1SQmN5aDBhR2x6TG5CMlVVRnVaRUZ6TENBb0tTQTlQaUJqYjI1emIyeGxMbXh2WnloY0lsTmhkbVVnYzNWalkyVnpjMlZrWENJcExDQmxJRDArSUdOdmJuTnZiR1V1Ykc5bktGd2lVMkYyWlNCbVlXbHNaV1JjSWl3Z1pTa3BPMXh1SUNBZ0lIMWNiaUFnSUNCemIzSjBLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbkZCYm1SQmN5NXpiM0owS0NoaExDQmlLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmhVM1JoZEdVZ1BTQmhMbk4wWVhSbElEMDlJRndpZFc1elpXVnVYQ0lnUHlBd0lEb2dZUzV6ZEdGMFpTQTlQU0JjSW5KbGJHVmhjbTVjSWlBL0lERWdPaUF5TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1lsTjBZWFJsSUQwZ1lpNXpkR0YwWlNBOVBTQmNJblZ1YzJWbGJsd2lJRDhnTUNBNklHSXVjM1JoZEdVZ1BUMGdYQ0p5Wld4bFlYSnVYQ0lnUHlBeElEb2dNanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoVTNSaGRHVWdJVDBnWWxOMFlYUmxLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhVM1JoZEdVZ0xTQmlVM1JoZEdVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1lTNXpkR0YwWlNBOVBTQmNJblZ1YzJWbGJsd2lJSHg4SUdJdWMzUmhkR1VnUFQwZ1hDSjFibk5sWlc1Y0lpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lTNXBibWwwVDNKa1pYSWdMU0JpTG1sdWFYUlBjbVJsY2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIUnRjQ0E5SUVSaGRHVlZkR2xzTG1kbGRFUmhkR1ZPZFcwb1lTNXVaWGgwUkdGMFpTa2dMU0JFWVhSbFZYUnBiQzVuWlhSRVlYUmxUblZ0S0dJdWJtVjRkRVJoZEdVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUnRjQ0FoUFNBd0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGJYQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJITmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHRXVhVzVwZEU5eVpHVnlJQzBnWWk1cGJtbDBUM0prWlhJN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lIMWNibjFjYm05dVRHOWhaQ2dvS1NBOVBpQjdYRzRnSUNBZ1kyOXVjM1FnWTJ4cFgybGtVM1FnUFNCdVpYY2dVM1J5YVc1blRHbHpkRk4wYjNKaFoyVW9YQ0pqYkdsbGJuUnBaRndpS1R0Y2JpQWdJQ0JqYjI1emRDQnphV2R1YVc1VlNTQTlJRzVsZHlCVGFXZHVhVzVWU1NncE8xeHVJQ0FnSUdOdmJuTjBJR1pwYkdWSlJGTjBJRDBnYm1WM0lGTjBjbWx1WjB4cGMzUlRkRzl5WVdkbEtGd2labWxzWldsa1hDSXBPMXh1SUNBZ0lHTnZibk4wSUdOc2FWOXBaRlZKSUQwZ2JtVjNJRk5sYkdWamRFOXlTVzV3ZFhSVlNTaGNJbU5zYVdWdWRHbGtYQ0lzSUdOc2FWOXBaRk4wS1R0Y2JpQWdJQ0JqYjI1emRDQm1hV3hsU1VSVlNTQTlJRzVsZHlCVFpXeGxZM1JQY2tsdWNIVjBWVWtvWENKbWFXeGxhV1JjSWl3Z1ptbHNaVWxFVTNRcE8xeHVJQ0FnSUdOdmJuTjBJSEZzYVhOMFgxVkpJRDBnYm1WM0lGRlRaWFJNYVhOMFZVa29LVHRjYmlBZ0lDQmpiMjV6ZENCeFlXNWtZVjlWU1NBOUlHNWxkeUJSUVc1a1FWVkpLQ2s3WEc0Z0lDQWdiMjVEYkdsamF5aG5aU2hjSW1Oc1pXRnlYMkZzYkZ3aUtTd2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSVdOdmJtWnBjbTBvWENKRWJ5QjViM1VnY21WaGJHeDVJSGRoYm5RZ2RHOGdZMnhsWVhJZ1lXeHNJSEpsWjJsemRHVnlaV1FnUTJ4cFpXNTBTVVJ6SUNZZ1JtbHNaVWxFY3o5Y0lpa3BYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUdOc2FWOXBaRk4wTG1Oc1pXRnlLQ2s3WEc0Z0lDQWdJQ0FnSUdacGJHVkpSRk4wTG1Oc1pXRnlLQ2s3WEc0Z0lDQWdJQ0FnSUdGc1pYSjBLRndpUTJ4bFlYSmxaQzVjSWlrN1hHNGdJQ0FnSUNBZ0lIZHBibVJ2ZHk1c2IyTmhkR2x2Ymk1eVpXeHZZV1FvS1R0Y2JpQWdJQ0I5S1R0Y2JpQWdJQ0JqYkdsZmFXUlZTUzV2YmtWdWRHVnlJRDBnZEdWNGRDQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOc2FWOXBaRlZKTG1ocFpHVW9LVHRjYmlBZ0lDQWdJQ0FnUjFOb1pXVjBMbWx1YVhRb2RHVjRkQ3dnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyeHBYMmxrVTNRdVlXUmtTV1pPYjNSRmVHbHpkQ2gwWlhoMEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOcFoyNXBibFZKTG5Ob2IzY29LVHRjYmlBZ0lDQWdJQ0FnZlN3Z1pTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhiR1Z5ZENoS1UwOU9Mbk4wY21sdVoybG1lU2hsS1NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzYjJOaGRHbHZiaTV5Wld4dllXUW9LVHRjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnZlR0Y2JpQWdJQ0J6YVdkdWFXNVZTUzV2YmtOc2FXTnJJRDBnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JIVTJobFpYUXVjSEp2YlhCMFUybG5ia2x1S0NrN1hHNGdJQ0FnZlR0Y2JpQWdJQ0JIVTJobFpYUXViMjVUYVdkdVNXNGdQU0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJSE5wWjI1cGJsVkpMbWhwWkdVb0tUdGNiaUFnSUNBZ0lDQWdabWxzWlVsRVZVa3VjMmh2ZHlncE8xeHVJQ0FnSUgwN1hHNGdJQ0FnUjFOb1pXVjBMbTl1VTJsbmJrOTFkQ0E5SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnWVd4bGNuUW9YQ0pUYVdkdVpXUWdiM1YwTGx3aUtUdGNiaUFnSUNCOU8xeHVJQ0FnSUd4bGRDQndkbEZNYVhOMElEMGdkVzVrWldacGJtVmtPMXh1SUNBZ0lHWnBiR1ZKUkZWSkxtOXVSVzUwWlhJZ1BTQjBaWGgwSUQwK0lIdGNiaUFnSUNBZ0lDQWdabWxzWlVsRVZVa3VhR2xrWlNncE8xeHVJQ0FnSUNBZ0lDQkhVMmhsWlhRdVoyVjBVVXhwYzNRb2RHVjRkQ3dnY1V4cGMzUWdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabWxzWlVsRVUzUXVZV1JrU1daT2IzUkZlR2x6ZENoMFpYaDBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIRnNhWE4wWDFWSkxuTm9iM2NvY1V4cGMzUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NIWlJUR2x6ZENBOUlIRk1hWE4wTzF4dUlDQWdJQ0FnSUNCOUxDQmxJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0ZzWlhKMEtFcFRUMDR1YzNSeWFXNW5hV1o1S0dVcEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdacGJHVkpSRlZKTG5Ob2IzY29LVHRjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnZlR0Y2JpQWdJQ0JzWlhRZ2MzUnlZWFJsWjNrZ1BTQjFibVJsWm1sdVpXUTdYRzRnSUNBZ2NXeHBjM1JmVlVrdWIyNVRaV3hsWTNRZ1BTQnBkR1Z0SUQwK0lIdGNiaUFnSUNBZ0lDQWdjV3hwYzNSZlZVa3VhR2xrWlNncE8xeHVJQ0FnSUNBZ0lDQkhVMmhsWlhRdWJHOWhaRkZCYm1SQlRHbHpkQ2hwZEdWdExDQnhRVzVrUVNBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRISmhkR1ZuZVNBOUlHNWxkeUJUZEhKaGRHVm5lU2h4UVc1a1FTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J2Yms1bGVIUWdQU0FvY21WemRXeDBjeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doYzNSeVlYUmxaM2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ1hDSkNWVWRjSWp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZXlCeFFXNWtRWE1zSUcxbGMzTmhaMlVnZlNBOUlITjBjbUYwWldkNUxtNWxlSFFvY21WemRXeDBjeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY1dGdVpHRmZWVWt1YzJodmR5aHhRVzVrUVhNc0lHMWxjM05oWjJVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEZoYm1SaFgxVkpMbTl1VG1WNGRDQTlJRzl1VG1WNGREdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5dVRtVjRkQ2dwTzF4dUlDQWdJQ0FnSUNCOUxDQmxJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnWlNBOVBTQmNJbk4wY21sdVoxd2lLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZzWlhKMEtHVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZzWlhKMEtFcFRUMDR1YzNSeWFXNW5hV1o1S0dVcEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdkbEZNYVhOMEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIRnNhWE4wWDFWSkxuTm9iM2NvY0haUlRHbHpkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiSE5sWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdoeWIzY2dYQ0pDVlVkY0lqdGNiaUFnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdmVHRjYmlBZ0lDQmpiR2xmYVdSVlNTNXphRzkzS0NrN1hHNGdJQ0FnUjFOb1pXVjBMbXh2WVdRb0tUdGNiaUFnSUNCM2FXNWtiM2RiWENKblUyaGxaWFJjSWwwZ1BTQkhVMmhsWlhRN1hHNTlLVHRjYmk4dkl5QnpiM1Z5WTJWTllYQndhVzVuVlZKTVBXUmhkR0U2WVhCd2JHbGpZWFJwYjI0dmFuTnZianRpWVhObE5qUXNaWGxLTWxwWVNucGhWemwxU1dwdmVreERTbTFoVjNoc1NXcHZhV0ZYTld0YVdHZDFZVzVOYVV4RFNucGlNMVo1V1RKV1UySXlPVEJKYW05cFNXbDNhV015T1RGamJVNXNZM2xKTmxkNVNYVk1hVGgxVEdrNWVtTnRUWFprU0UxMllWYzFhMXBZWjNWa1NFMXBXRk4zYVdKdFJuUmFXRTFwVDJ4MFpFeERTblJaV0VKM1lWYzFibU41U1RaSmEwWkNVVEJGYzFVd1JrSlZlWGhHVVZWR1JreEZUa0pSVlUxelVsVkdRbFpVZEVwUlZVNTVVV2w0VUZGVlJsQk1Sa1pDVVZaRmMxRXdSa0pSZVhocVVWVkdha3hGVGtKUlZVMXpVbFZHUWxKVGVFUlJWVVpHVEVWT1FsRlZUVGRSVlVaRVkydE5jMUV3UmtKUmVuUkNVVlZPUlV4R1RrSlJWazF6VWxWR1FsSlRlRVJSVlVZelVYbDRVRkZWUmxaUE1HeENVWHBXUlV4Rk9VSlJWVGh6VlZWR1FsVlRlRVJSVlVaRVRFZEdRbEZYUlhOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZWTmMxRXdSa0pSZW5SQ1VWVk9ORkY1ZUVSUlZVWkVUekJHUWxFd1VYTlZNRVpDVlhsNFNGRlZSa2hNUlU1Q1VWVk5jMVV3UmtKaFZVbHpVbFZHUWxKVGVGQlJWVVp3VVdsNFJsRlZSa1pNUlZaQ1VWWmpjMUpWUmtKU1UzaFVVVlZHZUZGcWRFcFJWVTUzVW1sNFRsRlZSazVNUlZaQ1VWVlZjMUl3UmtKU2VYaEdVVlZHUmt4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVk9RbEZWVFRkVFZVWkVZMFZKYzFKVlJrSlNVM2hFVVZWR1JFeEdUa0pSVmsxelVqQkdRbEo1ZUZSUlZVWlVURVZPUWxGVlRUZFRWVVpFWld0SmMxUXdSa0pVZVhoRVVWVkdSRXhGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5TVlVaQ1VsTjRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhHVVZWR1JreEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUbk5SZVhoS1VWVkdTa3hGVmtKUlZWVTNWVlZHUWxKVGVFWlJWVVpHVEVWT1FsRlZUWE5TVlVaQ1VsTjRTRkZWUmtoTVJWWkNVVlZWYzFFd1JrSlJlblJLVVZWT2RWRnBlRXBSVlVaS1RFWk9RbEZXVFRkVlZVWkNVbE40VUZGVlJsQk1SVTVDVVZWTmMxSlZSa0pTVTNoR1VWVkdSa3hHVGtKUlZrMXpVVEJHUWxGNWVFUlJWVVpFVHpCc1FsRXpVa1JNUlRsQ1VWVTRjMUpWUmtKU1UzaEVVVlZHUkU4d1JrSlJNV2R6VVRCR1FsRjZkRUpSVlU1RlRFWk9RbEZXVFhOVFZVWkNVMU40UkZGVlJrUk1SV1JDVVZka1EweEZWa0pSVlZWelVqQkdRbFo2ZEVwUlZVMTRVWGw0U0ZGVlJraE1SVTVDVVZWTmMxVXdSa0pWZVhoRVVWVkdSRXhGTVVKUlZUQnpVVEJHUWxGNWVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VYcDBRbEZWVFhwUmFYaEVVVlZHUkU4d1JrSlJNRkZ6VlRCR1FsVjVlRXBSVlVaS1RFVk9RbEZWVFhOU01FWkNXakJKYzFKVlJrSlNVM2hJVVZWR1dFOHdiRUpSZWtaRVRFVmtRbEZWWTNOUk1FWkNVWGw0VkZGVlJsUk1SVTVDVVZWTmMxSXdSa0pTZVhoRVVWVkdSRXhGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVHpCR1FsRXphRU5NUlU1Q1VWVk5OMUZWUmtSU1EzaFVVVlZHVkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRWhSVlVadVVXcDBTbEZWVFhaUmFYaElVVlZHU0V4RlRrSlJWVTF6VlRCR1FsVjVlRWhSVlVaSVRFVldRbEZWVlhOUk1FWkNVWHAwUWxGVlRuZFJhWGhFVVZWR1JFOHdSa0pSTUZGelZUQkdRbFY1ZUZCUlZVWlFURVZPUWxGVlRYTlNNRVpDV2pCSmMxSlZSa0pTVTNoR1VWVkdhRTh3YkVKUmVUbEVURVZrUWxGVlkzTlJNRVpDVVhsNGJsRnJSa0phTUVselVUQkdRbEY1ZUZCUlZVWlFURVZXUWxGVlZYTlNWVVpDVWxONFJGRlZSa1JNUlU1Q1VWVk5OMUZWUmtSaWEwMXpVVEJHUWxGNmRFSlJWVTVGVEVaT1FsRldUWE5VVlVaQ1ZGTjRSRkZWUmtSTVJWWkNVVmRGTjFOVlJrUk9WVWx6VkZWR1FsUlRlRVJSVlVaRVRFZGtRMUZWUm01UmFYaEVVVlZHUkV4Rk1VSlJWVEJ6VWxWR1FsSlRlRVpSVlVaR1RFVk9RbEZWVFhOUk1FWkNVWHAwUWxGVlRubFJlWGhFVVZWR1JFOHdSa0pTVlZGelZGVkdRbFJUZUhCUmEwWkNZVlZKTjFOVlJrWmtSVWx6VjFWR1FtTlZTWE5TTUVaQ1ZucDBVbEZWUmxsTVJrWkNVVlZqYzFJd1JrSlRRM2hJVVZWR1NFeEZUa0pSVmtVM1ZWVkdSRXd3U1hOVFZVWkNVMU40UkZGVlJrUk1SWFJDVVZWemMxSXdSa0pTZVhoR1VWVkdSa3hGVGtKUlZVMDNVMVZHUkdGclNYTlJNRVpDVVhwMFNsRlZUa1ZNUld4Q1VWVnJjMU5WUmtKVFZIUlNVVlZPVVV4RmJFSlJWV3R6VVRCR1FsRjVlRTVSVlVaT1RFVldRbEZWVlhOUk1FWkNVWHAwVWxGVlRtdE1SVGxDVVZVNGMxTlZSa0pUVTNoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFeFJWVVpNVEVWV1FsRlZWWE5STUVaQ1VYcDBTbEZWVFhwUmFYaEVVVlZHUkU4d2JFSlJNRkZ6VTFWR1FsTlRlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNXWHAwVWxGVlRqQlJhWGhLVVZWR1NreEZUa0pSVlUxelV6QkdRbE41ZUVoUlZVWklURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlZaQ1VWVlZjMUV3UmtKUmVuUlNVVlZOZUZGcGVFcFJWVVpLVEVWT1FsRlZUWE5aVlVaQ1dWTjRSbEZWUmtaTVJVNUNVVlZOTjFOVlJrUmtSVWx6VVRCR1FsRjZkRXBSVlU1RlRFVnNRbEZXYTNOV1ZVWkNWbFIwVWxGVlRubFJhWGhRVVZWR1VFeEZiRUpSVld0elVUQkdRbEY1ZUVoUlZVWklURVZrUWxGVlkzTmlNRXBDVVZjNVEweEZUa0pSVlUwM1UxVkdSR1ZGVFhOUk1FWkNVWHAwU2xGVlRrVk1SV1JDVVZWamMxRXdSa0pSZVhoSVVWVkdXRTh4UmtKUk1sRnpWREJHUWxSNWVFcFJWVVpLVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJUbENVVlU0YzFFd1JrSlJlWGhJVVZWR1NFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRUZFRWVVpFWTBWTmMxRXdSa0pSZW5SS1VWVk9SVXhGWkVKUlZXTnpVVEJHUWxGNWVFaFJWVVpZVHpGR1FsRXlVWE5UVlVaQ1UxTjRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVlRUZFZWVVpFWTJ0SmMxTlZSa0pUVTNoRVVWVkdSRXhIUmtKUlYwVnpVbFZHUWxKVGVFUlJWVVpFVHpCc1FsRXpVa05NUlU1Q1VWVk5OMU5WUmtSU1EzaG9VVlZHYUV4RlRrSlJWVTF6VWpCR1FsWjZkRkpSVlU0MFVXbDRTbEZWUmtwTVJVNUNVVlZOYzFSVlJrSlVVM2hHVVZWR1JreEZUa0pSVlUwM1ZWVkdSRnBEZUVwUlZVWktURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMVF3UmtKVWVYaEVVVlZHUkV4RlpFSlJWV056VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFRkWFZVWkVUMVZKYzFOVlJrSlRVM2hFVVZWR1JFeEZaRUpSVldOelVUQkdRbEY1ZUVoUlZVWklURVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUbTlSYVhoRVVWVkdSRTh3YkVKU1ZWRnpWRlZHUWxSVGVFUlJWVVpFVEVWa1FsRldZemRWVlVaRVlXdEpjMU5WUmtKVFUzaEVVVlZHUkV4Rk1VSlJWVEJ6VWxWR1FsSlRlRVJSVlVaRVR6RkdRbEV5VVhOVVZVWkNWRk40UkZGVlJrUk1SV1JDVVZWamMxTlZSa0pUVTNoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOTjFWVlJrUmlSVTF6VTFWR1FsTlRlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWHAwV2xGVlJrWk1SVGxDVVZVNGMxTXdSa0pUZVhoRVVWVkdSRTh4UmtKUk0yaERURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4RlRrSlJWVTF6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWHAwVWxGVlRqUlJhWGhLVVZWR1NreEZUa0pSVlUxeldWVkdRbGxUZUVaUlZVWkdURVZPUWxGVlRUZFZWVVpFWTJ0SmMxUXdSa0pVZVhoS1VWVkdTa3hGVGtKUlZVMDNVMVZHUkZscGVFUlJWVVpFVHpCc1FsRXdVWE5UTUVaQ1UzcDBVbEZWVGt0TVJteENVVlpyYzFFd1JrSlJlWGhXVVZWR1ZreEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVpXUWxGV1ZYTlJNRVpDVVhsNFJGRlZSa1JQTVVaQ1VUTndSRXhGYkVKUlZXdHpVVEJHUWxGNWVFNVJWVVpPVEVWV1FsRlZWWE5STUVaQ1VYcDBTbEZWVG0xTVJVNUNVVlZOTjFOVlJrUlVlWGhPVVZWR1RrOHhSa0pSTWtselZGVkdRbFJUZUVwUlZVWktURVZrUWxGVlkzTlhWVVpDVjFONFJGRlZSa1JNUlRsQ1VWVTRjMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VmxWR1FsWlRlRVJSVlVaRVRFVk9RbEZWVFRkVlZVWkVZbXRSYzFOVlJrSlRVM2hFVVZWR1JFeEZiRUpSVld0elVsVkdRbEpVZEZwUlZVNVhURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUldSQ1VWVmpjMUpWUmtKU1UzaEVVVlZHUkU4eFRrSlJNbWhEVHpKR1FsRlZNRGRYVlVaRVZHbDRTbEZWUmtwUE1tUkRVVlZPU1V4Rk1VSlJWVEJ6VTFWR1FsTlRlRWhSVlVaSVRFVnNRbEZWYTNOUk1FWkNVWGw0VEZGVlJreE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMDNXakJLUWxGNmJFTk1SV3hDVVZWcmMxRXdSa0pSZVhoTVVWVkdURXhGVGtKUlZVMXpWREJHUWxSNWVFUlJWVVpFVEVWc1FsRlZhM05STUVaQ1VYbDRTbEZWUmtwTVJXeENVVlZyYzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZXUWxGVlZYTlJNRVpDVVhsNFVGRlZSbEJNUlU1Q1VWVk5jMU5WUmtKVFUzaFNVVlZHVWt4RlRrSlJWVTF6VWxWR1FsSlVkSFpSYTBaRVlXdFZjMU5WUmtKVFUzaEVVVlZHUkV4RmRFSlJWWE56VWpCR1FsSjVlRVpSVlVaR1RFVk9RbEZWVFRkaFZVcENVVEpvUTA4elJrTlJWVVpPVHpJNVExRlZUazlNUld4Q1VWVnJjMUV3UmtKUmVYaE1VVlZHVEV4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVR6SnNRMUZWVG5OUmFuUm9VVlZPUlU4eGJFSlJWVTF6VkRCR1FsUjVlRVJSVlVaRVRFVldRbEZWVlRkYU1FcENVVEZuYzFOVlJrSlRVM2hFVVZWR1JFeEZkRUpSVlhOelVqQkdRbEo1ZUVaUlZVWkdURVZPUWxGVlRUZFpWVVpFWVVWSk4xVXdSa1JTUkhSU1VWVk9SVXhGYkVKUlZXdHpVVEJHUWxGNWVHaFJWVVpvVEVWV1FsRlZWWE5STUVaQ1VYcDBTbEZWVGpCUmFYaEVVVlZHUkU4d2JFSlJNRGh6V1ZWR1FsbFVkRkpSVlU1M1VXbDRUbEZWUms1TVJXeENVVlZyYzFJd1JrSlNlWGhLVVZWR1NreEZUa0pSVlUxelZUQkdRbFY1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMUV3UmtKUmVuUlNVVlZPTkZGNWVGcFJWVVphVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrSlJlWGhXVVZWR1ZreEZWa0pSVlZWelUxVkdRbE5UZUVSUlZVWkVURVZPUWxGVlRUZFRWVVpFVGpCTmMxRXdSa0pSZW5SRVVWVk9SVTh3UmtKUk1GRnpWRlZHUWxSVGVHeFJWVVpzVHpCc1FsUXpRa05NUm14Q1VWWnJjMVZWUmtKYU1FbHpVbFZHUWxKVGVGQlJWVVYzVVdsNFJsRlZSa1pNUmxaQ1VWZDBSRXhGWkVKUlZXTnpVbFZHUWxKVGVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYcDBVbEZWVGpKU2VYaEtVVlZHU2t4RlRrSlJWVTF6VTFWR1FsTlRlRWhSVlVaSVRFVldRbEZWVlhOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZjeFEweEZUa0pSVlUwM1ZWVkdSRTB3VFhOVFZVWkNVMU40UkZGVlJrUk1SVlpDVVZWVmMxSXdSa0pTZVhoR1VWVkdSa3hGVGtKUlZVMXpWVlZHUWxWVGVFaFJWVVpJVEVWMFFsRlZjM05STUVaQ1kxVkpjMUV3UmtKUmVuUlNVVlZPZFZKRGVFcFJWVVpLVEVWT1FsRlZUWE5UTUVaQ1UzbDRTRkZWUmtoTVJWWkNVVlZWYzFFd1JrSlJlWGhTVVZWR1VreEZaRUpSVldOelZWVkdRbFZUZUVSUlZVWjRVV2w0UkZGVlJrUlBNVVpDVVROd1JVeEZiRUpSVld0elVUQkdRbEY1ZUZKUlZVWlNURVZrUWxGVlkzTlNWVVpDVWxONFJGRlZSa1JNUmtaQ1VWWkZjMUl3UmtKU2VYaFNVVlZHVWt4RlRrSlJXRTVEVEVWT1FsRlZUVGRWVlVaRVRqQlJjMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VWpCR1FsSjVlRkJSVlVaUVRFVk9RbEZWVFRkVlZVWkVaR3RKYzFOVlJrSlRVM2hFVVZWR1JFeEZPVUpSVlRoelVqQkdRbEo1ZUZCUlZVWlFURVZPUWxGVlRUZFZWVVpFWkd0SmMxUlZSa0pVVTNoS1VWVkdTa3hGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVHpGR1FsRXllRU5NUlRsQ1VWVTRjMUV3UmtKUmVYaEtVVlZHU2t4RlRrSlJWVTF6VlZWR1FsVlRlRVpSVlVaR1RFVmtRbEZWWTNOU1ZVWkNVbFIwV2xGVlRYcFJhWGhLVVZWR1NreEZUa0pSVlUxelZqQkdRbFo1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMU13UmtKVGVYaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JHTkZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFOVlJrUlRhWGhFVVZWR1JFOHdiRUpSTUZGelUxVkdRbE5VZEZKUlZVNUpURVZzUWxGVmEzTlJNRVpDVVhsNFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEdVVlZHUmt4Rk1VSlJWVEJ6VVRCR1FsRjVlRVJSVlVaRVR6RkdRbEV6YUVOTVJURkNVVlV3YzFNd1JrSlRlWGhJVVZWR1NFeEZiRUpSVld0elVUQkdRbEY1ZUZCUlZVWlFURVZPUWxGVlRYTlRWVVpDVTFONFJGRlZSa1JQTVVaQ1VUSm9SRXhGTVVKUlZUQnpVbFZHUWxKVGVFaFJWVVpJVEVWc1FsRlZhM05STUVaQ1VYbDRSbEZWUmtaTVJVNUNVVlZOTjFWVlJrUmlhMGx6VkZWR1FsUlRlRVJSVlVaRVRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUlBNVVpDVVRGbmMxUlZSa0pVVTNoS1VWVkdTa3hGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVHpGR1FsRXllRU5NUlhSQ1VWVnpjMUV3UmtKUmVYaFFVVlZHVUV4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVldRbEZWVlRkWFZVWkVZMFZKYzFSVlJrSlVVM2hHVVZWR1JreEZaRUpSVldOelVqQkdRbEo1ZUVSUlZVWkVURVZzUWxGVmEzTlNWVVpDVWxONFJsRlZSa1pNUlZaQ1VWVlZjMVV3UmtKVmVYaEdVVlZHUmt4RlpFSlJWV056VWxWR1FsSlVkRzVSYTBaRVpVVk5jMU5WUmtKVFUzaEVVVlZHUkV4R1pFSlJWbU56VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOUk1FWkNVWHAwV2xGVlRqUlJhWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEZwUlZVNUpURVZXUWxGVlZYTlJNRVpDVVhsNFdGRlZSbGhNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTAzVlZWR1JHTkZTWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFWVlJrUlRRM2hLVVZWR1NreEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVYwUWxGVmMzTlNNRVpDVW5sNFJsRlZSa1pNUlU1Q1VWVk5OMU5WUmtSa2EwbHpVVEJHUWxGNmRFcFJWVTVGVEVWc1FsRlZhemRWVlVaRVUwTjRTbEZWUmtwTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZiRUpSVld0elVsVkdRbEpUZUU1UlZVWk9URVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUalpSYVhoRVVWVkdSRTh3YkVKUk1EaHpWakJHUWxaNWVFUlJWVVpFVEVWc1FsRldhemRWVlVaRVREQkpjMU5WUmtKVFUzaEVVVlZHUkV4Rk9VSlJWVGh6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOUk1FWkNVWHAwU2xGVlRuZFJhWGhFVVZWR1JFOHdUa0pSTUZFM1VWVkdSRkpEZUU1UlZVWk9URVpHUWxGV1JUZFRWVVpLV1dsNFdsRlZSbHBNUm14Q1VWaGtRMHhGWkVKUlZXTnpVbFZHUWxKVGVFUlJWVVpFVEVWMFFsRlZjM05STUVaQ1VYcDBVbEZWVFhaUmVYaEtVVlZHU2t4RlRrSlJWVTF6VTFWR1FsTlRlRWhSVlVaSVRFVldRbEZWVlhOUk1FWkNVWGw0VWxGVlJsSk1SVTVDVVZjeFEweEZUa0pSVlUwM1ZWVkdSRTB3VFhOVFZVWkNVMU40UkZGVlJrUk1SV1JDVVZWamMxSXdSa0pTZVhoR1VWVkdSa3hGVGtKUlZVMXpWMVZHUWxkVGVFUlJWVVo2VVdsNFJGRlZSa1JQTVVaQ1VUSndSVXhGYkVKUlZXdHpVVEJHUWxGNWVGQlJWVVpRVEVWa1FsRlZZM05WTUVaQ1ZYbDRSRkZWUmtKUE1VWkNVVE5vUTB4Rk1VSlJWVEJ6VTFWR1FsTlRlRWhSVlVaSVRFVnNRbEZWYTNOUk1FWkNVWHAwVWxGVlRuTlJhWGhRVVZWR1VFeEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVZrUWxGVlkzTlNWVVpDVWxONFNGRlZSa2hNUlZaQ1VWVlZOMWRWUmtSa1JVbHpVMVZHUWxOVGVFUlJWVVpFVEVVNVFsRlZPSE5TVlVaQ1VsTjRSRkZWUmtSUE1VWkNVVEpvUTB4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6QnNRbEV3YjNOUk1FWkNVWHAwU2xGVlRrVk1SV3hDVVZWck4xVlZSa1JUUTNoS1VWVkdTa3hGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVWc1FsRlZhM05TVlVaQ1VsTjRUbEZWUms1TVJVNUNVVlZOYzFFd1JrSlJlblJLVVZWT05sRnBlRVJSVlVaRVR6QnNRbEV3VVhOVFZVWkNVMVIwVWxGVlRrbE1SV3hDVVZWcmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVMVZHUWxOVGVFWlJWVVpHVEVVeFFsRlZNSE5STUVaQ1VYbDRSRkZWUmtSUE1HeENVVE53UTB4RlRrSlJWVTAzVVRCR1JGSkVkRUpSVlRGRlRFVXhRbEZWTUhOV1ZVWkNWbFIwU2xGVmJHMVBNVVpDVWtWRmMxbFZSa0pWVTNoSVVWVkdTRXhGVGtKUlZVMXpVMVZHUWxaNWVFWlJWVVpHVEVWV1FsRlZWWE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZGTjFWVlJrWlBWVWx6VTFWR1FsTlRlRVJSVlVaRVRFVnNRbEZWYTNOU01FWkNVbmw0UmxGVlJrWk1SVTVDVVZWTmMxUXdSa0pVZVhoRVVWVkdkRkZwZUVSUlZVWkVUekZHUWxGNlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoR1VWVkdSa3hGWkVKUlZXTnpVbFZHUWxKVGVFUlJWVVpFVEVaV1FsRldWWE5STUVaQ1kxVkpjMUV3UmtKUmVuUktVVlZOTlZGNWVFUlJWVVpFVHpCc1FsRXdVWE5UVlVaQ1UxTjRSRkZWUmtSTVJYUkNVVmROTjFWVlJrUmlSVWx6VTFWR1FsTlRlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0U2xGVlJrcE1SVlpDVVZWVmMxUlZSa0pVVTNoRVVWVkdSRXhGVGtKUlZVMDNWVlZHUkdWRlNYTlVWVVpDVkZONFJsRlZSa1pNUldSQ1VWVmpjMU5WUmtKVFUzaEVVVlZHUkV4RlZrSlJWVlZ6VVRCR1FsRjZkRkpSVlU1MVVXbDRUbEZWUms1TVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUwM1ZWVkdSRmREZUU1UlZVWk9URVZzUWxGVmEzTlNNRVpDVW5sNFNsRlZSa3BNUlU1Q1VWVkZOMVZWUmtSaGEwbHpVekJHUWxONWVFUlJWVVpFVEVVNVFsRlZPSE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFKVlJrSlNWSFJhVVZWT2NWRnBlRTVSVlVaT1RFVldRbEZWVlhOU01FWkNVbmw0U0ZGVlJraE1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhHVmtKUlZsVnpVbFZHUWxKVGVFWlJWVVpHVEVWV1FsRlZWWE5WTUVaQ1ZYbDRSbEZWUmtaTVJXUkNVVlZqYzFKVlJrSlNWSFJ1VVd0R1JHRkZVWE5UVlVaQ1UxTjRSRkZWUmtSTVJrWkNVVlpGYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEZwUlZVNXpVV2w0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZW5SYVVWVk9TVXhGVmtKUlZWVnpVVEJHUWxGNWVGaFJWVVpZVEVWT1FsRlZUWE5TVlVaQ1VsTjRSRkZWUmtSTVJVNUNVVlZOTjFWVlJrUmpSVWx6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWUlRkVFZVWkVVME40UkZGVlJrUlBNR3hDVVRCUmMxTlZSa0pUVkhSU1VWVk9TVXhGYkVKUlZXdHpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5UVlVaQ1UxTjRSbEZWUmtaTVJURkNVVlV3YzFFd1JrSlJlWGhFVVZWR1JFOHdiRUpSTTNCRFRFVk9RbEZWVFRkUk1FWkVVa1IwUWxGWVpFTlNRM2hPVVZWR1RreEZPVUpSVlRnM1UxVkdVRmRxZEZKUlZWcFNURVpXUWxGVmMzTlNNRVpDWTFWSmMxSlZSa0pTVTNoRVVWVkdRazh4UmtKUk0wSkVURVprUWxGVk1ITlNNRVpDVW5sNFJGRlZSa1JNUlRsQ1VWZDBRMHhGVmtKUlZWVnpVbFZHUWxKVGVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VWUjBVbEZWVm5WUmVYaEtVVlZHU2t4RlRrSlJWVTF6VTFWR1FsTlRlRWhSVlVaSVRFVldRbEZWVlhOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZjeFEweEZUa0pSVlUwM1ZWVkdSRTFWVFhOVFZVWkNVMU40UkZGVlJrUk1Sa1pDVVZaRmMxSXdSa0pTZVhoR1VWVkdSa3hGVGtKUlZVMXpXakJLUWxGWFpFTk1SVTVDVVZjeFEweEZUa0pSVlUwM1ZWVkdSR1JyVVhOVFZVWkNVMU40UkZGVlJrUk1SVGxDVVZVNGMxSXdSa0pTZVhoR1VWVkdSa3hGVGtKUlZVMXpXVlZHUWxsVGVFUlJWVVo2VVdsNFJGRlZSa1JQTVVaQ1VUTlNSVXhGYkVKUlZXdHpVVEJHUWxGNWVFaFJWVVpJVEVWa1FsRlZZM05TVlVaQ1VsTjRSRkZWUmtSTVJteENVVlpyYzFFd1JrSmlNRWx6VVRCR1FsRjZkRkpSVlUxMlVYbDRUbEZWUms1TVJXeENVVlZyYzFJd1JrSlNlWGhLVVZWR1NreEZUa0pSVlUwM1ZWVkdSR0pGU1hOVU1FWkNWSGw0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoUVVWVkdVRXhGVmtKUlZWVnpVakJHUWxKNWVFWlJWVVpHVEVWT1FsRlZUWE5UVlVaQ1UxTjRSRkZWUmtSTVJsWkNVVlpWYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUwM1UxVkdSR0ZGVVhOUk1FWkNVWHAwU2xGVlRrVk1SV3hDVVZWcmMxRXdSa0pSZVhoT1VWVkdiRXhGVmtKUlZWVnpVakJHUWxaNmRGSlJWVTV2VVhsNFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmJFSlJWV3R6VWxWR1FsSlRlRTVSVlVaT1RFVk9RbEZWVFhOUk1FWkNVWHAwVWxGVlRqUlJhWGhPVVZWR1RreEdSa0pSVmtWelVqQkdRbEo1ZUVwUlZVWktURVZPUWxGVlRYTlZWVVpDVlZONFJGRlZSa1JQTVVaQ1VYazVRMHhGTVVKUlZUQnpVVEJHUWxGNWVGSlJWVVpTVEVWT1FsRlZUWE5STUVaQ1VYcDBVbEZWVG5GUmFYaEtVVlZHU2t4RlRrSlJWVTF6VXpCR1FsTjVlRWhSVlVaSVRFVldRbEZWVlhOUk1FWkNVWHAwVWxGVlRtOVJhWGhPVVZWR1RreEZiRUpSVld0elVqQkdRbEo1ZUVwUlZVWktURVZPUWxGVlRUZFZWVVpFWWtWSmMxUlZSa0pVVTNoRVVWVkdSRXhGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5TVlVaQ1VsUjBXbEZWVG5OUmFYaE9VVlZHVGt4RlpFSlJWV056VWpCR1FsSjVlRVpSVlVaR1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SVTVDVVZWTk4xZFZSa1JrUlVselZGVkdRbFJUZUVSUlZVWkVURVZrUWxGVlkzTlNWVVpDVWxONFJGRlZSa1JNUlhSQ1VWVnpjMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJNMEpEVEVVeFFsRlZNSE5STUVaQ1VYbDRTRkZWUmtoTVJWWkNVVlZWYzFFd1JrSlJlWGhNVVZWR1RFeEZUa0pSVlUxelVUQkdRbEY2ZEZwUlZVNTNVV2w0UkZGVlJrUk1SVTVDVVZWTmMxVXdSa0pWZVhoSVVWVkdTRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRYVlVaRVlrVkpjMUV3UmtKUmVYaEVVVlZHUkV4R1RrSlJWazF6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVVRKNFEweEZPVUpSVlRoelVUQkdRbEY1ZUVSUlZVWkVURVZXUWxGVlZYTlNNRVpDVW5sNFJsRlZSa1pQTW1SRFVWVk9iVXhGYkVKUlZXdHpVVEJHUWxGNWVFaFJWVVpJVEVWV1FsRlZWWE5WTUVaQ1ZYbDRSRkZWUmtSTVJVNUNVVlZOTjFvd1NrSlJNMHBEVEVWc1FsRlZhM05STUVaQ1VYbDRTRkZWUmtoTVJWWkNVVlZWYzFRd1JrSlVlWGhFVVZWR1JFeEZUa0pSVlUwM1dqQktRbEV5TlVOTVJXeENVVlZyYzFFd1JrSlJlWGhJVVZWR1NFeEZWa0pSVlZWelZUQkdRbFY1ZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFWkVWSmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkZORGVGQlJWVVpRVEVWT1FsRlZUWE5STUVaQ1VYbDRSbEZWUmtaTVJXUkNVVlZqYzFKVlJrSlNWSFJ1VVd0R1JGcHBlRXBSVlVaS1RFVk9RbEZWVFhOU01FWkNVbmw0UmxGVlJrWk1SazVDVVZaTmMxRXdSa0pSZVhoRVVWVkdSRTh5WkVOUlZVNTVVV2w0U2xGVlJrcE1SVTVDVVZWTmMxSXdSa0pTZVhoR1VWVkdSa3hHVGtKUlZrMXpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUbmxSYVhoS1VWVkdTa3hGVGtKUlZVMXpVakJHUWxKNWVFWlJWVVpHVEVVNVFsRlZPSE5STUVaQ1VYbDRSRkZWUmtSUE1XeENVVE5DUTB4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6RnNRbEV3WjNOVFZVWkNVMU40UkZGVlJrUk1SV1JDVVZWamMxSlZSa0pTVTNoVVVWVkdWRXhGVGtKUlZVMXpVVEJHUWxGNmRGcFJWVTU1VVdsNFNsRlZSa3BNUlU1Q1VWVk5jMUV3UmtKUmVYaEdVVlZHUmt4SFRrSlJWMDF6VVRCR1FsRjVlRVJSVlVaRVR6RnNRbEV6YUVOTVJXeENVVlZyYzFFd1JrSlJlWGhFVVZWR1JFeEZWa0pSVlZWeldUQkdRbGw1ZUVSUlZVWkVURVZPUWxGVlRUZFhWVVpFWlVWSmMxSXdSa0pTZVhoRVVWVkdSRXhHWkVKUlZtTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVG5WUmFYaElVVlZHU0V4RlRrSlJWVTF6VmpCR1FsWjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNV3hDVVRJMVEweEZiRUpSVld0elVUQkdRbEY1ZUVoUlZVWklURVZXUWxGVlZYTlhWVVpDVjFONFJGRlZSa1JNUlU1Q1VWVk5OMWRWUmtSbFJVbHpWVlZHUWxWVGVFUlJWVVpFVEVaa1FsRldZM05STUVaQ1VYbDRTRkZWUmtoTVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWTmVGRnBlRXBSVlVaS1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SV3hDVVZWcmMxRXdSa0pSZVhoSVVWVkdTRXhGVGtKUlZVMXpVVEJHUWxGNmRGSlJWVTR3VVdsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUlNVVlZPU1V4RmJFSlJWV3R6VVRCR1FsRjVlRkJSVlVaUVRFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SVTVDVVZWTk4xTlZSa1JpYTBselVUQkdRbEY2ZEVwUlZVNUZURVZzUWxGVmF6ZFZWVVpFVTBONFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmJFSlJWV3R6VWxWR1FsSlRlRTVSVlVaT1RFVk9RbEZWVFhOUk1FWkNVWHAwU2xGVlRqWlJhWGhFVVZWR1JFOHdiRUpSTURoelZsVkdRbFpVZEZKUlZVNXhVV2w0VGxGVlJrNU1SVGxDVVZVNGMxSXdSa0paZVhoR1VWVkdSa3hGVGtKUlZVMDNWVlZHUkU5VlNYTlVWVVpDVkZONFdsRlZSbHBNUldSQ1VWZEZjMUpWUmtKU1UzaEVVVlZHUkU4eFJrSlJNbmhFVEVWc1FsRlZhM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFRd1JrSlVlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVaUlZVWkdURVZPUWxGVlRYTlNWVVpDVWxONFJsRlZSa1pQTVd4Q1VYcE9RMHhGYkVKUlZXdHpVVEJHUWxGNWVFUlJWVVpFVEVaT1FsRldUWE5STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFVd1JrSlZlWGhFVVZWR1JFOHlaRU5SVlVaR1RFVTVRbEZWT0hOUk1FWkNVWGw0U2xGVlJrcE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGVGtKUlZVMDNZVlZLUWxFeU5VVk1SV3hDVVZWcmMxRXdSa0pSZVhoRVVWVkdSRXhHVGtKUlZrMXpVVEJHUWxGNWVGSlJWVVpTVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSRkZWUmtSUE1tUkRVVlZHUmt4Rk9VSlJWVGh6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SVTVDVVZWTk4wOHlaRU5SVlU0eVVrTjRXbEZWUmxwTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZUa0pSVlUxelVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFVsRlZUWFpSYVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRGSlJWVTVKVEVWc1FsRlZhM05YVlVaQ1YxTjRSRkZWUmtSTVJURkNVVlV3YzFJd1JrSlNlWGhFVVZWR1JFeEZWa0pSVlZVM1YxVkdSRTVWU1hOVFZVWkNVMU40UkZGVlJrUk1SVGxDVVZVNGMxRXdSa0pSZVhjd1VXdEdRazVGU1hOU01FWkNVbmw0V2xGVlJscE1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRYVlVaRVkydFZjMVF3UmtKVWVuUlVVVlZPVVU4eFJrSlJNRkZ6VTFWR1FsTlRlRVJSVlVaRVRFVXhRbEZWTUhOUk1FWkNVWGw0VUZGVlJsQk1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk9NRkZwZUVSUlZVWkVUekJzUWxFd09ITlVNRVpDVkhsNFJGRlZSa1JNUldSQ1VWWmpOMVZWUmtSTlZVbHpVMVZHUWxOVGVFUlJWVVpFVEVWa1FsRlZZM05STUVaQ1VYbDRWRkZWUmxSTVJXUkNVVlZqYzFJd1JrSlNlWGhFVVZWR1JFOHdiRUpSZWtaRFRFVk9RbEZWVFRkUk1FWkVVa1IwUWxGV1JrVk1SVEZDVVZVd2MxVXdSa0pWZW5SS1VWVk9hMHhHYkVKUldFWkRURVV4UWxGWFRYTlNWVVpDVm5sNFNsRlZSbTVSYW5SU1VWVkdObEY1ZUZoUlZVWk9URVZrUWxGVk5ITlVWVVpDVkZONFJGRlZSbEpQTVVaQ1VWWmpjMVV3UmtKVFUzaElVVlZHUzB4RmJFSlJWV3R6VVRCR1FsZFVkRXBSVlZVMVVrTjRSRkZWUmtSUE1HeENVVEJSYzFRd1JrSlVlblJTVVZWT1QweEZiRUpSVld0elUxVkdRbE5UZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFZGRlZSbFJNUld4Q1VWVnJjMVJWUmtKVVZIUmFVVlZHUmt4Rk9VSlJWVGh6VlRCR1FsVjVlRVJSVlVaRVR6RkdRbEV6UWtWTVJUbENVVlU0TjFkVlJrUlVhWGhPVVZWR1RreEZWa0pSVlZWelUxVkdRbE5UZUVSUlZVWkVURVV4UWxGVk1EZFhWVVpFWW10SmMxUXdSa0pVZVhoR1VWVkdSa3hGYkVKUlZXdHpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5VTUVaQ1ZIcDBXbEZWVFhoUmFYaFdVVlZHVmt4RlZrSlJWVlZ6VTFWR1FsTlRlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0VEZGVlJreFBNVTVDVVhwT1EweEZUa0pSVlVVM1UxVkdSRkpwZUVSUlZVWkVUekJPUWxFd1VUZFJWVVpFVWtONFNsRlZSbFpNUmtaQ1VWWkZjMUV3Um5SUmJYQkRUekJHUW1KclNrVk1SbVJDVVZaVmMxVlZSa0pWVkhSS1VWVk9jVkZwZUZSUlZVWnVVV2w0VEZGVlJreE1SVTVDVVZWTmMxRXdSa0pWZW5SU1VWVk5OVkZwZUU1UlZVWk9URVZrUWxGVlkzTlNNRVpDVW5sNFNsRlZSa3BNUlU1Q1VWVk5jMU13UmtKVGVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVR6RkdRbEY2UmtOTVJXeENVVlZyYzFNd1JrSlRlWGhFVVZWR1JFeEZaRUpSVldOelVUQkdRbEY2ZEZwUlZVWkdURVU1UWxGVk9ITlZNRVpDVlhsNFJGRlZSa1JQTVVaQ1VUSndSRXhGT1VKUlZUaHpVMVZHUWxOVGVFcFJWVVpLVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOTjFOVlJrUmtSVWx6VVRCR1FsRjZkRXBSVlhCc1RFZE9RbEZWYzNOVlZVWktZMFZKYzFFd1JrSlJWSFJLVVZWT1JVeEdUa0pSVjJSRFRFVmtRbEZWWTNOUk1FWkNVWGw0UkZGVlJuUlJhblJTVVZWT01GRjVlRXBSVlVaS1RFVk9RbEZWVFhOUk1FWkNVWHAwV2xGVlJrWk1SVGxDVVZVNGMxSlZSa0pTVTNoRVVWVkdSRTh4UmtKUk1uaERURVU1UWxGVk9ITlJNRVpDVVhsNFJGRlZSa1JNUm1SQ1VWWmpjMUpWUmtKU1UzaEVVVlZHUkU4d2JFSlJNMmhEVEVWT1FsRlZUVGRUVlVaSldsTjRXbEZWUmtoTVJURkNVako0UTB4RlRrSlJWVVUzVTFWR1JGSkRlRlJSVlVadVVXbDRURkZWUmt4UE1VWkNVVE5DUTB4Rk9VSlJWVGh6VlZWR1FsVlRlRVJSVlVaRVRFVnNRbEZWYTNOVFZVWkNVMU40UmxGVlJrWk1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk5NMUZwZUVSUlZVWkVUekJzUWxKdFZYTlpNRVpDVTNsNFVsRlZWbmRSYVhoRVVWVkdRazh3YkVKUk1GRnpWVEJHUWxvd1NYTlZWVVpDVlZONFJGRlZSa1JNUld4Q1VWWlZOMVZWUmtSaVJVMXpWREJHUWxSNWVFcFJWVVpLVEVWc1FsRlZhM05STUVaQ1VYbDRWbEZWUmxaTVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEVwUlZVNTFVWGw0UkZGVlJrUlBNR3hDVW0xVmMyRlZTa0pSVmtWelZqQkdSbVJyU1hOUk1FWkNVVlIwU2xGVlRrVk1SazVDVVZka1EweEdWa0pSVmxWelVUQkdRbEY1ZUVwUlZVWldUekZHUWxFelFrUk1SVGxDVVZVNGMxTlZSa0pUVTNoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFcFJWVVpLVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSbEZWUmtaTVJXUkNVVlZqYzFKVlJrSlNVM2hJVVZWR1NFeEZWa0pSVlZWelVqQkdRbEo1ZUVaUlZVWkdURVZrUWxGVlkzTlRWVVpDVTFONFJGRlZSa1JNUldSQ1VWVmpjMUpWUmtKU1UzaElVVlZHU0V4RlZrSlJWVlZ6VWpCR1FsSjVlRVpSVlVaR1RFVmtRbEZWWTNOVFZVWkNVMU40UkZGVlJrUlBNR3hDVVhrNVJreEZUa0pSVlUwM1UxVkdSMXBUZUhSUmEwWkNWbE40YUZGVlZqWlJhWGhFVVZWR1FrOHdSa0pSTUZselVUQkdRbEY1ZUVaUlZ6VkRWWGw0VWxGVlJsSk1SWFJDVVZaSmMxVlZSa0pWVTNoU1VWY3hRMkZyU1RkUlZVWkdVa040VkZGVlJsUk1SbVJDVVZaamMxRXdSa0pSZVhoTVVWVkdXa3hGVmtKUlZWVnpVakJHUWxaNWVFWlJWVVpHVEVWMFFsRlhWWE5TVlVaQ1VsTjRTbEZWUmpWUmFuUktVVlZPTmxKcGVFcFJWVVpLVEVWT1FsRlZUWE5TTUVaQ1VubDRURkZWUmt4TVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZWa0pSVlZWelVUQkdRbEY1ZUVoUlZVWklURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUpWUmtKU1UzaElVVlZHU0V4RlpFSlJWV056VXpCR1FsTjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNR3hDVVhrNVJFeEZiRUpSVld0elV6QkdRbE41ZUVoUlZVWklURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVuUktVVlZPZVZGcGVFcFJWVVpLVEVaR1FsRldSWE5TTUVaQ1VubDRVbEZWUmxKTVJVNUNVVlZOYzFNd1JrSlRlWGhFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTUd4Q1VUTm9SRXhGYkVKUlZXdHpWVlZHUWxWVGVFaFJWVVl4VVdsNFVsRlZSbEpNUlU1Q1VWVk5jMU13UmtKVGVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkVFZVWkVaRVZSYzFOVlJrSlRVM2hTVVZWR1VreEZaRUpSVldOelZWVkdRbFZUZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkRXBSVlU0MFVYbDRTbEZWUmtwTVJrNUNVVlpOYzFJd1JrSlNlWGhTVVZWR1VreEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMU5WUmtSaWEwMXpWRlZHUWxSVGVGUlJWVVpVVEVWa1FsRlZZM05UVlVaQ1UxTjRSRkZWUmtSTVJURkNVVlV3YzFKVlJrSlNVM2hFVVZWR1JFOHdiRUpSTW1oRVRFVnNRbEZWYTNOVE1FWkNVM2w0U2xGVlJrcE1SVlpDVVZWVk4xVlZSa0pTVTNoTVVWVkdURXhGWkVKUlZXTnpWVlZHUWxWVGVFUlJWVVpFVHpCc1FsRXllRVJNUld4Q1VWVnJjMU13UmtKVGVYaEtVVlZHU2t4R1JrSlJWa1Z6VTFWR1FsTlRlRXhSVlVaTVRFVnNRbEZWYTNOVU1FWkNWSGw0U2xGVlJrcE1SWFJDVVZWemMxTlZSa0pUVTNoVVVWVkdWRXhGVmtKUlZWVTNWVlZHUkdGRlZYTlRWVVpDVTFONFJGRlZSa1JNU0d4RlVWVkdOVkpEZUVSUlZVWkVURVZPUWxGVlRUZFZWVVpFWVVWVmMxTXdSa0pUZVhoSVVWVkdTRXhHUmtKUlZrVnpVVEJHUWxGNmRFeFJWVTV4VVdwMFNsRlZUa1ZNUld4Q1VWVnJjMU13UmtKVGVYaEtVVlZHU2t4Rk9VSlJWVGh6VTFWR1FsTlRlRXhSVlVaTVRFVnNRbEZWYTNOVk1FWkNWWGw0UmxGVlJrWlBNVVpDVVhwT1JFeEZiRUpSVldzM1YxVkdSRk5EZUVwUlZVWktURVZPUWxGVlRYTlZWVVpDVlZONFNsRlZSa3BNUlU1Q1VWVk5jMVZWUmtKVlUzaEtVVlZHU2t4RmRFSlJWWE56VVRCR1FsRjVlRkpSVlVaU1RFVk9RbEZWVFhOVFZVWkNVMU40VEZGVlJreE1SVTVDVVZWTmMxVXdSa0pWZVhoRVVWVkdSRXhGVmtKUlZWVTNXakJLUWxFeWVFWk1SVEZDVVZVd2MxSlZSa0pTVTNoRVVWVkdSRTh5UmtKUk1WRTNWMVZHUkZKRGVFNVJWVVpPVEVWc1FsRlZhM05TTUVaQ1ZsTjRSbEZWUmtaTVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFeEZWa0pSVlZWelVqQkdRbEo1ZUVaUlZVWkdURVYwUWxGVmMzTlNWVVpDVWxONFVsRlZSbEpNUlZaQ1VWVlZjMVZWUmtKVlUzaEdVVlZHUmt4R1JrSlJWa1Z6VWxWR1FsSlRlRlJSVlVaVVRFVldRbEZWVlhOVE1FWkNVM2w0UmxGVlJrWk1SV1JDVVZWamMxSlZSa0pTVTNoVVVWVkdWRXhGVmtKUlZWVnpVVEJHUWxGNmRGcFJWVTQyVW5sNFVGRlZSbEJNUld4Q1VWVnJjMUV3UmtKUmVuUlVVVlZPWVU4eFJrSlJWVTF6VmpCR1FsTjZkRnBSVlU1UFRFVnNRbEZWYTNOUk1FWkNVWGw0ZGxKVlJrSmlNRlZ6VVRCR1FsRjVlRVJSVlVaRVR6RnNRbEY2VGtaTVJYUkNVVlZ6YzFJd1JrSlNlWGhTVVZWR1VreEZUa0pSVlUwM1YxVkdSR0ZyU1hOVk1FWkNWWGw0U0ZGVlJraE1SVTVDVVZWTmMxRXdSa0pSZW5SYVVWVk9hMHhHUmtKUlZrVnpVakJHUWxKNWVGUlJWVVpVVEVWT1FsRlZUVGRYVlVaRVkydEpjMVZWUmtKVlUzaElVVlZHU0V4RlpFSlJWV056VVRCR1FsRjZkRnBSVlU1dFRFWkdRbEZXUlhOU01FWkNVbmw0VkZGVlJsUk1SVTVDVVZWTk4xVXdSa1JqYTBrM1V6QkdSRkpFZEVwUlZVNUZURVZzUWxGVmEzTlZNRVpDVlhsNFNsRlZSa3BNUlU1Q1VWVk5jMU5WUmtKVFUzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRlJSVlVaVVRFVk9RbEZWVFRkVlZVWkVaRVZOYzFOVlJrSlRVM2hFVVZWR1JFeElaRVZSVlVZelVrTjRSRkZWUmtSTVJVNUNVVlZOTjFOVlJrUmhSVlZ6VTFWR1FsTlRlRkpSVlVaU1RFVnNRbEZWYTNOVk1FWkNWWHAwVWxGVlRqUlJhWGhLVVZWR1NreEZUa0pSVlUxelpGVlNRbEZZVmtWTVJVNUNVVlZOYzFFd1JrSlJlblJLVVZWTmRsSkRlRXBSVlVaS1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1Sa1pDVVZaRmMxRXdSa0pSZW5SU1VWVk9kVkZwZUVwUlZVWktURVZPUWxGVlRYTmpNRkpDVVZoT1JVeEZUa0pSVlUxelVUQkdRbEY2ZEVwUlZVMDFVa040U2xGVlJrcE1Sa1pDVVZaRmMxTlZSa0pUVTNoVVVWVkdWRTh4UmtKUk0yaERURVZzUWxGVmEzTlJNRVpDVVhsNE1WSkZSa0prVlZGelVUQkdRbEY1ZUVSUlZVWkVUekJzUWxGNU9VVk1SazVDVVZaTmMxSXdSa0pTZVhoRVVWVkdSRXhGVGtKUlZVMDNVMVZHUkZwRGVGSlJWVVpTVEVWa1FsRlZZM05WTUVaQ1ZYbDRSRkZWUmtSUE1HeENVVE5LUTB4R1JrSlJWa1Z6VWpCR1FsSjVlRlJSVlVaVVRFVk9RbEZWVFRkVFZVWkVZMnRKYzFWVlJrSlZVM2hJVVZWR1NFeEdUa0pSVmsxelVUQkdRbEY2ZEVwUlZVNTVVV2w0VGxGVlJrNU1SV3hDVVZWcmMxSXdSa0pXVTNoR1VWVkdSa3hGVGtKUlZVMXpVbFZHUWxKVGVFUlJWVVpFVEVWV1FsRlZWWE5TTUVaQ1VubDRSbEZWUmtaTVJYUkNVVlZ6YzFKVlJrSlNVM2hTVVZWR1VreEZWa0pSVlZWelZWVkdRbFZUZUVaUlZVWkdURVpHUWxGV1JYTlNWVVpDVWxONFVsRlZSbEpNUlZaQ1VWVlZjMVV3UmtKVmVYaEdVVlZHUmt4RmRFSlJWWE56VWxWR1FsSlRlRWhSVlVaSVRFVldRbEZWVlhOVk1FWkNWWGw0UmxGVlJrWk1SVTVDVVZWTk4xTlZSa1JpYTJkelZEQkdRbFI1ZUVwUlZVWktURVZPUWxGVlRUZFJWVVpFV1dsNFJGRlZSa1JQTUVaQ1VUQlJjMVV3UmtKVmVYaHNVVlZHYkV4RlRrSlJWVTF6VXpCR1FsZFVkRXBSVlU1M1VYbDRUbEZWUms1TVJVNUNVVlZOYzFJd1JrSlNlWGhNVVZWR1RFeEZUa0pSVlUwM1UxVkdSR0ZGU1hOVVZVWkNWRk40U0ZGVlJraE1SV1JDVVZWamMxRXdSa0pSZVhoRVVWVkdSRXhGWkVKUlZXTnpVbFZHUWxKVGVFeFJWVVpNVEVWa1FsRlZZM05STUVaQ1VYbDRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhXVVZWR1ZreEZUa0pSVlUwM1UxVkdSRTlWVFhOVVZVWkNWRk40V2xGVlJscE1SV1JDVVZWamMxRXdSa0pSZVhoRVVWVkdSRXhHUmtKUlZrVnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJrWkNVVlpGYzFFd1JrSlJlWGhTVVZWR1VreEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JQTUd4Q1VucHNSVXhGTVVKUlZUQnpVekJHUWxONWVFaFJWVVpJVEVWMFFsRlZjM05TTUVaQ1VubDRTbEZWUmtwTVJXUkNVVlZqYzFJd1JrSlNlWGhJVVZWR1NFeEZiRUpSVld0elVqQkdRbEo1ZUVoUlZVWklURVZPUWxGVlRUZFRWVVpFVDFWTmMxUlZSa0pVVTNoT1VWVkdUa3hGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRTRkZWUmtoTVJWWkNVVlZWYzFFd1JrSlJlWGhFVVZWR1JFeEZkRUpSVlhOelVsVkdRbEpUZUZKUlZVWlNURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaFNVVlZHVWt4RlRrSlJWVTF6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFhOVlZVWkNWVk40U2xGVlJrcE1SVTVDVVZWTmMxSlZSa0pTVTNoU1VWVkdVa3hGVGtKUlZVMXpVakJHUWxKNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUxelZUQkdRbFY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZWbmRUUTNoUVVWVkdVRXhGVmtKUlZWVnpVekJHUWxONWVFWlJWVVpHVEVVeFFsRlZNSE5TVlVaQ1VsTjRSRkZWUmtSUE1FWkNVWHBHUTB4RlRrSlJWVTAzVVZWR1JGSkRlRXBSVlVaV1RFVXhRbEZWTUhOUk1FWXpVakpaTjFGVlJqUlNNRkZ6VmpCR1FsWlRlRTVSVlVaT1R6QnNRbEV5V1hOVFZVWkNVMU40VWxGVlJsSk1SV1JDVVZWamMxTXdSa0pUZVhoRVVWVkdRazh3YkVKUk0wSkRURVpPUWxGWFpFTk1SV3hDVVZWck4xVlZSa1JpYTBselUxVkdRbE5UZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNGFsRlZSbXBNUlZaQ1VWVlZjMUl3UmtKU2VYaEdVVlZHUms4eGJFSlJlbXhEVEVaR1FsRldSWE5TTUVaQ1VubDRTbEZWUmtwTVJVNUNVVlZOTjFWVlJrUmhhMGx6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkVFZVWkVVMmw0UkZGVlJrUlBNR3hDVTIxVmMxWXdSa0pUVTNoUVVWVnNkVkZwZUVSUlZVWkNUekJzUWxFd1VYTlZNRVpDV2pCSmMxTlZSa0pUVTNoRVVWVkdSRXhHUmtKUlYyUkRURVZXUWxGVlZYTlVWVVpDVkZONFNGRlZSa2hNUldSQ1VWVmpjMUpWUmtKU1UzaElVVlZHU0V4RlRrSlJWVTF6VWxWR1FsSlRlRXhSVlVaTVRFVmtRbEZWWTNOUk1FWkNVWGw0UkZGVlJrNU1SVlpDVVZWVmMxSlZSa0pTVTNoSVVWVkdTRXhGVGtKUlZVMDNWVlZHUkdGcldYTlRWVVpDVTFONFJGRlZSa1JNUmtaQ1VWWkZOMWRWUmtKU1UzaFFVVlZHVUV4RmRFSlJWWE56VVRCR1FsRjZkRkpSVlUweFVXbDRTbEZWUmtwTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY2ZEZwUlZVNXZVV2w0VWxGVlJsSk1SVlpDVVZWVmMxVlZSa0pWVkhSYVVWVk9jMUZwZUV4UlZVWk1URVZXUWxGVlZYTlBSVTVDVVZSb1JFOHhiRUpSTTBwRlRFZEdRbEZYUlhOU1ZVWkNVbE40UkZGVlJrUk1SRUpGVVZWRmQxSkRlRVJSVlVaRVR6Rk9RbEY2VGtaTVJVNUNVVlZOYzFFd1JrSlJlWGhLVVZWR1NreEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZXUWxGVlZUZFhWVVpFVjBONFRsRlZSazVNUlZaQ1VWVlZjMUV3UmtKUmVuUmFVVlZPVlV4RmJFSlJWV3R6VTFWR1FsTlRlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWGw0YkZGVlJteE1SVlpDVVZWVmMxRXdSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMXpVakJHUWxKNWVFWlJWVVpHVHpKa1ExRlZUbTlTUTNoUVVWVkdRa3hHUmtKUlZrVnpVbFZHUWxKVGVFUlJWVVpFVHpGc1FsRXhiM05UVlVaQ1UxTjRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhzVVZWR2JFeEZWa0pSVlZWelVUQkdRbEY1ZUZaUlZVWldURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlU1Q1VWVk5jMVpWUmtKV1UzaEdVVlZHUmt4RlZrSlJWVlUzV2pCS1FsRjZaRVZNUld4Q1VWVnJjMVpWUmtKV1ZIUjJVV3RHUWxKVGVGQlJWVVpDVEVaR1FsRldSWE5TVlVaQ1VsTjRSRkZWUmtSUGVuUjJVV3RHUkdSRlNYTlVNRVpDVVZONFZGRlZSbFJNUlZaQ1VWVlZjMUV3UmtKUmVuUmFVVlZPYzFGcGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBVbEZWVGt0TVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZkRUpSVlhOelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlNWVVpDVWxSMFdsRlZUbUZNUlhSQ1VWVnpjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjZkRkpSVlU1WFRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNVVpDVVRCbmMxUXdSa0pVZVhoS1VWVkdTa3hGVGtKUlZVMDNVMVZHUkZscGVFUlJWVVpFVHpCc1FtSkZTbXhNUm1SQ1VWVnJjMVF3Um5KUmJUVkRURVZPUWxGVlJUZFRWVVpFVWtONFZGRlZSbTVSYVhoYVVWVkdXazh4UmtKUmVrNURURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMXBWUmtKYVUzaEdVVlZHUmt4RlRrSlJWVTF6VkZWR1FsUlRlRVpSVlVaR1RFVk9RbEZWVFRkVFZVWkVaR3ROYzFFd1JrSlJlblJLVVZWYWJFeEhNVU5SVlVaYVRFZFdRbEpVVGtOTVJVNUNVVlZGTjFOVlJrUldVM2hzVVZWR1VreEZaRUpSVldOelVqQkdRbEo1ZUVaUlZVWkdURVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSa0pQTUd4Q1VUTkNRMHhIWkVOUlZVWlVURVZrUWxGVlkzTlNNRVpDVW5sNFJsRlZSa1pNUldSQ1VWVmpjMUV3UmtKUmVYaEVVVlZHUWs4d2JFSlJNbWhFVEVaT1FsRlhaRU5NUmtaQ1VWWkZjMUV3UmtKUmVYaE9VVlZHYWt4RlZrSlJWVlZ6VlRCR1FsVjVlRWhSVlVaSVRFVk9RbEZWVFhOVE1FWkNXWGw0UmxGVlJrWk1SVlpDVVZWVmMxSXdSa0pTZVhoRVVWVkdSRXhGVmtKUlZWVnpVekJHUWxONWVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1ZGTjRSbEZWUmtaTVJWWkNVVlZWYzFJd1JrSlNlWGhFVVZWR1JFOHhSa0pSTTBKSVRFVnNRbEZWYTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxUlZSa0pVVTNoRVVWVkdSRXhHYkVKUlZtdHpVVEJHUWxGNWVFaFJWVVpJVEVWT1FsRlZUVGRYVlVaRVltdE5jMWxWUmtKWlUzaEdVVlZHUmt4Rk1VSlJWVEEzVlRCR1JHTnJTWE5STUVaQ1VYbDRSRkZWUmtSTVJXeENVVlZyYzFFd1JrUlVhWGhJVVZWR1NFeEZUa0pSVlUxelVsVkdRbEpUZUVSUlZVWkVURVpPUWxGV1RYTlJNRVpDVVhsNFNGRlZSa2hNUlU1Q1VWVk5jMVJWUmtKVVUzaEVVVlZHUkV4Rk1VSlJWVEJ6VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEV6U2tSTVJVNUNVVlZOYzFFd1JrSlJlWGhHVVZWR1JreEZUa0pSVlUxelUxVkdRbE5UZUZSUlZVWlVURVZPUWxGVlRYTlVWVVpDVkZONFJsRlZSa1pNUlU1Q1VWVk5jMUV3UmtKUmVYaFdVVlZHVmt4RlRrSlJWVTF6VVRCR1FsRjVlRkJSVlVaUVRFVldRbEZWVlhOUk1FWkVZa1ZSYzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZXUWxGVlZYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5jMUV3UmtKUmVYaEdVVlZPY1ZGcGVFaFJWVVpJVEVWT1FsRlZUWE5TVlVaQ1VsTjRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhJVVZWR1NFeEZUa0pSVlUxelZGVkdRbFJUZUVSUlZVWkVURVYwUWxGVmMzTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMU5WUmtSaVJVMXpVVEJHUWxGNmRFcFJWa3BzVEVkV1FsRldSWE5XTUVaU1pHdEpjMUV3UmtKUlZIUktVVlZPUlV4R1RrSlJWazF6VmpCR1FsWjVlRVJSVlVaRVRFVXhRbEZYVFhOU1ZVWkNVbE40VEZGVlJtaE1SVlpDVVZWVmMxVXdSa0pWZVhoSVVWVkdTRXhGVGtKUlZVMXpWRlZHUW1Fd1NYTlNWVVpDVWxONFJsRlZSa1pNUldSQ1VWVmpjMUV3UmtKUmVYaEdVVlZHUmt4RmRFSlJWWE56VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWTUhOU1ZVWkNVbE40UmxGVlJrWk1SV1JDVVZWamMxRXdSa0pSZW5SU1VWVk9kVk5EZUVwUlZVWktURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaGFVVlZHV2t4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWHAwV2xGVlRYaFJlWGhvVVZWR2FFeEZWa0pSVlZWelZGVkdRbFJVZEZwUlZVNTVVV2w0VEZGVlJreE1SVlpDVVZWVmMxTXdSa0pUZW5SYVVWVk9ZVXhIYkVOUlZVWndVV2w0UmxGVlJrWk1SazVDVVZaTk4xVXdSa1JPVlVselVUQkdRbEY1ZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpFVkdsNFNGRlZSa2hNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4R1RrSlJWazF6VVRCR1FsRjVlRWhSVlVaSVRFVk9RbEZWVFhOVVZVWkNWRk40UkZGVlJrUk1SVEZDVVZVd2MxRXdSa0pSZVhoR1VWVk9kVkY1ZUVoUlZVWklURVZPUWxGVlRYTlNWVVpDVWxONFJGRlZSa1JNUlhSQ1VWVnpjMUV3UmtKUmVYaElVVlZHU0V4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xTlZSa1JpUlUxelVUQkdRbEY2ZEVwUlZVNUZURVpPUWxGV1RYTlZWVVpDVlZONFJGRlZSa1JNUlRGQ1VWZE5jMUpWUmtKU1UzaE1VVlZHYUV4RlZrSlJWVlZ6VlRCR1FsVjVlRWhSVlVaSVRFVk9RbEZWVFhOVVZVWkNZVEJKYzFKVlJrSlNVM2hHVVZWR1JreEZaRUpSVldOelVUQkdRbEY1ZUVaUlZVWkdURVYwUWxGVmMzTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVXdjMUpWUmtKU1UzaEdVVlZHUmt4RlpFSlJWV056VVRCR1FsRjZkRkpSVlU1dlUwTjRTbEZWUmtwTVJVNUNVVlZOYzFSVlJrSlVVM2hFVVZWR1JFeEZNVUpSVlRCelVUQkdRbEY1ZUZwUlZVWmFURVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUldSQ1VWVmpjMUV3UmtKUmVuUmFVVlZOZUZGNWVHaFJWVVpvVEVWV1FsRlZWWE5VVlVaQ1ZGUjBXbEZWVG5sUmFYaE1VVlZHVEV4RlZrSlJWVlZ6VXpCR1FsTjZkRnBSVlU1aFRFZHNRMUZWUm5CUmFYaEdVVlZHUmt4SE1VTlJWVVowVVdwMFZGRlZUakJSZVhoRVVWVkdSRXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVTVQVEVWa1FsRlZZM05STUVaQ1VYbDRSbEZWUmtaTVJVNUNVVlZOYzFVd1JrSlZlWGhFVVZWR1JFeEZaRUpSVldOelVUQkdRbEY1ZUU1UlZVWk9URVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JNUlZaQ1VUSTFSRXhGWkVKUlZXTnpVVEJHUWxGNWVFWlJWVVpHVEVWT1FsRlZUWE5UTUVaQ1UzbDRSRkZWUmtSTVJXUkNVVlZqYzFFd1JrSlJlWGhPVVZWR1RreEZUa0pSVlUxelV6QkdRbE41ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUbk5SZVhoRVVWVkdSRTh3YkVKUk1GRnpWVEJHUWxvd1NYTlpWVVpDV1ZONFJGRlZSa1JNUlhSQ1VWWnJjMUpWUmtKU1UzaFVVVlZHVkV4RlpFSlJWV056VVRCR1FsRjVlRXhSVlVacVRFVldRbEZWVlhOU1ZVWkNVbE40U0ZGVlJraE1SVTVDVVZWTmMxSlZSa0pTVTNoTVVWVkdURXhGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpPVEVWV1FsRlZWWE5TVlVaQ1VsTjRTRkZWUmtoTVJVNUNVVlZOTjFWVlJrUmthMk56VkZWR1FsUlRlRTVSVlVaT1RFVmtRbEZWWTNOVE1FWkNVM2w0UkZGVlJrUk1SVEZDVVZVd2MxRXdSa0pSZW5SU1VWVk5NVkZwZUU1UlZVWk9URVpPUWxGV1RYTlNNRVpDVW5sNFNGRlZSa2hNUldSQ1VWVmpjMU13UmtKVGVYaEVVVlZHUkV4R1ZrSlJWbFZ6VWpCR1FsSjVlRWhSVlVaSVRFVk9RbEZWVFRkVlZVWkVUREJOYzFSVlJrSlVVM2hZVVZWR1dFeEZaRUpSVldOelZUQkdRbFY1ZUVoUlZVWklURVYwUWxGVmMzTlJNRVpDVVhwMFVsRlZUakJSZVhoU1VWVkdVa3hGVGtKUlZVMXpWRlZHUWxSVGVFWlJWVVpHVEVaa1FsRldZM05TVlVaQ1VsTjRURkZWUmt4TVJVNUNVVlZOYzFKVlJrSlNWSFJhVVZWT2VWRjVlRTVSVlVaT1RFVXhRbEZWTUhOU01FWkNVbmw0VWxGVlJsSk1SVTVDVVZWTmMxTXdSa0pUZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrUmphMDF6VTFWR1FsTlRlRXhSVlVaTVRFVk9RbEZWVFhOVVZVWkNWRk40UkZGVlJrUk1SVlpDVVZWVk4xb3dTa0pSTW5oRFRFVjBRbEZWYzNOUk1FWkNVWGw0ZWxKclJrSmpNRmx6VVRCR1FsRjVlRVJSVlVaRVR6SmtRMUZWVFRWU2FYaFFVVlZHVUU4eVJrSlJNVUUzVjFWR1JGSkRlRTVSVlVaT1RFWldRbEZXVlhOU01FWkNVbmw0VkZGVlJsUk1SV1JDVVZWamMxUXdSa0pVZVhoSVVWVkdTRXhGVGtKUlZVMXpWRlZHUWxSVGVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1XeENVVE5TUlV4R1pFSlJWbU56VVRCR1FsRjVlRTVSVlVaT1RFVldRbEZWVlhOV1ZVWkNWbE40UmxGVlJrWk1SWFJDVVZWemMxRXdSa0pSZVhoR1VWVkdSazh5WkVOUlZVNHlVWGw0U2xGVlJrcE1Sa1pDVVZaRmMxSXdSa0paVTNoR1VWVkdSa3hGVGtKUlZVMDNXakJLUWxGNlZrTk1SVEZDVVZVd2MxTXdSa0pUZVhoSVVWVkdXa3hGZEVKUlZYTnpVVEJHUWxGNWVFaFJWVVpJVEVWT1FsRlZUWE5STUVaQ1VYbDRURkZWUmt4TVJWWkNVVlZWYzFFd1JrSlJlWGhHVVZWR1JreEZWa0pSVlZVM1lqQktRbEY2WkVSTVJYUkNVVlZ6YzFOVlJrSlRVM2hFVVZWR1JFeEZaRUpSVldOelV6QkdRbE41ZUVSUlZVWkVURVV4UWxGVk1ITlNWVVpDVWxONFJGRlZSa1JNUldSQ1VWVmpjMUV3UmtKUmVYaEdVVlZHUmt4RlRrSlJWVTF6VWxWR1FsSlVkRE5SYTBaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZWa0pSVlZWelVUQkdRbEY1ZUVSUlZVWkVUekk1UTFGVlRubFNRM2hLVVZWR1NreEZiRUpSVld0elVqQkdRbEo1ZUVSUlZVWkVURVZPUWxGV1RYTlNWVVpDVWxONFJsRlZSa1pNUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRkJSVlVaUVRFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoR1VWVkdSa3hGVGtKUlZVMXpVVEJHUWxGNmRIWlJhMFpFVDFWUmMxUXdSa0pVZVhoWVVWVkdXRXhGVGtKUlZVMXpVekJHUWxONWVFWlJWVVpHVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVJWWkNVVlZWYzFNd1JrSlRlWGhHVVZWR1JreEZiRUpSVld0elVUQkdRbEY1ZUVSUlZVWkVUekprUTFGVlRYWlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY2ZEc1UmEwWkVVME40U2xGVlJrcE1Sa1pDVVZaRmMxRXdSa0pSZVhoT1VWVkdUa3hGWkVKUlZXTnpVVEJHUWxGNmRIWlJhMFpDVWxONFRGRlZSa3hNUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHUkV4RmJFSlJWV3R6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBlblIyVVd0R1JFd3dUWE5WTUVaQ1ZYbDRSRkZWUmtSTVJYUkNVVlZ6YzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSTTFwRFRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SVTVDVVZWTmMxSlZSa0pTVTNoRVVWVkdSRXhGZEVKUlZYTnpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1VWkNVVEkxUTB4RlRrSlJWVTF6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFhOU1ZVWkNVbE40UkZGVlJrUk1SWFJDVVZWemMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVHpCc1FsRXlOVU5NUlU1Q1VWVk5OMU5WUmpCUmJWVnpZakJLUWxGWFJYTmFNRXBDWXpCSk1WRnBlRVJSVlVaQ1R6QnNRbEV3VVhOVk1FWkNXakJKYzFaVlJrSldVM2hFVVZWR1JFeEZkRUpSVjAxelVsVkdRbEpUZUZSUlZVWlVURVZrUWxGVlkzTlNNRVpDVW5sNFJsRlZSa1pNUldSQ1VWVmpjMUV3UmtKUmVYaEdVVlZHUmt4RmRFSlJWWE56VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWTUhOU1ZVWkNVbE40UmxGVlJrWk1SV1JDVVZWamMxRXdSa0pSZW5SU1VWVk9ORkpwZUVwUlZVWktURVZrUWxGVlkzTlNNRVpDVW5sNFNsRlZSa3BNUldSQ1VWVmpjMUpWUmtKaVZVbHpVVEJHUWxGNmRGSlJWVTU1VVhsNFRGRlZSa3hNUlU1Q1VWVk5jMVF3UmtKVWVYaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVpSVlVaR1R6RnNRbEV5Y0VOTVJURkNVVlV3YzFSVlJrSlVVM2hJVVZWR1NFeEZUa0pSVlUxelVUQkdRbEY1ZUV4UlZVWk1URVZPUWxGVlRYTlVWVVpDVkZONFJGRlZSa1JQTVd4Q1VYcHNRMHhGYkVKUlZXdHpVakJHUWxKNWVFUlJWVVpFVEVWa1FsRlZZM05STUVaQ1VYbDRUbEZWUms1TVJVNUNVVlZOTjFvd1NrSlJWVlZ6VWpCR1FsSjVlRVJSVlVaRVRFVmtRbEZWWTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWVmMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUVGRQTW1SRFVWVk9ObEY1ZUVoUlZVWklURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlRGQ1VWVXdjMUpWUmtKU1UzaEVVVlZHUkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFRkVlZVWkVUVEJKYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUwM1ZWVkdSRk5EZUVoUlZVWklURVZPUWxGVlRYTlVNRVpDVkhsNFJGRlZSa1JNUlU1Q1VWVk5jMU13UmtKVGVYaEdVVlZHUmt4Rk1VSlJWVEJ6VWxWR1FsSlRlRVpSVlVaR1R6RnNRbEY2WkVOTVJ6RkRVVlZHZEZGcGVFUlJWVVpFVEVVeFFsRlZNSE5TVlVaQ1VsTjRURkZWUmt4TVJWWkNVVlZWYzFVd1JrSlZlWGhHVVZWR1JreEZkRUpSVlhOelVUQkdRbEY1ZUVSUlZVWkVUekZHUWxFelVrVk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh3YkVKUk1HOXpVVEJHUWxGNmRFcFJWbHBzVEVkc1ExRlZSbFpNUjBaQ1ZsaHdRMHhGVGtKUlZVVTNVMVZHUkZKRGVGUlJWVVpVVEVjeFExRlZSblJSYVhoRVVWVkdSRXhGTVVKUlYwMXpVbFZHUWxKVGVFeFJWVVpxVEVWV1FsRlZWWE5WTUVaQ1ZYbDRTRkZWUmtoTVJXUkNVVlZqYzFKVlJrSlNVM2hJVVZWR1NFeEZUa0pSVlUxelVsVkdRbEpUZUV4UlZVWk1URVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSazVNUlZaQ1VWVlZjMUpWUmtKU1UzaElVVlZHU0V4RlRrSlJWVTAzVlZWR1JFMVZZM05UVlVaQ1UxTjRURkZWUmt4TVJVNUNVVlZOYzFOVlJrSlRVM2hFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVaUlZVWkdURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JNUlhSQ1VWVnpjMUV3UmtKUmVYaE9VVlZHVGt4RmJFSlJWV3R6VkZWR1FsUlRlRVJSVlVaRVR6RnNRbEZWVlhOVVZVWkNWRk40VEZGVlJreE1SVTVDVVZWTk4xVlZSa1JOTUZGelUxVkdRbE5UZUU1UlZVWk9URVZrUWxGVlkzTlNWVVpDVWxONGFGRlZSbWhNUlZaQ1VWVlZjMVJWUmtKVVUzaEdVVlZHUmt4RlRrSlJWVTAzVlZWR1JHUnJUWE5UVlVaQ1UxTjRTbEZWUmtwTVJXUkNVVlZqTjFkVlJrUldhWGh1VVd0R1Fsb3dTWE5TVlVaQ1VsTjRURkZWUmt4UE1XeENVVE5hUTB4RmJFSlJWV3R6VWxWR1FsSlRlRXhSVlVaTVRFVk9RbEZWVFhOU01FWkNVbmw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoR1VWVkdSa3hGVGtKUlZVMXpXbFZHUWxwVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSUE1VNUNVVE5vUkV4RlRrSlJWVTAzVlZWR1JGSnBlRXBSVlVaS1RFVk9RbEZWVFhOVVZVWkNWRk40UkZGVlJrUk1SVEZDVVZVd2MxRXdSa0pSZVhoYVVWVkdXa3hGVGtKUlZVMXpWRlZHUWxSVGVFUlJWVVpFVEVaa1FsRldZM05STUVaQ1VYbDRUbEZWUms1TVJWWkNVVlZWYzFOVlJrSlRVM2hFVVZWR1JFOHlSa0pSZW14RlRFVnNRbEZWYTNOUk1FWkVVMmw0UkZGVlJrUk1SVTVDVVZWTmMxSlZSa0pTVTNoRVVWVkdSRXhHVGtKUlZrMXpVbFZHUWxKVGVFWlJWVTV2VVdsNFJGRlZSa1JNUlU1Q1VWVk5jMUpWUmtKU1UzaEVVVlZHUkV4RmRFSlJWWE56VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUlBNR3hDVVRKNFEweEZUa0pSVlUwM1VWVkdSRkpwZUVSUlZVWkVURVZXUW1WRlpGUk1SVEZDVVZVd2MxTXdSa0pVYVhoT1VWVkdUa3hHUmtKa01HUnRUekJHUWxFd1VYTlVWVVpDVkZONFZsRlZSbFpNUldSQ1VWVmpjMUpWUmtKU1UzaEVVVlZHUkU4d1JrSlJNMUpEVEVVeFFsRlZNSE5WVlVaQ1ZWUjBTbEZWWkdsTVJteENVVlpyYzFSVlJrSmFWSFJTVVZWU2RWRnBlR2hSVlVaU1RFVmtRbEZZWkVOTVJrNUNVVlpOYzFFd1JrSlJlblJTVVZWV2NWSkRlRXBSVlVaS1RFVk9RbEZWVFhOVVZVWkNWRk40U0ZGVlJraE1SVEZDVVZVd2MxRXdSa0pSZW5SU1VWVk9lVkZwZUVwUlZVWktURVZPUWxGVlRYTlRWVVpDVTFONFJsRlZSa1pNUlU1Q1VWVk5OMU5WUmtSWmFYaEVVVlZHUkU4d2JFSlJNRkZ6VTFWR1FsTlRlRVJSVlVaRVRFVTVRbEZYTVVOUE1VWkNVVE5hUTB4RmJFSlJWV3R6VkRCR1FsUjZkRnBSVlVaR1RFVnNRbEZWYTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxUXdSa0pVZVhoRVVWVkdSRXhGVGtKUlZVMDNWVlZHUkdKRlRYTlRWVVpDVTFONFJGRlZSa1JNUlRsQ1VWVTROMWRWUmtKU1UzaEtVVlZHU2t4RmJFSlJWV3R6VVRCR1FsRjVlRkpSVlVaU1R6SmtRMUZWUmtaTVJURkNVVlV3YzFNd1JrSlRlWGhFVVZWR1JFOHhSa0pSZW1SRVRFVnNRbEZWYTNOUk1FWkNVWGw0U2xGVlJrcE1SVlpDVVZWVmMxRXdSa0pSZW5SU1VWVk9ZVXhGYkVKUlZXdHpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRUbEZWUms1TVJXeENVVlZyYzFFd1JrSlJlblJhVVZWR1JreEZPVUpSVlRoelVsVkdRbEpUZUU1UlZVWk9URVZXUWxGVlZYTlNWVVpDVWxONFJsRlZSa1pNUlRsQ1VWVTRjMUpWUmtKU1UzaHVVV3RHUWxvd1NYTlNWVVpDVWxONFJGRlZSa1JQTVVaQ1VsUnNSa3hGYkVKUlZXdHpWREJHUWxSNWVFaFJWVVpJVEVWV1FsRlZWWE5STUVaQ1VYcDBVbEZWVG5GUmFYaE9VVlZHVGt4SFRrSlJWMDF6VWpCR1FsSjVlRVJSVlVaRVRFVnNRbEZXWTNOU1ZVWkNVbE40UmxGVlJrWk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGZEVKUlZYTnpVMVZHUWxOVGVGSlJWVVpTVHpGc1FsRjZaRVZNUmtaQ1VWWkZjMUV3UmtKUmVYaFdVVlZHVmt4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFWkdRbEZXUlhOUk1FWkNVWGw0U0ZGVlJraE1Sa1pDVVZaRmMxRXdSa0pSZVhoV1VWVkdWa3hGVGtKUlZVMXpVMVZHUWxOVGVFcFJWVVpLVEVWV1FsRlZWWE5STUVaQ1VYbDRSRkZWUmtSUE1VWkNVVE5TUmt4RmJFSlJWV3R6V1RCR1FsbDVlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0VGxGVlJrNU1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVbFZHUWxKVWRGcFJWVTUxVVhsNFRsRlZSazVNUlRGQ1VWVXdjMUl3UmtKU2VYaEtVVlZHU2t4RlRrSlJWVTF6VkZWR1FsUlRlRVJSVlVaRVRFVjBRbEZWYzNOUk1FWkNVWGw0UkZGVlJrUk1SVlpDVVZWVmMxWlZSa0pXVTNoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkdGRlVYTlVWVVpDVkZONFVGRlZSbEJNUldSQ1VWVmpjMkZWU2tKUlYyeERURVZPUWxGVlRUZFhWVVpFWWtWTmMxUlZSa0pVVTNoRVVWVkdSRXhGYkVKUlZXdHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5TVlVaQ1VsTjRSRkZWUmtSTVJWWkNVVlZWYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUZSUlZVWlVURVZrUWxGVlkzTlJNRVpDVVhsNFJGRlZSa1JNUms1Q1VWWk5jMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJNbkJGVEVWc1FsRlZhM05STUVaQ1VYbDRVbEZWUmxKTVJXUkNVVlZqYzFSVlJrSlVVM2hFVVZWR1JFOHhiRUpSTTFwRFRFVTVRbEZWT0hOU1ZVWkNVbE40VGxGVlJrNU1SVlpDVVZWVmMxUXdSa0pVZVhoR1VWVkdSa3hGVGtKUlZVMDNWVEJHUkUwd1NUZFpWVVpDVkZSMFdsRlZUazlNUlRGQ1VWVXdjMVJWUmtKVVUzaElVVlZHU0V4RmJFSlJWV3R6VVRCR1FsRjVlRTVSVlVaT1RFVk9RbEZWVFhOVE1FWkNVM2w0UkZGVlJrUk1SVTVDVVZWTmMxSlZSa0pTVTNoV1VWVkdWa3hGVGtKUlZVMXpVVEJHUWxGNWVFNVJWVVpPVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJWWkNVVlZWYzFFd1JrSlJlWGhFVVZWR1JFeEhUa0pSVjAxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JQTVd4Q1VUSm9SMHhGTVVKUlZUQnpWREJHUWxSNWVFaFJWVVpJVEVac1FsRldhM05STUVaQ1VYcDBXbEZWVFROUmFYaE9VVlZHVGt4RlRrSlJWVTF6VTFWR1FsTlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UmxGVlJrWk1SVTVDVVZWTmMxSlZSa0pTVTNoR1VWVkdSa3hGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVEVaT1FsRldUWE5TTUVaQ1VubDRSRkZWUmtSTVJVNUNVVlZOYzFVd1JrSlZlWGhFVVZWR1JFeEZUa0pSVlUwM1YxVkdSR0ZyVVhOVFZVWkNVMU40UkZGVlJrUk1Sa1pDVVZaRmMxSXdSa0pTZVhoT1VWVkdUa3hGVGtKUlZVMDNWMVZHUkdSclNYTlVNRVpDVkhsNFJsRlZSa1pNUlRGQ1VWVXdjMUpWUmtKU1UzaFFVVlZHVUV4RlZrSlJWVlZ6VVRCR1FsRjZkRlJSVlUxNlVXcDBTbEZWVGtkTVJVNUNVVlZOTjFOVlJrUlVlWGhPVVZWR1RreEZUa0pSVlUxelZEQkdRbUV3U1RkVlZVWkVZVVZOYzFOVlJrSlRVM2hFVVZWR1JFeEZiRUpSVld0elVUQkdRbEY1ZUZKUlZVWlNUekZzUWxGVlZYTlVWVVpDVkZONFRGRlZSa3hNUlU1Q1VWVk5OMVZWUmtSaFJVMXpVMVZHUWxOVGVGQlJWVVpRVEVWT1FsRlZUWE5VVlVaQ1ZGTjRTbEZWUmtwTVJXeENVVlZyYzFFd1JrSlJlWGhTVVZWR1VreEZUa0pSVlUxelZGVkdRbFJVZEZwUlZVWkdURVV4UWxGVk1ITlRNRVpDVTNsNFJGRlZSa1JQTVVaQ1VUTm9SVXhGYkVKUlZXdHpVVEJHUWxGNWVGSlJWVVpTVEVWT1FsRlZUWE5VTUVaQ1ZIbDRSRkZWUmtSTVJVNUNVVlZOYzFNd1JrSlRlWGhHVVZWR1JreEZUa0pSVlUxelVsVkdRbEpUZUVaUlZVWkdUekZzUWxFeWVFUk1SVEZDVVZVd2MxUlZSa0pVVTNoSVVWVkdTRXhGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYcDBXbEZWVFhoUmFYaE9VVlZHVGt4RlpFSlJWV056VWpCR1FsSjVlRXBSVlVaS1RFVnNRbEZWYTNOU1ZVWkNVbE40UkZGVlJrUlBNV3hDVVROYVEweEZiRUpSVld0elZGVkdRbFJUZUVaUlZVWkdUekprUTFGVlRsbE1SWFJDVVZWemMxRXdSa0pSZVhoVVVWVkdWRXhGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUbmRSYVhoT1VWVkdUa3hGTVVKUlZUQnpVakJHUWxKNWVFUlJWVVpFVEVWa1FsRlZZM05UVlVaQ1UxTjRTRkZWUmtoTVJWWkNVVlZWYzFJd1JrSlNlWGhHVVZWR1JreEZaRUpSVldOelVsVkdRbEpUZUVSUlZVWkVUekprUTFGVlRqSlJlWGhLVVZWR1NreEZkRUpSVlhOelVUQkdRbEY1ZUZKUlZVWlNURVZXUWxGVlZUZGlNRXBDVVRJMVEweEZNVUpSVlRCelZqQkdRbFo1ZUVoUlZVWklURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlRsQ1VWVTRjMUpWUmtKU1UzaElVVlZHU0V4RmRFSlJWWE56VVRCR1FsRjVlRkpSVlVaU1RFVk9RbEZWVFhOVU1FWkNWSGw0UmxGVlJrWk1SVTVDVVZWTmMxSXdSa0pTZVhoSVVWVkdTRXhGVGtKUlZVMDNZakJLUWxFelNrWk1SWFJDVVZWemMxRXdSa0pSZVhoU1VWVkdVa3hGWkVKUlZXTnpVMVZHUWxOVGVFUlJWVVpFVEVWa1FsRlZZM05STUVaQ1VYbDRURkZWUmt4TVJVNUNVVlZOYzFWVlJrSlZVM2hHVVZWR1JreEdaRUpSVm1OelVsVkdRbEpUZUU1UlZVWk9URVZPUWxGVlRYTlJNRVpDVVhwMGNGRnJSa1JNTUZFM1kxVktRbEZWTURkaU1FcENVbFUwYzFNd1JrSlRlWGhFVVZWR1JFeEdSa0pSVmtWelVqQkdRbEo1ZUU1UlZVWk9URVZPUWxGVlRUZGhWVXBDVVROb1EwOHlaRU5SVlU1RlRFVjBRbEZWYzNOUk1FWkNVWGw0VEZGVlJreE1SV1JDVVZWamMxUXdSa0pVZVhoRVVWVkdSRTh5UmtKUk0xSkRUekpzUTFGVlJrNVBNbVJEVVZWT1QweEZkRUpSVlhOelVUQkdRbEY1ZUZSUlZVWlVURVZXUWxGVlZYTlJNRVpDVVhwMGJsRnJSa1JpUlVselV6QkdRbE41ZUVSUlZVWkVURVpHUWxGV1JYTlNNRVpDVW5sNFJGRlZSa1JNUlU1Q1VWVk5OMW93U2tKUk1qVkRURVYwUWxGVmMzTlJNRVpDVVhsNFRGRlZSa3hNUldSQ1VWVmpjMU13UmtKVGVYaEVVVlZHUkV4RmRFSlJWWE56VTFWR1FsTlRlRkpSVlVaU1RFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1SVGxDVVZVNGMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVHpKR1FsRjZWa1ZQTVd4Q1VUQlJjMU13UmtKVGVYaEVVVlZHUkV4R1RrSlJWazF6VWpCR1FsSjVlRXBSVlVaS1RFVk9RbEZWVFhOVVZVWkNWRk40UmxGVlJrWk1SVTVDVVZWTk4xZFZSa1JoUlUxelV6QkdRbE41ZUVSUlZVWkVURVpHUWxGV1JYTlNNRVpDVW5sNFNGRlZSa2hNUlU1Q1VWVk5OMWRWUmtSamEwbHpVekJHUWxONWVFUlJWVVpFVEVaR1FsRldSWE5TTUVaQ1VubDRTbEZWUmtwTVJXeENVVlZyYzFFd1JrSlJlWGhJVVZWR1NFeEZUa0pSVlUxelZEQkdRbFI1ZUVaUlZVWkdURVZrUWxGVlkzTlRNRVpDVTNsNFJGRlZSa1JNUmtaQ1VWWk5jMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJlazVGVEVWMFFsRlZjM05STUVaQ1VYbDRTRkZWUmtoTVJXeENVVlZyYzFWVlJrSlZVM2hFVVZWR1JFeEZaRUpSVldOelVUQkdRbEY1ZUVoUlZVWklURVZPUWxGVlRYTlNNRVpDVW5sNFJGRlZSa1JNUlRGQ1VWVXdjMUV3UmtKUmVYaEVVVlZHUkV4RlRrSlJWVTF6VWpCR1FsSjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0U0ZGVlJraE1SVTVDVVZWTmMxSXdSa0pTZVhoSVVWVkdTRXhGVGtKUlZVMDNWVlZHUkU0d1VYTlJNRVpDVVhsNFJGRlZSa1JNUlU1Q1VWVk5OMVZWUmtSVFEzaE9VVlZHVGt4RlRrSlJWVTF6VmxWR1FsWlRlRVJSVlVaRVRFVnNRbEZWYTNOUk1FWkNVWGw0VWxGVlJsSk1SVlpDVVhwc1EweEZaRUpSVldOelVsVkdRbEpUZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhsNFNGRlZSa2hNUlU1Q1VWVk5jMW93U2tKUlYyUkRURVZPUWxGVlRYTlNWVVpFWW10TmMxRXdSa0pSZVhoRVVWVkdSRXhGVmtKUlZWVnpVVEJHUWxGNWVGQlJWVVpRVEVWT1FsRlZUWE5TTUVaQ1VubDRSRkZWUmtSTVIwWkNVVmRGYzFKVlJrSlNVM2hFVVZWR1JFeEZUa0pSVlUxelVUQkdSR0pGVFhOUk1FWkNVWHAwU2xGVlRrbE1SVTVDVVZWTk4xTlZSa1JVZVhoS1VWVkdTazh4UmtKUk1XZHpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNSE5STUVaQ1VYbDRTbEZWUmtwTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZWa0pSVlZWelVUQkdRbEY1ZUVaUlZVWkdURVZXUWxGVlZUZFhWVVpFWld0SmMxUlZSa0pVVTNoT1VWVkdUa3hGWkVKUlZXTnpVVEJHUWxGNWVFUlJWVVpFVEVWMFFsRlZjM05UVlVaQ1UxTjRVbEZWUmxKTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFJGRlZSa1JNUlhSQ1VWVnpjMU5WUmtKVFUzaFVVVlZHVkV4RlRrSlJWVTF6VVRCR1FsRjVlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRTh4YkVKUk0xSkdURVV4UWxGVk1ITlVWVVpDVkZONFNGRlZSa2hNUlU1Q1VWVk5jMUV3UmtKUmVYaE1VVlZHVEV4RmJFSlJWV3R6VlZWR1FsVlRlRVJSVlVaRVRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTmMxRXdSa0pSZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFeFJWVVpNVEVWc1FsRlZhM05WTUVaQ1ZYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFeEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFdsRlZUakJTVTNoS1VWVkdTa3hGTVVKUlZUQnpVMVZHUWxOVGVFNVJWVVpPVHpKa1ExRlZSa1pNUlRsQ1VWVTRjMVJWUmtKVVUzaElVVlZHU0V4Rk1VSlJWVEJ6VVRCR1FsRjZkRnBSVlUwelVYbDRTbEZWUmtwTVJVNUNVVlZOYzFFd1JrSlJlWGhNVVZWR1RFeEZiRUpSVld0elZWVkdRbFZUZUVwUlZVWktURVZPUWxGVlRYTlJNRVpDVVhsNFRGRlZSa3hNUld4Q1VWVnJjMVZWUmtKVlZIUnVVV3RHUWxKVGVGQlJWVVpRVEVWT1FsRlZUWE5STUVaQ1VYbDRWRkZWUmxSTVJXUkNVVlZqYzFFd1JrSlJlWGhFVVZWR1JFeEdUa0pSVmsxelVUQkdRbEY2ZEZwUlZVNXhVbWw0VGxGVlJrNU1SV1JDVVZWamMxSXdSa0pTZVhoU1VWVkdVa3hGVGtKUlZVMXpWbFZHUWxaVGVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRVbEZWUmxKTVJVNUNVVlZOYzFJd1JrSlNlWGhTVVZWR1VreEZUa0pSVlUxelZsVkdRbFpUZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhsNFVsRlZSbEpNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZOTlZKVGVFcFJWVVpLVEVWa1FsRlZZM05UVlVaQ1UxTjRSRkZWUmtSUE1tUkRVVlZHUmt4Rk9VSlJWVGh6VWpCR1FsSjVlRVJSVlVaRVQzcDBibEZyUmtSalJVbHpWREJHUWxSNWVFUlJWVVpFVEVWT1FsRlZUWE5WTUVaQ1ZYbDRTRkZWUmtoTVJVNUNVVlZOYzFFd1JrSlJlWGhVVVZWR1ZFeEZUa0pSVlUwM1ZWVkdSR1JyVFhOUk1FWkNVWGw0UkZGVlJrUk1SVTVDVVZWTk4xTlZSa1JUYVhoRVVWVkdSRTh3VGtKUk1GRTNVVlZHUkZKRGVFNVJWVVpPVEVWT1FsRlZUWE5TTUVaQ1VubDRSbEZWUmtaUE1HeENVVEZuYzFSVlJrSlVVM2hTVVZWR1VreEZaRUpSVldOelUxVkdRbE5UZUhCUmEwWkNZVlZKYzFFd1JrSlJlWGhXVVZWR1ZreEZUa0pSVlUxelVUQkdRbEY2ZEVwUlZVNTFVa040VGxGVlJrNU1Sa1pDVVZaRmMxSXdSa0pTZVhoS1VWVkdTa3hHUmtKUlZrVnpVbFZHUWxKVGVFUlJWVVpFVHpCc1FsRXlhRVJNUlRGQ1VWVXdjMVZWUmtKVlUzaElVVlZHU0V4RmJFSlJWV3R6WVZWS1FsRlhiRU5NUlU1Q1VWVk5jMVZWUmtKVlUzaEVVVlZHUkV4RlRrSlJWVTAzVTFWR1JHRnJVWE5VVlVaQ1ZGTjRVbEZWUmxKTVJXUkNVVlZqYzFOVlJrSlRVM2hzVVZWR2JFeEZUa0pSVlUxelZsVkdRbFpUZUVaUlZVWkdURVpHUWxGV1JYTlJNRVpDVVhsNFJGRlZSa1JQTUd4Q1VYcE9SVXhGTVVKUlZUQnpWVlZHUWxWVGVFaFJWVVpJVEVWc1FsRlZhM05hVlVaQ1dsTjRSRkZWUmtSTVJrWkNVVlpGYzFKVlJrSlNVM2hTVVZWR1VreEZUa0pSVlUxelVUQkdRbEY2ZEVwUlZVNDJVa040VGxGVlJrNU1Sa1pDVVZaRmMxSXdSa0pTZVhoS1VWVkdTa3hHVmtKUlZsVnpVbFZHUWxKVGVFUlJWVVpFVHpCc1FsRXllRVJNUlRGQ1VWVXdjMVZWUmtKVlUzaElVVlZHU0V4RmJFSlJWV3R6VkRCR1FsUjVlRVpSVlVaR1RFVk9RbEZWVFRkVFZVWkVUREJKYzFRd1JrSlVlWGhFVVZWR1JFeEZWa0pSVlZWelVUQkdRbEY1ZUZoUlZVWllURVZPUWxGVlRYTlNWVVpDVWxONFNGRlZSa2hNUlZaQ1VWVlZOMVZWUmtST01FbHpVMVZHUWxOVGVFUlJWVVpFVEVVNVFsRlZPSE5STUVaQ1VYbDRjRkpWUmtKaFZWVnpVVEJHUWxGNmRGcFJWVVpHVEVVNVFsRlZPRGRWVlVaRVpVVlpjMVZWUmtKVlUzaEVVVlZHUkV4RmRFSlJWWE56VWxWR1FsSlRlRVJSVlVaRVR6RkdRbEV5Y0VOTVJrWkNVVlpGYzFFd1JrSlJlWGhNVVZWR1RFeEZWa0pSVlZWelVUQkdRbEY2ZEZKUlZVNXhVV2w0VEZGVlJreE1SVTVDVVZWTmMxWlZSa0pXVTNoRVVWVkdSRXhGVGtKUlZVMDNWVlZHUkdKRlNYTlVWVVpDVkZONFJGRlZSa1JNUmtaQ1VWWkZjMUV3UmtKUmVYaE9VVlZHVGt4RlZrSlJWVlZ6VVRCR1FsRjZkRXBSVlUxNFVXbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlblJLVVZWT1NVeEdSa0pSVmtWelVUQkdRbEY1ZUZCUlZVWlFURVZrUWxGVlkzTlRWVVpDVTFONFJGRlZSa1JNUlZaQ1VWVlZOMVZWUmtSbGEwbHpWVlZHUWxWVGVFUlJWVVpFVEVWc1FsRlZhM05TVlVaQ1VsTjRSRkZWUmtSUE1VWkNVVEpvUTB4Rk1VSlJWVEJ6VVRCR1FsRjVlRXBSVlVaS1RFVk9RbEZWVFhOVFZVWkNVMU40UmxGVlJrWk1SV1JDVVZWamMxSlZSa0pTVkhSYVVWVk9NRkZwZUZKUlZVWlNURVZPUWxGVlRYTlpWVVpDV1ZONFJGRlZSa1JNUld4Q1VWVnJjMUV3UmtKUmVYaEVVVlZHUkU4eGJFSlJlbVJEVEVaR1FsRldSWE5STUVaQ1VYbDRTbEZWUmtwTVJWWkNVVlZWYzFFd1JrSlJlblJTVVZWT2NWRnBlRVJSVlVaRVRFVldRbEZWVlhOUk1FWkNVWGw0UkZGVlJrUk1SVlpDVVZWVk4xZFZSa1JVYVhoTVVWVkdURXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVaT1FsRldUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSTTNCRFRFWkdRbEZXUlhOUk1FWkNVWGw0VGxGVlJrNU1SVlpDVVZWVmMxRXdSa0pSZW5SU1VWVk9kVkZwZUVSUlZVWkVURVZPUWxGVlRYTlJNRVpDVVhwMFNsRlZUa3RNUlU1Q1VWVk5jMUV3UmtKUmVuUktVVlZPUjB4R1JrSlJWa1Z6VVRCR1FsRjVlRkJSVlVaUVRFVmtRbEZWWTNOU01FWkNVbmw0UmxGVlJrWlBNVVpDVVROYVEweEZNVUpSVlRCelVUQkdRbEY1ZUZwUlZVWmFURVZXUWxGVlZYTlJNRVpDVVhwMFNsRlZUakpSYVhoRVVWVkdSRXhGVGtKUlZVVTNVMVZHUkZKRGVFNVJWVVpPVEVWT1FsRlZUWE5WVlVaQ1ZWTjRTRkZWUmtoTVJXUkNVVlZqYzFKVlJrSlNWSFJTVVZWT01GRnBlRkpSVlVaU1RFVk9RbEZWVFhOVFZVWkNVMU40UmxGVlJrWk1SVTVDVVZWTk4xVlZSa1JoUlVselZWVkdRbFZUZUVSUlZVWkVURVZzUWxGVmEzTlNWVVpDVWxONFJGRlZSa1JQTUd4Q1VUSndRMHhGVGtKUlZVMXpVVEJHUWxGVWRFcFJWVTVGVEVVeFFsRlZNSE5STUVaQ1VYbDRWRkZWUmxSTVJXUkNVVlZqYzFJd1JrSlNlWGhHVVZWR1JrOHhSa0pSTTFwRFRFVjBRbEZWYzNOUk1FWkNVWGw0YUZGVlJtaE1SVTVDVVZWTmMxRXdSa0pSZW5SS1VWVk9NRkZwZUVSUlZVWkVURVZPUWxGVlJUZFRWVVpFVWtONFNsRlZSa3BNUlRsQ1VWVTRjMUl3UmtKa01FbHpWVEJHUWxWNWVFUlJWVVpFVHpCc1FsRjZaRVJNUmtaQ1VWWkZjMUV3UmtKUmVYaFFVVlZHVUV4RlpFSlJWV056VTFWR1FsTlRlRVJSVlVaRVRFVldRbEZWVlRkVlZVWkVaV3RKYzFWVlJrSlZVM2hFVVZWR1JFeEZiRUpSVld0elVsVkdRbEpUZUVSUlZVWkVUekZHUWxFeWFFTk1SVEZDVVZVd2MxRXdSa0pSZVhoU1VWVkdVa3hGVGtKUlZVMXpVMVZHUWxOVGVFWlJWVVpHVEVWMFFsRlZjM05STUVaQ1VYbDRSbEZWUmtaUE1XeENVWHBrUTB4R1JrSlJWa1Z6VVRCR1FsRjVlR2hSVlVab1RFVk9RbEZWVFhOVFZVWkNVMU40UkZGVlJrUk1SVTVDVVZWTk4xZFZSa1JPTUVselZWVkdRbFZUZUVSUlZVWkVURVZzUWxGVmEzTlJNRVpDVVhsNFRGRlZSa3hNUlU1Q1VWVk5jMUV3UmtKUmVuUmFVVlZPZVZGcGVGQlJWVVpRVEVWa1FsRlZZM05UTUVaQ1UzbDRSRkZWUmtSUE1VWkNVVEp3UTB4RlRrSlJWVTF6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFhOU1ZVWkNVbFIwV2xGVlRrOU1SWFJDVVZWemMxRXdSa0pSZVhoS1VWVkdTa3hGVGtKUlZVMXpWVEJHUWxWNWVFUlJWVVpFVEVWT1FsRlZUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOTjFkVlJrUmxhMGx6VlZWR1FsVlRlRVJSVlVaRVRFVnNRbEZWYTNOU1ZVWkNVbE40UkZGVlJrUlBNVVpDVVRKd1EweEZUa0pSVlUxelVUQkdRbEY1ZUVSUlZVWkVUekJzUWxFd2IzTlJNRVpDVVhsNFJGRlZSa1JQTUd4Q1VUQlpjMU5WUmtKVFUzaFNVVlZHVWt4RlpFSlJXR3hEVEVaT1FsRldUWE5STUVaQ1VYcDBTbEZWVFhaUmVYaFNVVlZHVWt4RlRrSlJWVTF6VlZWR1FsVlRlRWhSVlVaSVRFVnNRbEZWYTNOUk1FWkNVWGw0UmxGVlJrWlBNVVpDVVhwR1EweEdSa0pSVmtWelVUQkdRbEY1ZUVwUlZVWktURVZXUWxGVlZYTlJNRVpDVVhwMFVsRlZUbTlSYVhoT1VWVkdUa3hGVGtKUlZVMXpXVlZHUWxsVGVFUlJWVVpFVEVWc1FsRlZhM05TVlVaQ1VsTjRURkZWUmt4TVJVNUNVVlZOYzFKVlJrSlNWSFJhVVZWT2MxRjVlRkpSVlVaU1RFVmtRbEZWWTNOVFZVWkNVMU40VWxGVlJsSk1SVTVDVVZWTmMxTXdSa0pUZVhoRVVWVkdSRXhGVGtKUlZVMDNWMVZHUkV3d1NYTlVWVVpDVkZONFRsRlZSazVNUldSQ1VWVmpjMUV3UmtKUmVYaFFVVlZHZEZGcGVFWlJWVVpHVEVWV1FsRlZWVGRhTUVwQ1VUTlNSRXhGYkVKUlZXdHpVVEJHUWxGNWVGSlJWVVpTVEVWV1FsRlZWVGRpTUVwQ1VUSlJjMVJWUmtKVVUzaE1VVlZHVEV4RlRrSlJWVTAzWVZWS1FsRXhiemRhTUVwQ1VUQlJjMVJWUmtKVVUzaEdVVlZHUmt4Rk1VSlJWVEJ6VWxWR1FsSlRlRkJSVlVaUVRFVldRbEZWVlhOU01FWkNVbmw0VWxGVlJsSk1SVTVDVVZWTmMxTlZSa0pUVTNoRVVWVkdSRXhGT1VKUlZUaHpVVEJHUWxGNWVFUlJWVVpFVHpKa1ExRlZUblZTUTNoU1VWVkdVa3hGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVVeFFsRlZNSE5TVlVaQ1VsTjRVRkZWUmxCTVJVNUNVVlZOYzFFd1JrSlJlblJhVVZWT2IxRjVlRVJSVlVaRVRFVk9RbEZWUlRkWFZVWkVVa040VWxGVlJsSk1SVTVDVVZWTmMxUlZSa0pVVTNoSVVWVkdTRXhGTVVKUlZUQnpVVEJHUWxGNmRGcFJWVTQyVVdsNFRsRlZSazVNUlZaQ1VWVlZjMUV3UmtKUmVuUlNVVlZPVjB4RlRrSlJWVTF6VWxWR1FsSlRlRVJSVlVaRVRFVk9RbEZWVFhOU1ZVWkNVbFIwV2xGVlRrOU1SV3hDVVZWcmMxUXdSa0pVZVhoRVVWVkdSRXhGYkVKUlZXdHpWVlZHUWxWVWRHNVJhMFpFWkd0SmMxTXdSa0pUZVhoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNWVFUlJWVVpFVDNwMGJsRnJSa1pXUTNoTVVWVkdURXhGVGtKUlZVMXpVMVZHUWxOVGVFUlJWVVpFVEVaT1FsRldUWE5STUVaQ1VYbDRSRkZWUmtSTVJVNUNVVlZOYzFFd1JrSlJlWGhFVVZWR1JFOHhiRUpSZWtaRFRFVnNRbEZWYTNOVU1FWkNWSHAwYmxGclJrUldhWGhTVVZWR1VreEZUa0pSVlUxelUxVkdRbE5UZUVSUlZVWkVURVU1UWxGVk9ITlJNRVpDVVhsNFJGRlZSa1JQZW5SdVVXdEdSbVJyU1hOVVZVWkNWRk40VEZGVlJreE1SVTVDVVZWTk4xVlZSa1JhUTNoRVVWVkdSRXhGVGtKUlZVMXpVVEJHUWxGNmRFcFJWVTVMVEVWT1FsRlZUWE5STUVaQ1VWUjBTbEZWVmtWTVJrWkNVVlpGYzFFd1JrSlJlWGhLVVZWR1NreEZWa0pSVlZWelVUQkdRbEY2ZEVwUlZWWnZVV2w0VGxGVlJrNU1SVTVDVVZWTmMxTlZSa0pUVTNoR1VWVkdSa3hGVGtKUlZVMDNVMVZHUkZwRGVFNVJWVVpPVEVWT1FsRlZUWE5WVlVaQ1ZWTjRSRkZWUmtSTVJXUkNVVlZqYzFSVlJrSlVVM2hFVVZWR1JFOHdSa0pSZWs1RFRFVk9RbEZWVFhOUk1FWkNVWGw0UkZGVlJrUkpiakE5SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxGTkJRVk1zUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0SlFVTmFMRTlCUVU4c1VVRkJVU3hEUVVGRExHTkJRV01zUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXp0RFFVTjBRenRCUVVORUxGTkJRVk1zUlVGQlJTeERRVUZETEU5QlFVOHNSVUZCUlR0SlFVTnFRaXhQUVVGUExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNN1EwRkRNVU03UVVGRFJDeFRRVUZUTEVkQlFVY3NRMEZCUXl4VFFVRlRMRVZCUVVVc1QwRkJUeXhGUVVGRkxFVkJRVVVzUlVGQlJTeFRRVUZUTEVWQlFVVTdTVUZETlVNc1RVRkJUU3hGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMGxCUTNCQ0xFVkJRVVVzUTBGQlF5eFRRVUZUTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUTNwQ0xFOUJRVThzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTnNReXhKUVVGSkxFVkJRVVU3VVVGRFJpeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkhMRVZCUVVVc1EwRkJRenRKUVVObUxFbEJRVWtzVTBGQlV6dFJRVU5VTEU5QlFVOHNRMEZCUXl4RlFVRkZMRVZCUVVVc1UwRkJVeXhEUVVGRExFTkJRVU03U1VGRE0wSXNUMEZCVHl4RlFVRkZMRU5CUVVNN1EwRkRZanRCUVVORUxGTkJRVk1zU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4SFFVRkhMRVZCUVVVN1NVRkRjRUlzUjBGQlJ5eERRVUZETEZOQlFWTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03UTBGRE4wSTdRVUZEUkN4VFFVRlRMRWxCUVVrc1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTzBsQlEzQkNMRWRCUVVjc1EwRkJReXhUUVVGVExFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPME5CUXpGQ08wRkJRMFFzVTBGQlV5eE5RVUZOTEVOQlFVTXNSMEZCUnl4RlFVRkZPMGxCUTJwQ0xFZEJRVWNzUTBGQlF5eFRRVUZUTEVkQlFVY3NSVUZCUlN4RFFVRkRPME5CUTNSQ08wRkJRMFFzVTBGQlV5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RlFVRkZMRVZCUVVVc1JVRkJSVHRKUVVOMFFpeEhRVUZITEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVDBGQlR5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RFFVRkRPME5CUTNKRE8wRkJRMFFzVTBGQlV5eE5RVUZOTEVOQlFVTXNSVUZCUlN4RlFVRkZPMGxCUTJoQ0xFMUJRVTBzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhOUVVGTkxFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTTdRMEZEZGtNN1FVRkRSQ3hOUVVGTkxHbENRVUZwUWl4RFFVRkRPMGxCUTNCQ0xGZEJRVmNzUTBGQlF5eEhRVUZITEVWQlFVVTdVVUZEWWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhIUVVGSExFZEJRVWNzUTBGQlF6dFJRVU5tTEVsQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSU3hEUVVGRE8wdEJRMjVDTzBsQlEwUXNTVUZCU1N4SlFVRkpMRWRCUVVjN1VVRkRVQ3hKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdVVUZEWkN4UFFVRlBMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTTdTMEZETjBJN1NVRkRSQ3hKUVVGSkxFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVTdVVUZEV0N4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXp0UlFVTXhRaXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVOQlFVTTdTMEZEZUVJN1NVRkRSQ3hKUVVGSkxGVkJRVlVzUjBGQlJ6dFJRVU5pTEU5QlFVOHNTVUZCU1N4RFFVRkRMRWRCUVVjc1IwRkJSeXh2UWtGQmIwSXNRMEZCUXp0TFFVTXhRenRKUVVORUxFZEJRVWNzUTBGQlF5eEhRVUZITEVWQlFVVTdVVUZEVEN4UFFVRlBMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRMUVVOMFF6dEpRVU5FTEVkQlFVY3NRMEZCUXl4SFFVRkhMRVZCUVVVN1VVRkRUQ3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRSUVVOeVFpeEpRVUZKTEVOQlFVTXNZVUZCWVN4RlFVRkZMRU5CUVVNN1MwRkRlRUk3U1VGRFJDeGhRVUZoTEVOQlFVTXNSMEZCUnl4RlFVRkZPMUZCUTJZc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzFGQlEyUXNTVUZCU1N4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRPMWxCUXpOQ0xFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1MwRkRja0k3U1VGRFJDeE5RVUZOTEVOQlFVTXNSMEZCUnl4RlFVRkZPMUZCUTFJc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzFGQlEyUXNUVUZCVFN4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1VVRkRiRU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXp0WlFVTk1MRTlCUVU4c1MwRkJTeXhEUVVGRE8xRkJRMnBDTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0UlFVTjRRaXhKUVVGSkxFTkJRVU1zWVVGQllTeEZRVUZGTEVOQlFVTTdVVUZEY2tJc1QwRkJUeXhKUVVGSkxFTkJRVU03UzBGRFpqdEpRVU5FTEV0QlFVc3NSMEZCUnp0UlFVTktMRmxCUVZrc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMUZCUTNwRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0TFFVTnFRanRKUVVORUxFMUJRVTBzUjBGQlJ6dFJRVU5NTEUxQlFVMHNTVUZCU1N4SFFVRkhMRmxCUVZrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4RFFVRkRPMUZCUTI1RUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVTdXVUZEVUN4SlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFVkJRVVVzUTBGQlF6dFRRVU51UWp0aFFVTkpPMWxCUTBRc1NVRkJTVHRuUWtGRFFTeE5RVUZOTEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzJkQ1FVTTVRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNTVUZCU1N4UFFVRlBMRU5CUVVNc1NVRkJTU3hSUVVGUkxFTkJRVU1zUlVGQlJUdHZRa0ZET1VRc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdhVUpCUTI1Q08zRkNRVU5KTzI5Q1FVTkVMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETzJsQ1FVTnlRanRoUVVOS08xbEJRMFFzVDBGQlR5eERRVUZETEVWQlFVVTdaMEpCUTA0c1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdZVUZEYmtJN1UwRkRTanRSUVVORUxFbEJRVWtzUTBGQlF5eGhRVUZoTEVWQlFVVXNRMEZCUXp0TFFVTjRRanRKUVVORUxHRkJRV0VzUjBGQlJ6dFJRVU5hTEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMUZCUTNoRExGbEJRVmtzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRlZCUVZVc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU12UXp0RFFVTktPMEZCUTBRc1RVRkJUU3hsUVVGbExFTkJRVU03U1VGRGJFSXNWMEZCVnl4RFFVRkRMRkZCUVZFc1JVRkJSU3hQUVVGUExFVkJRVVVzVDBGQlR5eEhRVUZITEUxQlFVMHNTMEZCU3l4RFFVRkRMRVZCUVVVN1VVRkRia1FzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4RlFVRkZMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03VVVGRGVrSXNTVUZCU1N4RFFVRkRMRVZCUVVVc1IwRkJSeXhGUVVGRkxFTkJRVU1zVVVGQlVTeEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRPMUZCUXk5Q0xFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NSVUZCUlN4RFFVRkRMRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRVU1zUTBGQlF6dFJRVU55UXl4SlFVRkpMRU5CUVVNc1VVRkJVU3hIUVVGSExFVkJRVVVzUTBGQlF5eFJRVUZSTEVkQlFVY3NVVUZCVVN4RFFVRkRMRU5CUVVNN1VVRkRlRU1zU1VGQlNTeERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRU5CUVVNN1VVRkRka0lzU1VGQlNTeERRVUZETEU5QlFVOHNSMEZCUnl4UFFVRlBMRU5CUVVNN1VVRkRka0lzVFVGQlRTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRPMUZCUTJ4Q0xFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRTFCUVUwN1dVRkRla0lzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzFOQlEzUkRMRU5CUVVNc1EwRkJRenRMUVVOT08wbEJRMFFzU1VGQlNTeEhRVUZITzFGQlEwZ3NTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdVVUZEZUVJc1RVRkJUU3hMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNN1VVRkRhRU1zVFVGQlRTeEZRVUZGTEVkQlFVY3NTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJRenRSUVVOdVFpeE5RVUZOTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1VVRkRXQ3hOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdVVUZEYkVJc1MwRkJTeXhEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVsQlFVazdXVUZEYkVJc1RVRkJUU3hGUVVGRkxFZEJRVWNzUjBGQlJ5eERRVUZETEVsQlFVa3NSVUZCUlN4RlFVRkZMRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTA3WjBKQlEzUkRMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdZVUZETVVJc1EwRkJReXhEUVVGRE8xbEJRMGdzUlVGQlJTeERRVUZETEZkQlFWY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRUUVVOMFFpeERRVUZETEVOQlFVTTdVVUZEU0N4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdTMEZEZWtJN1NVRkRSQ3hKUVVGSkxFZEJRVWM3VVVGRFNDeEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dExRVU16UWp0SlFVTkVMRmRCUVZjc1EwRkJReXhKUVVGSkxFVkJRVVU3VVVGRFpDeEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRM1JDTzBOQlEwbzdRVUZEUkN4TlFVRk5MRkZCUVZFc1EwRkJRenRKUVVOWUxGZEJRVmNzUTBGQlF5eFRRVUZUTEVkQlFVY3NUVUZCVFN4TFFVRkxMRU5CUVVNc1JVRkJSVHRSUVVOc1F5eEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRVZCUVVVc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dFJRVU42UWl4SlFVRkpMRU5CUVVNc1IwRkJSeXhIUVVGSExFVkJRVVVzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0UlFVTTFRaXhKUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEZOQlFWTXNRMEZCUXp0UlFVTjZRaXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdVVUZEYkVJc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNUVUZCVFR0WlFVTndRaXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTEVOQlFVTTdVMEZEYkVJc1EwRkJReXhEUVVGRE8wdEJRMDQ3U1VGRFJDeEpRVUZKTEVkQlFVYzdVVUZEU0N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0TFFVTXpRanRKUVVORUxFbEJRVWtzUjBGQlJ6dFJRVU5JTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFMUJRVTBzUTBGQlF5eERRVUZETzB0QlF6TkNPME5CUTBvN1FVRkRSQ3hOUVVGTkxGVkJRVlVzUTBGQlF6dEpRVU5pTEZkQlFWY3NSMEZCUnp0UlFVTldMRWxCUVVrc1EwRkJReXhSUVVGUkxFZEJRVWNzUTBGQlF5eEpRVUZKTEV0QlFVc3NSMEZCUnl4RFFVRkRPMUZCUXpsQ0xFbEJRVWtzUTBGQlF5eEpRVUZKTEVkQlFVY3NSVUZCUlN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8xRkJRM2hDTEVsQlFVa3NRMEZCUXl4RlFVRkZMRWRCUVVjc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzB0QlF6VkNPMGxCUTBRc1NVRkJTU3hEUVVGRExFdEJRVXNzUlVGQlJUdFJRVU5TTEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFMUJRVTBzUTBGQlF5eERRVUZETzFGQlEzaENMRTFCUVUwc1JVRkJSU3hIUVVGSExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTTdVVUZEYmtJc1RVRkJUU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzFGQlExZ3NUVUZCVFN4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRE8xRkJRMnhDTEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhKUVVGSk8xbEJRMllzVFVGQlRTeEZRVUZGTEVkQlFVY3NSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhWUVVGVkxFVkJRVVVzUlVGQlJTeEZRVUZGTEZOQlFWTXNSVUZCUlN4TlFVRk5PMmRDUVVNNVF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8yRkJRM0JDTEVOQlFVTXNRMEZCUXp0WlFVTklMRVZCUVVVc1EwRkJReXhYUVVGWExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdVMEZEZEVJc1EwRkJReXhEUVVGRE8wdEJRMDQ3U1VGRFJDeEpRVUZKTEVkQlFVYzdVVUZEU0N4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0TFFVTXpRanREUVVOS08wRkJRMFFzVFVGQlRTeFBRVUZQTEVOQlFVTTdTVUZEVml4WFFVRlhMRWRCUVVjN1VVRkRWaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTm9RaXhKUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNUMEZCVHl4TFFVRkxMRWRCUVVjc1EwRkJRenRSUVVNdlFpeEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRVZCUVVVc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dFJRVU40UWl4SlFVRkpMRU5CUVVNc1VVRkJVU3hIUVVGSExFVkJRVVVzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhEUVVGRE8xRkJRM0pETEVsQlFVa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1JVRkJSU3hEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETzFGQlEycERMRWxCUVVrc1EwRkJReXhIUVVGSExFZEJRVWNzUlVGQlJTeERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRPMUZCUXpWQ0xFMUJRVTBzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXp0UlFVTnNRaXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlN4TlFVRk5MRWxCUVVrc1EwRkJReXhWUVVGVkxFVkJRVVVzUTBGQlF5eERRVUZETzB0QlEyeEVPMGxCUTBRc1NVRkJTU3hEUVVGRExFMUJRVTBzUlVGQlJTeEhRVUZITEVWQlFVVTdVVUZEWkN4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0UlFVTjRRaXhOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRPMUZCUXk5Q0xFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0UlFVTnFRaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEhRVUZITEVWQlFVVXNRMEZCUXp0UlFVTm9RaXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdVVUZEYkVJc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEVsQlFVazdXVUZEYUVJc1RVRkJUU3hIUVVGSExFZEJRVWNzUlVGQlJTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMWxCUTNSQ0xFMUJRVTBzUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRaUVVOd1FpeE5RVUZOTEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03V1VGRGNFSXNRMEZCUXl4RFFVRkRMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEyeENMRU5CUVVNc1EwRkJReXhUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTnNRaXhQUVVGUExFTkJRVU1zUTBGQlF5eEZRVUZGTEUxQlFVMDdaMEpCUTJJc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXp0blFrRkRja0lzU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRuUWtGRGJrSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF6dGhRVU40UWl4RFFVRkRMRU5CUVVNN1dVRkRTQ3hQUVVGUExFTkJRVU1zUTBGQlF5eEZRVUZGTEUxQlFVMDdaMEpCUTJJc1NVRkJTU3hEUVVGRExFZEJRVWNzUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXp0blFrRkRja0lzU1VGQlNTeERRVUZETEVkQlFVY3NSVUZCUlN4VFFVRlRMRU5CUVVNc1EwRkJRenRuUWtGRGNrSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dGhRVU4wUWl4RFFVRkRMRU5CUVVNN1dVRkRTQ3hKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEZOQlFWTXNRMEZCUXl4RFFVRkRPMWxCUTNKQ0xFbEJRVWtzUTBGQlF5eERRVUZETEVWQlFVVXNZMEZCWXl4RFFVRkRMRU5CUVVNN1dVRkRlRUlzU1VGQlNTeERRVUZETEVOQlFVTXNSVUZCUlN4alFVRmpMRU5CUVVNc1EwRkJRenRaUVVONFFpeEhRVUZITEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8xbEJRMjVDTEVkQlFVY3NRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03V1VGRGJrSXNTVUZCU1N4RFFVRkRMRWRCUVVjc1JVRkJSU3haUVVGWkxFTkJRVU1zUTBGQlF6dFpRVU40UWl4UlFVRlJMRU5CUVVNc1YwRkJWeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzFsQlF6RkNMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMU5CUTNoQ0xFTkJRVU1zUTBGQlF6dFJRVU5JTEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03UzBGRGNrSTdTVUZEUkN4SlFVRkpMRWRCUVVjN1VVRkRTQ3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenRMUVVNelFqdEpRVU5FTEZWQlFWVXNSMEZCUnp0UlFVTlVMRTFCUVUwc1QwRkJUeXhIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU51UWl4TlFVRk5MRmxCUVZrc1IwRkJSeXhGUVVGRkxFTkJRVU03VVVGRGVFSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4TFFVRkxPMWxCUTNwQ0xFbEJRVWtzUTBGQlF5eERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1UwRkJVeXhEUVVGRE8yZENRVU12UWl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzJsQ1FVTnNRaXhKUVVGSkxFTkJRVU1zUTBGQlF5eFRRVUZUTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTlCUVU4c1EwRkJRenRuUWtGRGJFTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6czdaMEpCUlhCQ0xGbEJRVmtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRE8xTkJRMmhETEVOQlFVTXNRMEZCUXp0UlFVTklMRWxCUVVrc1dVRkJXU3hEUVVGRExFMUJRVTBzUjBGQlJ5eERRVUZETEVWQlFVVTdXVUZEZWtJc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5dzBRa0ZCTkVJc1IwRkJSeXhaUVVGWkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRja1VzVDBGQlR6dFRRVU5XTzFGQlEwUXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dExRVU40UWp0SlFVTkVMRTlCUVU4c1EwRkJReXhIUVVGSExFVkJRVVU3VVVGRFZDeEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRk5CUVZNc1IwRkJSeXhIUVVGSExFTkJRVU03UzBGRE5VSTdRMEZEU2p0QlFVTkVMRTFCUVUwc1UwRkJVeXhEUVVGRE8wbEJRMW9zVjBGQlZ5eERRVUZETEUxQlFVMHNSVUZCUlN4SlFVRkpMRVZCUVVVN1VVRkRkRUlzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4TlFVRk5MRU5CUVVNN1VVRkRja0lzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNN1MwRkRjRUk3U1VGRFJDeFBRVUZQTEVkQlFVYzdVVUZEVGl4SlFVRkpMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eEpRVUZKTEUxQlFVMDdXVUZETjBJc1QwRkJUeXhUUVVGVExFTkJRVU03VVVGRGNrSXNUMEZCVHp0WlFVTklMRTFCUVUwc1JVRkJSU3hKUVVGSkxFTkJRVU1zVFVGQlRUdFpRVU51UWl4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTzFsQlF6RkNMRlZCUVZVc1JVRkJSU3hKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVczdVMEZET1VJc1EwRkJRenRMUVVOTU8wTkJRMG83UVVGRFJDeEpRVUZKTEZGQlFWRXNRMEZCUXp0QlFVTmlMRU5CUVVNc1ZVRkJWU3hSUVVGUkxFVkJRVVU3U1VGRGFrSXNVMEZCVXl4TFFVRkxMRU5CUVVNc1EwRkJReXhGUVVGRk8xRkJRMlFzVFVGQlRTeEhRVUZITEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFJRVU14UWl4SlFVRkpMRXRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU03V1VGRFZpeFBRVUZQTEZOQlFWTXNRMEZCUXp0UlFVTnlRaXhQUVVGUExFbEJRVWtzU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMHRCUTNoQ08wbEJRMFFzVVVGQlVTeERRVUZETEV0QlFVc3NSMEZCUnl4TFFVRkxMRU5CUVVNN1NVRkRka0lzVTBGQlV5eEhRVUZITEVOQlFVTXNRMEZCUXl4RlFVRkZPMUZCUTFvc1NVRkJTU3hEUVVGRExFTkJRVU03V1VGRFJpeFBRVUZQTEVWQlFVVXNRMEZCUXp0UlFVTmtMRTlCUVU4c1EwRkJReXhEUVVGRExGZEJRVmNzUlVGQlJTeERRVUZETzB0QlF6RkNPMGxCUTBRc1VVRkJVU3hEUVVGRExFZEJRVWNzUjBGQlJ5eEhRVUZITEVOQlFVTTdTVUZEYmtJc1UwRkJVeXhMUVVGTExFZEJRVWM3VVVGRFlpeFBRVUZQTEZGQlFWRXNRMEZCUXl4SlFVRkpMRWxCUVVrc1JVRkJSU3hEUVVGRExFTkJRVU03UzBGREwwSTdTVUZEUkN4UlFVRlJMRU5CUVVNc1MwRkJTeXhIUVVGSExFdEJRVXNzUTBGQlF6dEpRVU4yUWl4VFFVRlRMRkZCUVZFc1EwRkJReXhKUVVGSkxFVkJRVVU3VVVGRGNFSXNUMEZCVHl4SlFVRkpMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNRMEZCUXp0TFFVTnlRenRKUVVORUxGRkJRVkVzUTBGQlF5eFJRVUZSTEVkQlFVY3NVVUZCVVN4RFFVRkRPMGxCUXpkQ0xGTkJRVk1zVlVGQlZTeERRVUZETEVsQlFVa3NSVUZCUlR0UlFVTjBRaXhQUVVGUExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSU3hIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhIUVVGSExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVkQlFVY3NSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJRenRMUVVOcVJqdEpRVU5FTEZGQlFWRXNRMEZCUXl4VlFVRlZMRWRCUVVjc1ZVRkJWU3hEUVVGRE8wTkJRM0JETEVWQlFVVXNVVUZCVVN4TFFVRkxMRkZCUVZFc1IwRkJSeXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEyaERMRk5CUVZNc1YwRkJWeXhEUVVGRExFdEJRVXNzUlVGQlJTeEhRVUZITEVWQlFVVXNTMEZCU3l4RlFVRkZMRWxCUVVrc1JVRkJSVHRKUVVNeFF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hIUVVGSExFZEJRVWNzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUXk5RExFbEJRVWtzUzBGQlN5eEhRVUZITEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRKUVVOeVFpeEpRVUZKTEZGQlFWRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMGxCUTNoRExFbEJRVWtzVVVGQlVTeEhRVUZITEZGQlFWRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEpRVU5zUXl4SlFVRkpMRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wbEJRM2hETEVsQlFVa3NVMEZCVXl4SFFVRkhMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0SlFVTnVReXhOUVVGTkxGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNN1NVRkRhRU1zU1VGQlNTeExRVUZMTEVsQlFVa3NSVUZCUlR0UlFVTllMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU03U1VGRGNrSXNTVUZCU1N4TFFVRkxMRWxCUVVrc1VVRkJVU3hKUVVGSkxFdEJRVXNzU1VGQlNTeFBRVUZQTEVsQlFVa3NTMEZCU3l4SlFVRkpMRk5CUVZNc1JVRkJSVHRSUVVNM1JDeEpRVUZKTEVOQlFVTXNlVVJCUVhsRUxFTkJRVU1zUTBGQlF6dFJRVU5vUlN4TFFVRkxMRWRCUVVjc1VVRkJVU3hEUVVGRE8wdEJRM0JDTzBsQlEwUXNTVUZCU1N4TFFVRkxMRWxCUVVrc1QwRkJUeXhKUVVGSkxFdEJRVXNzU1VGQlNTeFRRVUZUTEVWQlFVVTdVVUZEZUVNc1NVRkJTVHRaUVVOQkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVsQlFVa3NRMEZCUXl4UlFVRlJMRWxCUVVrc1MwRkJTeXhEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEV0QlFVc3NRMEZCUXl4VFFVRlRMRU5CUVVNc1JVRkJSVHRuUWtGREwwUXNUVUZCVFN4RlFVRkZMRU5CUVVNN1lVRkRXanRaUVVORUxFMUJRVTBzU1VGQlNTeEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGSExFVkJRVVVzUzBGQlN5eEZRVUZGTEZGQlFWRXNSVUZCUlN4UlFVRlJMRVZCUVVVc1VVRkJVU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNSMEZCUnl4RlFVRkZMRk5CUVZNc1JVRkJSU3hEUVVGRE8xbEJRMnhITEU5QlFVOHNTVUZCU1N4RFFVRkRPMU5CUTJZN1VVRkRSQ3hQUVVGUExFVkJRVVVzUlVGQlJUdFpRVU5RTEVsQlFVa3NRMEZCUXl4dlJVRkJiMFVzUTBGQlF5eERRVUZETzFsQlF6TkZMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU03V1VGRGFrSXNVMEZCVXl4SFFVRkhMRU5CUVVNc1EwRkJRenRaUVVOa0xGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTTdXVUZEY2tJc1VVRkJVU3hIUVVGSExFZEJRVWNzUTBGQlF6dFpRVU5tTEZGQlFWRXNSMEZCUnl4VFFVRlRMRU5CUVVNN1UwRkRlRUk3UzBGRFNqdEpRVU5FTEVsQlFVa3NVMEZCVXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVOQlFVTTdVVUZEYmtNc1NVRkJTU3hEUVVGRExIZEVRVUYzUkN4RFFVRkRMRU5CUVVNN1NVRkRia1VzU1VGQlNTeFJRVUZSTEVsQlFVa3NVMEZCVXp0UlFVTnlRaXhKUVVGSkxFTkJRVU1zZFVSQlFYVkVMRU5CUVVNc1EwRkJRenRKUVVOc1JTeEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRkZCUVZFc1EwRkJRenRSUVVOb1FpeEpRVUZKTEVOQlFVTXNjMFJCUVhORUxFTkJRVU1zUTBGQlF6dEpRVU5xUlN4SlFVRkpMRkZCUVZFc1NVRkJTU3hUUVVGVE8xRkJRM0pDTEVsQlFVa3NRMEZCUXl4MVJFRkJkVVFzUTBGQlF5eERRVUZETzBsQlEyeEZMRk5CUVZNc1IwRkJSeXhEUVVGRExFTkJRVU03U1VGRFpDeFJRVUZSTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUTNKQ0xGRkJRVkVzUjBGQlJ5eFRRVUZUTEVOQlFVTTdTVUZEY2tJc1VVRkJVU3hIUVVGSExGTkJRVk1zUTBGQlF6dEpRVU55UWl4TlFVRk5MRWxCUVVrc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRXRCUVVzc1JVRkJSU3hSUVVGUkxFVkJRVVVzVVVGQlVTeEZRVUZGTEZGQlFWRXNSVUZCUlN4UlFVRlJMRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeEhRVUZITEVWQlFVVXNVMEZCVXl4RlFVRkZMRU5CUVVNN1NVRkROVWNzVDBGQlR5eEpRVUZKTEVOQlFVTTdRMEZEWmp0QlFVTkVMRk5CUVZNc1pVRkJaU3hEUVVGRExFdEJRVXNzUlVGQlJUdEpRVU0xUWl4TlFVRk5MRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03U1VGRGFFSXNUVUZCVFN4SFFVRkhMRWRCUVVjc1EwRkJReXhEUVVGRExFZEJRVWNzUlVGQlJTeExRVUZMTEVkQlFVY3NRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhWUVVGVkxFTkJRVU03U1VGRE9VTXNUVUZCVFN4WlFVRlpMRWRCUVVjc1EwRkJReXhEUVVGRExGRkJRVkVzUjBGQlJ5eERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRkZCUVZFc1JVRkJSU3hIUVVGSExFZEJRVWNzUTBGQlF6dEpRVU01UkN4TlFVRk5MRXRCUVVzc1IwRkJSeXhMUVVGTExFZEJRVWNzU1VGQlNTeEhRVUZITEVkQlFVY3NSMEZCUnl4SlFVRkpMRWRCUVVjc1IwRkJSeXhEUVVGRE8wbEJRemxETEUxQlFVMHNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTXNRMEZCUXl4TFFVRkxMRVZCUVVVc1VVRkJVU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNVVUZCVVN4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExGRkJRVkVzU1VGQlNTeERRVUZETEVWQlFVVXNVVUZCVVN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zVVVGQlVTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRExFTkJRVU03U1VGRGNFZ3NUMEZCVHl4RlFVRkZMRXRCUVVzc1JVRkJSU3hOUVVGTkxFVkJRVVVzUTBGQlF6dERRVU0xUWp0QlFVTkVMRWxCUVVrc1RVRkJUU3hEUVVGRE8wRkJRMWdzUTBGQlF5eFZRVUZWTEUxQlFVMHNSVUZCUlR0SlFVTm1MRWxCUVVrc1VVRkJVU3hIUVVGSExFdEJRVXNzUTBGQlF6dEpRVU55UWl4VFFVRlRMRWxCUVVrc1IwRkJSenRSUVVOYUxFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNZMEZCWXl4RlFVRkZMRTFCUVUwN1dVRkROVUlzVVVGQlVTeEhRVUZITEVsQlFVa3NRMEZCUXp0VFFVTnVRaXhEUVVGRExFTkJRVU03UzBGRFRqdEpRVU5FTEUxQlFVMHNRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRE8wbEJRMjVDTEZOQlFWTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hOUVVGTkxFZEJRVWNzVFVGQlRTeEhRVUZITEVWQlFVVXNTMEZCU3l4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFZEJRVWNzUlVGQlJUdFJRVU0xUkN4SlFVRkpMRU5CUVVNc1VVRkJVVHRaUVVOVUxFOUJRVThzUzBGQlN5eERRVUZETzFGQlEycENMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETzFsQlEySXNVVUZCVVN4RlFVRkZMRkZCUVZFN1dVRkRiRUlzUzBGQlN5eEZRVUZGTERoRFFVRTRRenRaUVVOeVJDeGhRVUZoTEVWQlFVVXNRMEZCUXl3d1JFRkJNRVFzUTBGQlF6dFRRVU01UlN4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zU1VGQlNUdFpRVU5VTEUxQlFVMHNSVUZCUlN4RFFVRkRPMWxCUTFRc1NVRkJTU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEdWQlFXVXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJReXhIUVVGSExFVkJRVVU3WjBKQlF6ZERMRTFCUVUwc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF6dFpRVU4wUWl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExHVkJRV1VzUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhWUVVGVkxFdEJRVXM3WjBKQlF6TkVMRWxCUVVrc1ZVRkJWVHR2UWtGRFZpeE5RVUZOTEVOQlFVTXNVVUZCVVN4RlFVRkZMRU5CUVVNN08yOUNRVVZzUWl4TlFVRk5MRU5CUVVNc1UwRkJVeXhGUVVGRkxFTkJRVU03WVVGRE1VSXNRMEZCUXl4RFFVRkRPMU5CUTA0c1EwRkJReXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVsQlFVazdXVUZEVml4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRFdpeERRVUZETEVOQlFVTTdVVUZEU0N4UFFVRlBMRWxCUVVrc1EwRkJRenRMUVVObU8wbEJRMFFzVFVGQlRTeERRVUZETEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNN1NVRkRia0lzVTBGQlV5eFpRVUZaTEVkQlFVYzdVVUZEY0VJc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eGxRVUZsTEVWQlFVVXNRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJRenRMUVVONlF6dEpRVU5FTEUxQlFVMHNRMEZCUXl4WlFVRlpMRWRCUVVjc1dVRkJXU3hEUVVGRE8wbEJRMjVETEUxQlFVMHNRMEZCUXl4UlFVRlJMRWRCUVVjc1RVRkJUU3hIUVVGSExFTkJRVU03U1VGRE5VSXNUVUZCVFN4RFFVRkRMRk5CUVZNc1IwRkJSeXhOUVVGTkxFZEJRVWNzUTBGQlF6dEpRVU0zUWl4VFFVRlRMRkZCUVZFc1EwRkJReXhOUVVGTkxFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNTMEZCU3l4TFFVRkxMRWRCUVVjc1JVRkJSU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZPMUZCUTNSRkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmxCUVZrc1EwRkJReXhIUVVGSExFTkJRVU03V1VGRGFFTXNZVUZCWVN4RlFVRkZMRTFCUVUwN1UwRkRlRUlzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWxCUVVrc1UwRkJVeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFbEJRVWtzU1VGQlNTeFRRVUZUTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1EwRkJReXhWUVVGVkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVWQlFVVXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4SFFVRkhMRWxCUVVrc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRMUVVOMlNqdEpRVU5FTEUxQlFVMHNRMEZCUXl4UlFVRlJMRWRCUVVjc1VVRkJVU3hEUVVGRE8wbEJRek5DTEZOQlFWTXNWMEZCVnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hMUVVGTExFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNUVUZCVFN4TFFVRkxMRWRCUVVjc1JVRkJSU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZPMUZCUTJwR0xFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmxCUVZrc1EwRkJReXhOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETzFsQlEzWkRMR0ZCUVdFc1JVRkJSU3hOUVVGTk8xbEJRM0pDTEV0QlFVc3NSVUZCUlN4TFFVRkxPMWxCUTFvc2FVSkJRV2xDTEVWQlFVVXNVMEZCVXp0VFFVTXZRaXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NTVUZCU1N4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4SFFVRkhMRWxCUVVrc1MwRkJTeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRMUVVOb1JqdEpRVU5FTEZOQlFWTXNVVUZCVVN4RFFVRkRMRTFCUVUwc1JVRkJSU3hMUVVGTExFVkJRVVVzVTBGQlV5eEhRVUZITEVOQlFVTXNUVUZCVFN4TFFVRkxMRWRCUVVjc1JVRkJSU3hMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NSMEZCUnl4RlFVRkZPMUZCUXpsRkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmxCUVZrc1EwRkJReXhOUVVGTkxFTkJRVU1zUjBGQlJ5eERRVUZETzFsQlEzWkRMR0ZCUVdFc1JVRkJSU3hOUVVGTk8xbEJRM0pDTEV0QlFVc3NSVUZCUlN4TFFVRkxPMWxCUTFvc2FVSkJRV2xDTEVWQlFVVXNiVUpCUVcxQ08xTkJRM3BETEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhKUVVGSkxGTkJRVk1zUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhGUVVGRkxFZEJRVWNzU1VGQlNTeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETzB0QlEyaEdPMGxCUTBRc1UwRkJVeXhoUVVGaExFTkJRVU1zUzBGQlN5eEZRVUZGTEZOQlFWTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1MwRkJTeXhIUVVGSExFVkJRVVVzUzBGQlN5eEhRVUZITEVOQlFVTXNRMEZCUXl4TFFVRkxMRWRCUVVjc1JVRkJSVHRSUVVNeFJTeE5RVUZOTEUxQlFVMHNSMEZCUnl4TFFVRkxMRU5CUVVNc1RVRkJUU3hEUVVGRE8xRkJRelZDTEUxQlFVMHNVMEZCVXl4SFFVRkhMRWRCUVVjc1IwRkJSeXhMUVVGTExFTkJRVU1zVlVGQlZTeEhRVUZITEVkQlFVY3NRMEZCUXp0UlFVTXZReXhOUVVGTkxGZEJRVmNzUjBGQlJ5eFRRVUZUTEVkQlFVY3NTMEZCU3l4RFFVRkRPMUZCUTNSRExGRkJRVkVzUTBGQlF5eE5RVUZOTEVWQlFVVXNWMEZCVnl4RlFVRkZMRXRCUVVzc1NVRkJTVHRaUVVOdVF5eE5RVUZOTEUxQlFVMHNSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRja01zU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRVZCUVVVN1owSkJRMllzUzBGQlN5eERRVUZETEhOR1FVRnpSaXhEUVVGRExFTkJRVU03WjBKQlF6bEdMRTlCUVU4N1lVRkRWanRaUVVORUxFMUJRVTBzVlVGQlZTeEhRVUZITEZOQlFWTXNSMEZCUnl4UFFVRlBMRWxCUVVrc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzFsQlEzUkVMRmRCUVZjc1EwRkJReXhOUVVGTkxFVkJRVVVzVlVGQlZTeEZRVUZGTEV0QlFVc3NTVUZCU1R0blFrRkRja01zU1VGQlNTeFJRVUZSTEVkQlFVY3NSVUZCUlN4RFFVRkRPMmRDUVVOc1FpeE5RVUZOTEV0QlFVc3NSMEZCUnl4TFFVRkxMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNTMEZCU3p0dlFrRkRiRU1zUzBGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4TFFVRkxMRU5CUVVNc1RVRkJUU3hGUVVGRkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZPM2RDUVVOcVF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRE8yOUNRVU51UWl4SlFVRkpMRWxCUVVrc1IwRkJSeXhEUVVGRExFTkJRVU1zUzBGQlN5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dHZRa0ZEZEVRc1QwRkJUeXhYUVVGWExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETzJsQ1FVTnFSQ3hEUVVGRExFTkJRVU03WjBKQlEwZ3NTVUZCU1N4UlFVRlJMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU03YjBKQlEyNUNMRXRCUVVzc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN08yOUNRVVV6UWl4VFFVRlRMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03WVVGRGVFSXNSVUZCUlN4RFFVRkRMRWxCUVVrc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVMEZEY2tJc1JVRkJSU3hEUVVGRExFbEJRVWtzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1MwRkRja0k3U1VGRFJDeE5RVUZOTEVOQlFVTXNZVUZCWVN4SFFVRkhMR0ZCUVdFc1EwRkJRenRKUVVOeVF5eFRRVUZUTEZWQlFWVXNRMEZCUXl4TFFVRkxMRVZCUVVVc1UwRkJVeXhIUVVGSExFMUJRVTBzUjBGQlJ5eEZRVUZGTEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhIUVVGSExFVkJRVVU3VVVGRGJFVXNTVUZCU1N4SFFVRkhMRWRCUVVjc1NVRkJTU3hIUVVGSExFVkJRVVVzUTBGQlF6dFJRVU53UWl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zU1VGQlNUdFpRVU5tTEUxQlFVMHNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETzFsQlF6bENMRWxCUVVrc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTTdaMEpCUTJZc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03TzJkQ1FVVjRRaXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03VTBGRE5VSXNRMEZCUXl4RFFVRkRPMUZCUTBnc1IwRkJSeXhEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETEV0QlFVc3NSVUZCUlN4TlFVRk5MRXRCUVVzN1dVRkRNMElzYlVKQlFXMUNMRU5CUVVNc1RVRkJUU3hGUVVGRkxFdEJRVXNzUlVGQlJTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RFFVRkRMRU5CUVVNN1UwRkRlRVFzUTBGQlF5eERRVUZETzB0QlEwNDdTVUZEUkN4TlFVRk5MRU5CUVVNc1ZVRkJWU3hIUVVGSExGVkJRVlVzUTBGQlF6dEpRVU12UWl4VFFVRlRMRzFDUVVGdFFpeERRVUZETEUxQlFVMHNSVUZCUlN4TFFVRkxMRVZCUVVVc1UwRkJVeXhIUVVGSExFMUJRVTBzUjBGQlJ5eEZRVUZGTEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVVNc1MwRkJTeXhIUVVGSExFVkJRVVU3VVVGRGJrWXNTVUZCU1N4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1NVRkJTU3hOUVVGTkxFTkJRVU03V1VGRGVrTXNUVUZCVFN4TFFVRkxMRU5CUVVNN1VVRkRhRUlzU1VGQlNTeE5RVUZOTEVkQlFVY3NSVUZCUlN4aFFVRmhMRVZCUVVVc1RVRkJUU3hGUVVGRkxFTkJRVU03VVVGRGRrTXNTVUZCU1N4SlFVRkpMRWRCUVVjN1dVRkRVQ3huUWtGQlowSXNSVUZCUlN4TFFVRkxPMWxCUTNaQ0xFbEJRVWtzUlVGQlJTeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1NVRkJTU3hsUVVGbExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdVMEZETTBNc1EwRkJRenRSUVVOR0xFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmxCUVZrc1EwRkJReXhOUVVGTkxFTkJRVU1zVjBGQlZ5eERRVUZETEUxQlFVMHNSVUZCUlN4SlFVRkpMRU5CUVVNN1lVRkRNMFFzU1VGQlNTeERRVUZETEVOQlFVTXNTVUZCU1N4VFFVRlRMRVZCUVVVc1JVRkJSU3hEUVVGRExFbEJRVWtzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1MwRkRPVU03UTBGRFNpeEZRVUZGTEUxQlFVMHNTMEZCU3l4TlFVRk5MRWRCUVVjc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU0xUWl4TlFVRk5MRlZCUVZVc1IwRkJSeXhGUVVGRkxFTkJRVU03UVVGRGRFSXNUVUZCVFN4UlFVRlJMRU5CUVVNN1NVRkRXQ3hYUVVGWExFTkJRVU1zVFVGQlRTeEZRVUZGTzFGQlEyaENMRWxCUVVrc1EwRkJReXhSUVVGUkxFZEJRVWNzVTBGQlV5eERRVUZETzFGQlF6RkNMRWxCUVVrc1EwRkJReXhOUVVGTkxFZEJRVWNzVFVGQlRTeERRVUZETzFGQlEzSkNMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlF6dExRVU5tTzBsQlEwUXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRSUVVOV0xFbEJRVWtzVDBGQlR6dFpRVU5RTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03VVVGRGVrSXNTVUZCU1N4RFFVRkRMRTlCUVU4N1dVRkRVaXhKUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTzJkQ1FVTmlMRTFCUVUwc1MwRkJTeXhEUVVGRE8xRkJRM0JDTEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRSUVVOYUxFbEJRVWtzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRWxCUVVrc1EwRkJRenRaUVVOMlFpeFBRVUZQTEVWQlFVVXNUVUZCVFN4RlFVRkZMRVZCUVVVc1JVRkJSU3hQUVVGUExFVkJRVVVzWjBKQlFXZENMRVZCUVVVc1EwRkJRenRSUVVOeVJDeEJRVU5CTEUxQlFVMHNZMEZCWXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hMUVVGTExFbEJRVWtzUTBGQlF5eExRVUZMTEVsQlFVa3NVVUZCVVR0WlFVTnVSQ3hSUVVGUkxFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1IwRkJSeXhSUVVGUkxFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJRenRSUVVONlJTeEpRVUZKTEdOQlFXTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVTdXVUZEYUVNc1RVRkJUU3hOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhGUVVGRkxGVkJRVlVzUTBGQlF5eERRVUZETzFsQlEyaEVMRTFCUVUwc1QwRkJUeXhIUVVGSExHbENRVUZwUWl4RFFVRkRPMWxCUTJ4RExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRE8xbEJRMnBFTEVsQlFVa3NRMEZCUXl4UlFVRlJMRWRCUVVjc1RVRkJUU3hEUVVGRE8xbEJRM1pDTEU5QlFVOHNSVUZCUlN4TlFVRk5MRVZCUVVVc1QwRkJUeXhGUVVGRkxFTkJRVU03VTBGRE9VSTdZVUZEU1R0WlFVTkVMRTFCUVUwc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1JVRkJSU3hWUVVGVkxFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEYUVZc1RVRkJUU3hQUVVGUExFZEJRVWNzV1VGQldTeERRVUZETzFsQlF6ZENMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMWxCUTJwRUxFbEJRVWtzUTBGQlF5eFJRVUZSTEVkQlFVY3NUVUZCVFN4RFFVRkRPMWxCUTNaQ0xFOUJRVThzUlVGQlJTeE5RVUZOTEVWQlFVVXNUMEZCVHl4RlFVRkZMRU5CUVVNN1UwRkRPVUk3UzBGRFNqdEpRVU5FTEUxQlFVMHNRMEZCUXl4UFFVRlBMRVZCUVVVN1VVRkRXaXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRTdXVUZEWkN4TlFVRk5MRXRCUVVzc1EwRkJRenRSUVVOb1FpeEpRVUZKTEU5QlFVOHNRMEZCUXl4TlFVRk5MRWxCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eE5RVUZOTzFsQlEzUkRMRTFCUVUwc1MwRkJTeXhEUVVGRE8xRkJRMmhDTEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTXNTMEZCU3p0WlFVTm9ReXhOUVVGTkxFMUJRVTBzUjBGQlJ5eFBRVUZQTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1dVRkRNVUlzVFVGQlRTeEhRVUZITEVkQlFVY3NTVUZCU1N4SlFVRkpMRVZCUVVVc1EwRkJRenRaUVVOMlFpeEpRVUZKTEUxQlFVMHNSVUZCUlR0blFrRkRVaXhMUVVGTExFTkJRVU1zVTBGQlV5eEhRVUZITEVOQlFVTXNRMEZCUXp0blFrRkRjRUlzVFVGQlRTeE5RVUZOTEVkQlFVY3NRMEZCUXl4SFFVRkhMRWxCUVVrc1IwRkJSeXhGUVVGRkxFZEJRVWNzUlVGQlJTeEhRVUZITEVWQlFVVXNRMEZCUXp0blFrRkRka01zU1VGQlNTeExRVUZMTEVOQlFVTXNVVUZCVVN4RlFVRkZPMjlDUVVOb1FpeE5RVUZOTEZkQlFWY3NSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhQUVVGUExFVkJRVVVzUjBGQlJ5eExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRkRMRTlCUVU4c1JVRkJSU3hKUVVGSkxFZEJRVWNzUTBGQlF6dHZRa0ZEY2tVc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRPMmxDUVVOc1JUdHhRa0ZEU1R0dlFrRkRSQ3hMUVVGTExFTkJRVU1zVVVGQlVTeEhRVUZITEUxQlFVMHNRMEZCUXp0cFFrRkRNMEk3WjBKQlEwUXNTMEZCU3l4RFFVRkRMRXRCUVVzc1IwRkJSeXhQUVVGUExFTkJRVU03WVVGRGVrSTdhVUpCUTBrN1owSkJRMFFzUzBGQlN5eERRVUZETEZOQlFWTXNSVUZCUlN4RFFVRkRPMmRDUVVOc1FpeExRVUZMTEVOQlFVTXNVVUZCVVN4SFFVRkhMRU5CUVVNc1EwRkJRenRuUWtGRGJrSXNTMEZCU3l4RFFVRkRMRXRCUVVzc1IwRkJSeXhMUVVGTExFTkJRVU1zUzBGQlN5eEpRVUZKTEZGQlFWRXNSMEZCUnl4UFFVRlBMRWRCUVVjc1UwRkJVeXhEUVVGRE8yRkJReTlFTzFsQlEwUXNTMEZCU3l4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTTdXVUZEYUVNc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ5eEhRVUZITEVOQlFVTTdXVUZEY2tJc1MwRkJTeXhEUVVGRExGRkJRVkVzUjBGQlJ5eEpRVUZKTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1QwRkJUeXhGUVVGRkxFZEJRVWNzUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRPMWxCUXpGRUxFdEJRVXNzUTBGQlF5eEhRVUZITEVsQlFVa3NVVUZCVVN4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zU1VGQlNTeE5RVUZOTEVkQlFVY3NSMEZCUnl4SFFVRkhMRWRCUVVjc1EwRkJReXhIUVVGSExFZEJRVWNzUTBGQlF6dFRRVU12UkN4RFFVRkRMRU5CUVVNN1VVRkRTQ3hOUVVGTkxFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1RVRkJUU3hQUVVGUExFTkJRVU1zUjBGQlJ5eERRVUZETEdkQ1FVRm5RaXhEUVVGRExFVkJRVVVzUTBGQlF5eEpRVUZKTEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1lVRkJZU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdTMEZETjBjN1NVRkRSQ3hKUVVGSkxFZEJRVWM3VVVGRFNDeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEV0QlFVczdXVUZEZGtJc1RVRkJUU3hOUVVGTkxFZEJRVWNzUTBGQlF5eERRVUZETEV0QlFVc3NTVUZCU1N4UlFVRlJMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eExRVUZMTEVsQlFVa3NVMEZCVXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03V1VGRGRFVXNUVUZCVFN4TlFVRk5MRWRCUVVjc1EwRkJReXhEUVVGRExFdEJRVXNzU1VGQlNTeFJRVUZSTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFbEJRVWtzVTBGQlV5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1dVRkRkRVVzU1VGQlNTeE5RVUZOTEVsQlFVa3NUVUZCVFR0blFrRkRhRUlzVDBGQlR5eE5RVUZOTEVkQlFVY3NUVUZCVFN4RFFVRkRPMWxCUXpOQ0xFbEJRVWtzUTBGQlF5eERRVUZETEV0QlFVc3NTVUZCU1N4UlFVRlJMRWxCUVVrc1EwRkJReXhEUVVGRExFdEJRVXNzU1VGQlNTeFJRVUZSTzJkQ1FVTXhReXhQUVVGUExFTkJRVU1zUTBGQlF5eFRRVUZUTEVkQlFVY3NRMEZCUXl4RFFVRkRMRk5CUVZNc1EwRkJRenRaUVVOeVF5eE5RVUZOTEVkQlFVY3NSMEZCUnl4UlFVRlJMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU1zUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0WlFVTTVSU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETzJkQ1FVTlNMRTlCUVU4c1IwRkJSeXhEUVVGRE96dG5Ra0ZGV0N4UFFVRlBMRU5CUVVNc1EwRkJReXhUUVVGVExFZEJRVWNzUTBGQlF5eERRVUZETEZOQlFWTXNRMEZCUXp0VFFVTjRReXhEUVVGRExFTkJRVU03UzBGRFRqdERRVU5LTzBGQlEwUXNUVUZCVFN4RFFVRkRMRTFCUVUwN1NVRkRWQ3hOUVVGTkxGRkJRVkVzUjBGQlJ5eEpRVUZKTEdsQ1FVRnBRaXhEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzBsQlEyNUVMRTFCUVUwc1VVRkJVU3hIUVVGSExFbEJRVWtzVVVGQlVTeEZRVUZGTEVOQlFVTTdTVUZEYUVNc1RVRkJUU3hSUVVGUkxFZEJRVWNzU1VGQlNTeHBRa0ZCYVVJc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dEpRVU5xUkN4TlFVRk5MRkZCUVZFc1IwRkJSeXhKUVVGSkxHVkJRV1VzUTBGQlF5eFZRVUZWTEVWQlFVVXNVVUZCVVN4RFFVRkRMRU5CUVVNN1NVRkRNMFFzVFVGQlRTeFJRVUZSTEVkQlFVY3NTVUZCU1N4bFFVRmxMRU5CUVVNc1VVRkJVU3hGUVVGRkxGRkJRVkVzUTBGQlF5eERRVUZETzBsQlEzcEVMRTFCUVUwc1VVRkJVU3hIUVVGSExFbEJRVWtzVlVGQlZTeEZRVUZGTEVOQlFVTTdTVUZEYkVNc1RVRkJUU3hSUVVGUkxFZEJRVWNzU1VGQlNTeFBRVUZQTEVWQlFVVXNRMEZCUXp0SlFVTXZRaXhQUVVGUExFTkJRVU1zUlVGQlJTeERRVUZETEZkQlFWY3NRMEZCUXl4RlFVRkZMRTFCUVUwN1VVRkRNMElzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4cFJVRkJhVVVzUTBGQlF6dFpRVU16UlN4UFFVRlBPMUZCUTFnc1VVRkJVU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzFGQlEycENMRkZCUVZFc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dFJRVU5xUWl4TFFVRkxMRU5CUVVNc1ZVRkJWU3hEUVVGRExFTkJRVU03VVVGRGJFSXNUVUZCVFN4RFFVRkRMRkZCUVZFc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF6dExRVU0xUWl4RFFVRkRMRU5CUVVNN1NVRkRTQ3hSUVVGUkxFTkJRVU1zVDBGQlR5eEhRVUZITEVsQlFVa3NTVUZCU1R0UlFVTjJRaXhSUVVGUkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTTdVVUZEYUVJc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVXNUVUZCVFR0WlFVTndRaXhSUVVGUkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMWxCUXpkQ0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0VFFVTnVRaXhGUVVGRkxFTkJRVU1zU1VGQlNUdFpRVU5LTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdXVUZEZWtJc1VVRkJVU3hEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETzFOQlEzSkNMRU5CUVVNc1EwRkJRenRMUVVOT0xFTkJRVU03U1VGRFJpeFJRVUZSTEVOQlFVTXNUMEZCVHl4SFFVRkhMRTFCUVUwN1VVRkRja0lzVFVGQlRTeERRVUZETEZsQlFWa3NSVUZCUlN4RFFVRkRPMHRCUTNwQ0xFTkJRVU03U1VGRFJpeE5RVUZOTEVOQlFVTXNVVUZCVVN4SFFVRkhMRTFCUVUwN1VVRkRjRUlzVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMUZCUTJoQ0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0TFFVTnVRaXhEUVVGRE8wbEJRMFlzVFVGQlRTeERRVUZETEZOQlFWTXNSMEZCUnl4TlFVRk5PMUZCUTNKQ0xFdEJRVXNzUTBGQlF5eGhRVUZoTEVOQlFVTXNRMEZCUXp0TFFVTjRRaXhEUVVGRE8wbEJRMFlzU1VGQlNTeFBRVUZQTEVkQlFVY3NVMEZCVXl4RFFVRkRPMGxCUTNoQ0xGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NTVUZCU1N4SlFVRkpPMUZCUTNaQ0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0UlFVTm9RaXhOUVVGTkxFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkxMRWxCUVVrN1dVRkRNMElzVVVGQlVTeERRVUZETEdGQlFXRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRaUVVNM1FpeFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8xbEJRM0pDTEU5QlFVOHNSMEZCUnl4TFFVRkxMRU5CUVVNN1UwRkRia0lzUlVGQlJTeERRVUZETEVsQlFVazdXVUZEU2l4TFFVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMWxCUTNwQ0xGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXp0VFFVTnVRaXhEUVVGRExFTkJRVU03UzBGRFRpeERRVUZETzBsQlEwWXNTVUZCU1N4UlFVRlJMRWRCUVVjc1UwRkJVeXhEUVVGRE8wbEJRM3BDTEZGQlFWRXNRMEZCUXl4UlFVRlJMRWRCUVVjc1NVRkJTU3hKUVVGSk8xRkJRM2hDTEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVc1EwRkJRenRSUVVOb1FpeE5RVUZOTEVOQlFVTXNZVUZCWVN4RFFVRkRMRWxCUVVrc1JVRkJSU3hMUVVGTExFbEJRVWs3V1VGRGFFTXNVVUZCVVN4SFFVRkhMRWxCUVVrc1VVRkJVU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETzFsQlF5OUNMRTFCUVUwc1RVRkJUU3hIUVVGSExFTkJRVU1zVDBGQlR5eExRVUZMTzJkQ1FVTjRRaXhKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTzI5Q1FVTllMRTFCUVUwc1MwRkJTeXhEUVVGRE8ybENRVU5tTzJkQ1FVTkVMRTFCUVUwc1JVRkJSU3hOUVVGTkxFVkJRVVVzVDBGQlR5eEZRVUZGTEVkQlFVY3NVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dG5Ra0ZEYmtRc1VVRkJVU3hEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNUMEZCVHl4RFFVRkRMRU5CUVVNN1lVRkRiRU1zUTBGQlF6dFpRVU5HTEZGQlFWRXNRMEZCUXl4TlFVRk5MRWRCUVVjc1RVRkJUU3hEUVVGRE8xbEJRM3BDTEUxQlFVMHNSVUZCUlN4RFFVRkRPMU5CUTFvc1JVRkJSU3hEUVVGRExFbEJRVWs3V1VGRFNpeEpRVUZKTEU5QlFVOHNRMEZCUXl4SlFVRkpMRkZCUVZFN1owSkJRM0JDTEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenM3WjBKQlJWUXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0WlFVTTNRaXhKUVVGSkxFOUJRVTg3WjBKQlExQXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6czdaMEpCUlhaQ0xFMUJRVTBzUzBGQlN5eERRVUZETzFOQlEyNUNMRU5CUVVNc1EwRkJRenRMUVVOT0xFTkJRVU03U1VGRFJpeFJRVUZSTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNN1NVRkRhRUlzVFVGQlRTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPMGxCUTJRc1RVRkJUU3hEUVVGRExGRkJRVkVzUTBGQlF5eEhRVUZITEUxQlFVMHNRMEZCUXp0RFFVTTNRaXhEUVVGRExFTkJRVU1pZlE9PSJ9
